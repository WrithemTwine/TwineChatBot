<Window x:Class="StreamerBot.StreamerBotWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:s="clr-namespace:StreamerBot.Properties"
        xmlns:GUI="clr-namespace:StreamerBot.GUI"
        mc:Ignorable="d"
        Title="Streamer Bot Manager" Height="770" Width="1020"
        Loaded="Window_Loaded" Closing="OnWindowClosing">
    <Window.Resources>
        <ResourceDictionary>
            <GUI:GUITwitchBots x:Name="TwitchBot" x:Key="TwitchBot" />
            <GUI:GUIDataManagerViews x:Name="DataViews" x:Key="DataViews" />
            <GUI:GUIMultiLiveDataManager x:Name="MultiLiveDataManager" x:Key="MultiLiveDataManager" />

            <Style TargetType="{x:Type DockPanel}">
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Width" Value="100" />
                <Setter Property="Height" Value="30" />
            </Style>
            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Margin" Value="5" />
                <Setter Property="Width" Value="230" />
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Margin" Value="5" />
                <EventSetter Event="Click" Handler="CheckBox_Click_SaveSettings" />
            </Style>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Margin" Value="10,5,0,5" />
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Padding" Value="5,0" />
            </Style>
            <Style TargetType="{x:Type DataGrid}">
                <Setter Property="AlternationCount" Value="1" />
                <Setter Property="AlternatingRowBackground" Value="#FFDBFFF4"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="AutoGenerateColumns" Value="True" />
                <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserDeleteRows" Value="False" />
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Culture/GUI_Msgs.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal" />
                </Style>
            </StatusBar.Resources>
            <StatusBarItem>
                <StackPanel>
                    <Label>All Viewers (Users):</Label>
                    <Label Content="{Binding Users.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator Width="1" />
            <StatusBarItem>
                <StackPanel>
                    <Label>
                        <Label.ToolTip>When a viewers stops following, not currently updated real-time. Bot startup option manages followers.</Label.ToolTip>
                        <Label.Content>Followers:</Label.Content>
                    </Label>
                    <Label Content="{Binding Followers.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator Width="1" />
            <StatusBarItem>
                <StackPanel>
                    <Label>Commands- Built-in:</Label>
                    <Label Content="{Binding BuiltInCommands.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <StackPanel>
                    <Label>User-Defined:</Label>
                    <Label Content="{Binding Commands.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator Width="1" />
            <ComboBoxItem x:Name="StatusBar_GoLiveCombo" IsEnabled="False" Visibility="Collapsed" />
        </StatusBar>
        <TabControl DockPanel.Dock="Top" TabStripPlacement="Left">
            <TabItem Header="Bots">
                <TabControl>
                    <TabItem Header="Start">
                        <StackPanel>
                            <TextBlock>The bot credentials form needs to be completed with at least client id and access token.<LineBreak />The LiveStreamMonitor Service will allow monitoring multiple channels if the &quot;MultiUserLiveBot&quot; is running or started, but functionality <LineBreak />stops when the separate "MultiUserLiveBot" process starts.
                                    <LineBreak />For optimal operation, don't turn start and stop the bots rapidly - allow some time between each operation.
                            </TextBlock>
                            <WrapPanel>
                                <GroupBox Header="LiveStream Monitor Service">
                                    <StackPanel Orientation="Vertical">
                                        <WrapPanel>
                                            <Label x:Name="Label_TwitchMultiLive_Start" Foreground="Green" Visibility="Collapsed">
                                                <TextBlock>The Twitch LiveStream Monitor Client is started!</TextBlock>
                                            </Label>
                                            <Label x:Name="Label_TwitchMultiLive_Stop" Foreground="Maroon" Visibility="Visible">
                                                <TextBlock>The Twitch LiveStream Monitor Client is stopped!</TextBlock>
                                            </Label>
                                            <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchLiveStreamSvcAutoStart}" >
                                                <TextBlock>Auto-start when application starts</TextBlock>
                                            </CheckBox>
                                            <RadioButton DataContext="{Binding TwitchLiveMonitor, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_LiveBotStart" Content="Start Live Monitor Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" />
                                            <!--Checked="Radio_Twitch_LiveBotStart_Checked"-->

                                            <RadioButton DataContext="{Binding TwitchLiveMonitor, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_LiveBotStop" Content="Stop Live Monitor Bot" IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                            <!--Checked="Radio_Twitch_LiveBotStop_Checked"-->
                                            <Label x:Name="Label_TwitchMultiLive_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                                <TextBlock>The Twitch MultiLive Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                            </Label>
                                        </WrapPanel>
                                        <GroupBox Header="MultiLive Monitoring Bot" Width="Auto">
                                            <WrapPanel Orientation="Vertical">
                                                <Label x:Name="Label_LiveStream_MultiLiveActiveMsg" Foreground="Maroon" Visibility="Collapsed">
                                                    <TextBlock>The MultiUserLiveBot is active, single channel activated.</TextBlock>
                                                </Label>
                                                <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchMultiLiveAutoStart}">
                                                    <TextBlock>Auto-start when application starts</TextBlock>
                                                </CheckBox>
                                                <RadioButton x:Name="Radio_MultiLiveTwitch_StartBot" Content="Start Bot" IsEnabled="False" HorizontalAlignment="Left" />
                                                <!--PreviewMouseDown="BC_MultiLiveTwitch_StartBot"-->
                                                <RadioButton x:Name="Radio_MultiLiveTwitch_StopBot" Content="Stop Bot"  IsChecked="True" IsEnabled="False" Width="70" HorizontalAlignment="Left" />
                                                <!--PreviewMouseDown="BC_MultiLiveTwitch_StopBot"-->
                                            </WrapPanel>
                                        </GroupBox>
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox Header="Follower Service">
                                    <WrapPanel>
                                        <Label x:Name="Label_TwitchFollow_Start" Foreground="Green" Visibility="Collapsed">
                                            <TextBlock TextWrapping="Wrap"><Run Text="The Twitch Follower Client is started!"/></TextBlock>
                                        </Label>
                                        <Label x:Name="Label_TwitchFollow_Stop" Foreground="Maroon" Visibility="Visible">
                                            <TextBlock TextWrapping="Wrap"><Run Text="The Twitch Follower Client is stopped!"/></TextBlock>
                                        </Label>
                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchFollowerSvcAutoStart}">
                                            <TextBlock TextWrapping="Wrap"><Run Text="Auto-start when application starts"/></TextBlock>
                                        </CheckBox>
                                        <RadioButton DataContext="{Binding TwitchFollower, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_FollowBotStart" Content="Start Follower Service Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" />
                                        <RadioButton DataContext="{Binding TwitchFollower, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_FollowBotStop" Content="Stop Follower Service Bot"  IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                        <Label x:Name="Label_TwitchFollow_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                            <TextBlock>The Twitch Follow Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                        </Label>
                                    </WrapPanel>
                                </GroupBox>
                                <GroupBox DockPanel.Dock="Top" x:Name="BC_T_groupBox" Header="ChatBot" BorderBrush="#FF212D34">
                                    <WrapPanel Orientation="Horizontal" >
                                        <Label x:Name="Label_TwitchChat_Start" Foreground="Green" Visibility="Collapsed">
                                            <TextBlock>The Twitch Chat Client is started!</TextBlock>
                                        </Label>
                                        <Label x:Name="Label_TwitchChat_Stop" Foreground="Maroon" Visibility="Visible">
                                            <TextBlock>The Twitch Chat Client is stopped!</TextBlock>
                                        </Label>
                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchChatBotAutoStart}" LostFocus="Settings_LostFocus" >
                                            <TextBlock>Auto-start when application starts</TextBlock>
                                        </CheckBox>
                                        <RadioButton DataContext="{Binding TwitchIO, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_StartBot" Content="Start Chat Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown"  />
                                        <RadioButton DataContext="{Binding TwitchIO, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_StopBot" Content="Stop Chat Bot" IsChecked="True" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                        <Label x:Name="Label_TwitchChat_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                            <TextBlock>The Twitch Chat Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                        </Label>

                                        <Label Height="Auto">
                                            <TextBlock TextWrapping="Wrap">Start and Stop bot when stream goes online! Depends on Live Monitor Bot being active and the detection time - when the stream is detected online is when the Chat Bot would start.</TextBlock>
                                        </Label>
                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchChatBotConnectOnline}" LostFocus="Settings_LostFocus" >
                                            <TextBlock>Connect bot when stream goes online</TextBlock>
                                        </CheckBox>
                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchChatBotDisconnectOffline}" LostFocus="Settings_LostFocus" >
                                            <TextBlock>Disconnect bot when stream goes offline</TextBlock>
                                        </CheckBox>
                                    </WrapPanel>
                                </GroupBox>

                                <GroupBox Header="Clip Service">
                                    <WrapPanel>
                                        <Label x:Name="Label_TwitchClip_Start" Foreground="Green" Visibility="Collapsed">
                                            <TextBlock TextWrapping="Wrap">The Twitch Clip Client is started!</TextBlock>
                                        </Label>
                                        <Label x:Name="Label_TwitchClip_Stop" Foreground="Maroon" Visibility="Visible">
                                            <TextBlock TextWrapping="Wrap">The Twitch Clip Client is stopped!</TextBlock>
                                        </Label>
                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchClipAutoStart}">
                                            <TextBlock TextWrapping="Wrap">Auto-start when application starts</TextBlock>
                                        </CheckBox>
                                        <RadioButton DataContext="{Binding TwitchClip, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_ClipBotStart" Content="Start Clip Service Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" />
                                        <RadioButton DataContext="{Binding TwitchClip, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_ClipBotStop" Content="Stop Clip Service Bot"  IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                        <Label x:Name="Label_TwitchClip_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                            <TextBlock>The Twitch Clip Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                        </Label>
                                    </WrapPanel>
                                </GroupBox>
                            </WrapPanel>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Twitch">
                        <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                            <DockPanel HorizontalAlignment="Left" ScrollViewer.CanContentScroll="True">
                                <StackPanel DockPanel.Dock="Left" DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" Width="450" ScrollViewer.CanContentScroll="True">
                                    <TextBlock>The bot credentials form needs to be completed with at least client id and access token.
                                    </TextBlock>
                                    <TextBlock x:Uid="ExpiredToken" x:Name="TextBlock_ExpiredCredentialsMsg" Foreground="#FFF71553" FontSize="18" HorizontalAlignment="Center" MaxWidth="550" TextAlignment="Center" Visibility="Collapsed" Text="{DynamicResource ExpiredToken}" />
                                    <GroupBox Header="Bot Account" Width="Auto">
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                <Label Content="Channel Name" Width="110" />
                                                <TextBox x:Name="TB_Twitch_Channel" Text="{Binding TwitchChannelName}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll"/>
                                            </StackPanel>
                                            <TextBlock Width="300" Text="* This Chat Bot only supports communicating to one channel through the Channel Name." TextWrapping="Wrap" FontSize="8" FontStretch="SemiCondensed" />
                                            <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                <Label Content="Bot User Name" Width="110" />
                                                <TextBox x:Name="TB_Twitch_BotUser" Text="{Binding TwitchBotUserName, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                <Button x:Name="Btn_Twitch_RefreshDate" Content="Refresh Due Date" Width="110" ToolTip="Click this button to set a 60 day due date from today, to show when the 'access token' needs refreshed." Click="RefreshButton_Click" LostFocus="Settings_LostFocus" />
                                                <Label x:Name="Twitch_RefreshDate" Content="{Binding TwitchRefreshDate, FallbackValue=1/1/1900, Mode=TwoWay, StringFormat=MM/dd/yyyy}" Width="200" />
                                            </StackPanel>

                                            <Expander x:Name="Expander_Credentials" Header="Credentials (Click me)" ExpandDirection="Down" IsExpanded="False">
                                                <StackPanel>
                                                    <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                        <Label Content="Client Id" Width="120" />
                                                        <TextBox x:Name="TB_Twitch_ClientID" Text="{Binding TwitchClientID, Mode=TwoWay}" Width="250" ToolTip="The client ID for the bot user account."  LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll"/>
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" Margin="10,0">
                                                        <Label Content="Token Scope" />
                                                        <TextBox BorderBrush="Blue" BorderThickness="1" TextWrapping="Wrap" Width="328" Height="42" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll">bits:read chat:read chat:edit channel:moderate user:read:broadcast user:edit:follows</TextBox>
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                        <Label Content="Access OAuth Token" Width="120" />
                                                        <TextBox x:Name="TB_Twitch_AccessToken" Text="{Binding TwitchAccessToken, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll"/>
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                        <Label Content="Refresh Token" Width="120" />
                                                        <TextBox x:Name="TB_Twitch_RefreshToken" Text="{Binding TwitchRefreshToken, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll"/>
                                                    </StackPanel>

                                                </StackPanel>
                                            </Expander>
                                        </StackPanel>
                                    </GroupBox>
                                    <WrapPanel DockPanel.Dock="Top" HorizontalAlignment="Center" DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}">
                                        <GroupBox Header="Setup Follower Operations" Width="Auto">
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label Content="Seconds between checking for new follows:"/>
                                                    <Label Content="{Binding Value, ElementName=Slider_TimeFollowerPollSeconds}" />
                                                </StackPanel>
                                                <Slider x:Name="Slider_TimeFollowerPollSeconds" Height="40" Width="407" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for new followers. Smaller values increases traffic to your channel." Value="{Binding TwitchFrequencyFollow, Mode=TwoWay}" Maximum="300" Minimum="5" SmallChange="1" SelectionStart="5" SelectionEnd="300" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="50" TickFrequency="5" />
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Setup Clip Operations" Width="Auto">
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label Content="Seconds between checking for new follows:"/>
                                                    <Label Content="{Binding Value, ElementName=Slider_TimeClipPollSeconds}" />
                                                </StackPanel>
                                                <Slider x:Name="Slider_TimeClipPollSeconds" Height="40" Width="407" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for new clips. Smaller values increases traffic to your channel." Value="{Binding TwitchFrequencyClipTime, Mode=TwoWay}" Maximum="1200" Minimum="5" SmallChange="1" SelectionStart="5" SelectionEnd="1200" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="50" TickFrequency="5"  />
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Setup Go-Live Notifications" Width="Auto">
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label Content="Seconds between checking for going live: " />
                                                    <Label Content="{Binding Value, ElementName=Slider_TimeGoLivePollSeconds}" />
                                                </StackPanel>
                                                <Slider x:Name="Slider_TimeGoLivePollSeconds" Height="40" Width="422" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for a change in channel state: going live, updated stream, and going offline. Smaller values increases traffic to your channel." Value="{Binding TwitchGoLiveFrequency, Mode=TwoWay}" Maximum="3600" Minimum="5" SmallChange="10" SelectionStart="5" SelectionEnd="3600" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="100" TickFrequency="10"  />
                                            </StackPanel>
                                        </GroupBox>
                                    </WrapPanel>
                                </StackPanel>
                            </DockPanel>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Data" DataContext="{Binding Mode=OneWay, Source={StaticResource DataViews}}">
                <DockPanel>
                    <TabControl>
                        <TabItem x:Name="TabItem_DataOptions" Header="Options">
                            <TabItem.Resources>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </TabItem.Resources>
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <DockPanel Margin="10" DataContext="{Binding Source={x:Static s:Settings.Default}}" HorizontalAlignment="Center" ScrollViewer.CanContentScroll="True">
                                    <WrapPanel Orientation="Horizontal">
                                        <GroupBox Header="Any - Bot Management">
                                            <StackPanel>
                                                <CheckBox IsChecked="{Binding MsgBotConnection, Mode=TwoWay}">
                                                    <TextBlock><Run Text="Enable bot welcome message when connected to stream channel."/></TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding PostMultiLive, Mode=TwoWay}">
                                                    <TextBlock><Run Text="Enable posting to social media (e.g. Discord) multiple live messages in same day."/></TextBlock>
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Any - Automatic Commands by Timer">
                                            <StackPanel Margin="5">
                                                <CheckBox IsChecked="{Binding RepeatWhenLive, Mode=TwoWay}" >
                                                    <TextBlock><Run Text="Enable Repeat commands only when live."/></TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding RepeatTimerCommands, Mode=TwoWay}">
                                                    <CheckBox.ToolTip>
                                                        <TextBlock>Add 'seconds' (whole number, e.g. 600) to the repeat timer column within the command list. Timer updates after the command runs.</TextBlock>
                                                    </CheckBox.ToolTip>
                                                    <TextBlock>Enable repeating commands.</TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding RepeatTimerComSlowdown, Mode=TwoWay}">
                                                    <CheckBox.ToolTip>
                                                        <TextBlock>The repeating commands will slow down by up to 2x the specified time. The commands will return/unwind to normal speed when chat is very active. The specs for normal operation speed are about: at least 10+ viewers an hour or over 20 viewer chats in 15 minutes.</TextBlock>
                                                    </CheckBox.ToolTip>
                                                    <TextBlock>Enable smart slow-down repeating commands</TextBlock>
                                                </CheckBox>
                                                <TextBlock Visibility="Collapsed">TODO: add option spot for bot AI responses to encourage streamer when chatting is slow, and back away when stream has faster chatting.</TextBlock>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Any - Welcome Viewers">
                                            <StackPanel>
                                                <Label Content="Only once per user per active stream (no repeats)" />
                                                <RadioButton IsChecked="{Binding WelcomeDisabled, Mode=TwoWay}">
                                                    <TextBlock Text="{DynamicResource Disabled}" />
                                                </RadioButton>
                                                <RadioButton IsChecked="{Binding WelcomeUserJoined, Mode=TwoWay}">
                                                    <TextBlock Text="Enable when viewer joins the channel" />
                                                </RadioButton>
                                                <RadioButton IsChecked="{Binding WelcomeChatMsg, Mode=TwoWay}">
                                                    <TextBlock Text="Enable when a viewer first chats" />
                                                </RadioButton>
                                                <CheckBox IsChecked="{Binding MsgWelcomeStreamer, Mode=TwoWay}">
                                                    <TextBlock Text="Enable welcome message when streamer chats" />
                                                </CheckBox>
                                                <Line Fill="Black" StrokeThickness="1" Stroke="Black" X2="200" HorizontalAlignment="Center" />
                                                <TextBlock Text="Customize Welcome Messages - Welcome New Viewer, Returning Viewer, and Followers/Subscribers" />
                                                <CheckBox IsChecked="{Binding WelcomeCustomMsg, Mode=TwoWay}">
                                                    <TextBlock Text="Enable" />
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>

                                        <GroupBox Header="Twitch - Format Bot messages">
                                            <StackPanel>
                                                <Label Content="/me changes message to all italics" />
                                                <RadioButton x:Uid="Disabled" IsChecked="{Binding MsgNoMe, Mode=TwoWay}" Content="{DynamicResource Disabled}" />
                                                <RadioButton IsChecked="{Binding MsgInsertMe, Mode=TwoWay}" Content="Enable /me for all commands" />
                                                <RadioButton IsChecked="{Binding MsgPerComMe, Mode=TwoWay}" Content="Enable /me per command" />
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Twitch - Shout Out Viewers">
                                            <StackPanel>
                                                <Label>
                                                    <TextBlock>Active when channel is live</TextBlock>
                                                </Label>
                                                <CheckBox IsChecked="{Binding MsgAutoShout, Mode=TwoWay}">
                                                    <TextBlock>Auto shoutout viewers when they first appear (tied to 'Welcome Viewers'. Add names to &quot;Auto SO&quot; tab.</TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding TwitchRaidShoutOut}">
                                                    <TextBlock>Enable auto shoutout for incoming channel raid streamers</TextBlock>
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Twitch - Follow Options">
                                            <StackPanel>
                                                <CheckBox IsChecked="{Binding TwitchAddFollowersStart, Mode=TwoWay}" ToolTip="Will also re-perform when clicking 'Stop Bot' then 'Start Bot'.">
                                                    <TextBlock TextWrapping="Wrap">Enable adding all followers when bot starts.</TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding TwitchPruneNonFollowers, Mode=TwoWay}" ToolTip="Will also re-perform when clicking 'Stop Bot' then 'Start Bot'.">
                                                    <TextBlock TextWrapping="Wrap">Enable action to remove non-followers from the Follower list when bot starts.</TextBlock>
                                                </CheckBox>                                                
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Twitch - Stream Clips">
                                            <StackPanel>
                                                <CheckBox IsChecked="{Binding TwitchClipPostChat, Mode=TwoWay}">
                                                    <TextBlock>Post new clips to chat.</TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding TwitchClipPostDiscord}">
                                                    <TextBlock>Post new clips to Discord. Must have "Clips" Webhook(s) defined.</TextBlock>
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Twitch - Currency System">
                                            <StackPanel>
                                                <CheckBox IsChecked="{Binding TwitchCurrencyStart, Mode=TwoWay}">
                                                    <TextBlock>Enable Currency Accrual - still permits adding currencies</TextBlock>
                                                </CheckBox>
                                                <CheckBox x:Name="CheckBox_CurrencyOnline" IsChecked="{Binding TwitchCurrencyOnline, Mode=TwoWay}" Visibility="Collapsed">
                                                    <TextBlock>Enable Currency Accrual only when Streaming Online</TextBlock>
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Any - Data Management">
                                            <GroupBox.Resources>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <EventSetter Event="Click" Handler="CheckBox_ManageData_Click" />
                                                </Style>
                                            </GroupBox.Resources>
                                            <StackPanel>
                                                <Label>
                                                    <TextBlock Foreground="Red">*Unchecking will remove data from database.*</TextBlock>
                                                </Label>
                                                <CheckBox x:Name="CheckBox_ManageUsers" IsChecked="{Binding ManageUsers}">
                                                    <TextBlock TextWrapping="Wrap">Manage channel viewers, including their watchtime.*</TextBlock>
                                                </CheckBox>
                                                <CheckBox x:Name="CheckBox_ManageFollowers" IsChecked="{Binding ManageFollowers}">
                                                    <TextBlock TextWrapping="Wrap">Manage channel followers, including their followage. Requires User data.*</TextBlock>
                                                </CheckBox>
                                                <CheckBox x:Name="CheckBox_ManageStreamStat" IsChecked="{Binding ManageStreamStats}">
                                                    <TextBlock TextWrapping="Wrap">Record Stream Stats for each stream.*</TextBlock>
                                                </CheckBox>
                                                <CheckBox x:Name="CheckBox_ManageRaidData" IsChecked="{Binding ManageRaidData}">
                                                    <TextBlock TextWrapping="Wrap">Record Raid Stats for incoming raids.*</TextBlock>
                                                </CheckBox>
                                                <Label>
                                                    <TextBlock Foreground="Red">*Unchecking will remove data from database.*</TextBlock>
                                                </Label>
                                            </StackPanel>
                                        </GroupBox>


                                        <!-- Settings Template
                                
                                <GroupBox Header="Twitch -">
                                    <StackPanel>
                                        <CheckBox IsChecked="{Binding AutoShout, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Auto </TextBlock>
                                        </CheckBox>
                                        <CheckBox IsChecked="{Binding TwitchRaidShoutOut}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Enable </TextBlock>
                                        </CheckBox>
                                    </StackPanel>
                                </GroupBox>
                                
                                -->
                                    </WrapPanel>
                                </DockPanel>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Variable Options">
                            <ListView DockPanel.Dock="Right" ItemsSource="{Binding CommandInfo.Collection}" >
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn DisplayMemberBinding="{Binding Parameter}" Header="Parameter" Width="150"/>
                                        <GridViewColumn DisplayMemberBinding="{Binding Value}" Header="Value" Width="600"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </TabItem>
                        <TabItem Header="Auto-SO">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="450" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="When 'Auto shout out' is enabled in options, displaynames in this list will receive a shout-out upon entering the channel - when Twitch tells me they're here."/>
                                <DataGrid Grid.Row="1" ItemsSource="{Binding ShoutOuts, Mode=OneWay}" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />
                            </Grid>
                        </TabItem>
                        <TabItem Header="User Data" x:Name="TabItem_Users">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Label Grid.Row="0" Content="User List"/>
                                <Button x:Name="Button_ClearWatchTime" Content="Reset WatchTime" Grid.Row="0" Height="20" Width="120" Click="Button_ClearWatchTime_Click" />
                                <Label Grid.Row="0" Grid.Column="2" Content="Follower List" />
                                <DataGrid x:Name="DG_Users" ItemsSource="{Binding Users, Mode=OneWay}" Grid.Row="1" Grid.Column="0" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns"/>

                                <DataGrid x:Name="DG_Followers" ItemsSource="{Binding Followers, Mode=OneWay}" CanUserDeleteRows="True" Grid.Row="1" Grid.Column="2" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Stream Stats" x:Name="TabItem_StreamStats">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" Grid.Row="0">
                                    <Button Content="Add Random Test Stream" Height="20" Margin="10,0" ToolTip="Will activate in debug mode, won't post to social media." Click="StartDebugStream_Click"/>
                                    <Button Content="Stop Random Test Stream" Height="20" Margin="10,0" Click="EndDebugStream_Click" />
                                </StackPanel>
                                <DataGrid Grid.Row="1" ItemsSource="{Binding StreamStats, Mode=OneWay}" CanUserDeleteRows="True" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />
                            </Grid>
                        </TabItem>
                        <TabItem IsEnabled="False" />
                        <TabItem Header="MultiLive Monitor">
                            <Grid x:Name="TabItem_MultiUserLiveMonitor">
                                <Grid.Resources>
                                    <Style TargetType="DataGrid">
                                        <Setter Property="Margin" Value="5"/>
                                        <Setter Property="MaxColumnWidth" Value="160" />
                                        <Setter Property="AlternationCount" Value="1" />
                                        <Setter Property="AlternatingRowBackground" Value="#FFDBFFF4" />
                                        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
                                        <Setter Property="CanUserAddRows" Value="False" />
                                        <EventSetter Event="MouseEnter" Handler="DataGrid_MouseEnter" />
                                        <EventSetter Event="MouseLeave" Handler="DataGrid_MouseLeave" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.DataContext>
                                    <Binding Mode="OneWay" Source="{StaticResource MultiLiveDataManager}"/>
                                </Grid.DataContext>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50" />
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="298*" />
                                    <ColumnDefinition Width="52"/>
                                    <ColumnDefinition Width="100"  />
                                    <ColumnDefinition Width="52"/>
                                    <ColumnDefinition Width="293*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock TextWrapping="Wrap" Grid.Row="0" Padding="3"><Run Text="Use this tab to set up which channels (only first 100) to watch for going live and where to post messages. Currently only Discord."/></TextBlock>
                                <Label Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Foreground="Red" Visibility="{Binding Visibility, ElementName=Label_LiveStream_MultiLiveActiveMsg}">
                                    <TextBlock TextWrapping="Wrap"><Run Text="The MultiUserLiveBot is active, single channel activated."/></TextBlock>
                                </Label>
                                <TextBlock TextWrapping="Wrap" Grid.Row="0" Grid.Column="4" Text="Message for Live Notification:" />
                                <TextBox x:Name="TB_LiveMsg" Grid.Row="0" Grid.Column="4" VerticalContentAlignment="Top" 
                             DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" Text="{Binding MsgLive}" 
                             TextAlignment="Left" TextWrapping="Wrap" LostFocus="Settings_LostFocus" Margin="0,16,0,0">
                                    <TextBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="#user" Click="MenuItem_Click" />
                                            <MenuItem Header="#category" Click="MenuItem_Click" />
                                            <MenuItem Header="#title" Click="MenuItem_Click" />
                                            <MenuItem Header="#url" Click="MenuItem_Click" />
                                        </ContextMenu>
                                    </TextBox.ContextMenu>
                                    <TextBox.ToolTip>
                                        <TextBlock><Run Text="Use these tags within the message and it'll be replaced before sending the posted live message."/><LineBreak /><Run Text="Available by right-click menu - insert at cursor."/><LineBreak /><Run Text="&quot;#user&quot; - channel name of the user"/><LineBreak /><Run Text="&quot;#category&quot; - the category of the stream"/><LineBreak /><Run Text="&quot;#title&quot; - the title of the stream when it goes live"/><LineBreak /><Run Text="&quot;#url&quot; - to send someone to the Twitch channel, it's already prepared &quot; twitch.tv/user &quot;"/><LineBreak /><LineBreak /><Run Text="Example: @everyone, #user is now live streaming #category - #title! Come join and say hi at: #url"/></TextBlock>
                                    </TextBox.ToolTip>
                                </TextBox>

                                <DataGrid x:Name="DG_Multi_WebHooks" Grid.Row="1" Grid.RowSpan="2" DataContext="{Binding MultiLiveDataManager}" 
                              ItemsSource="{Binding MsgEndPoints, Mode=OneWay}" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding"  />
                                <DataGrid x:Name="DG_Multi_ChannelNames" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" DataContext="{Binding MultiLiveDataManager}" 
                              ItemsSource="{Binding Channels, Mode=OneWay}" RowEditEnding="DG_ChannelNames_RowEditEnding" InitializingNewItem="DataGrid_InitializingNewItem" />
                                <DataGrid x:Name="DG_Multi_LiveStreamStats" Grid.Column="4" Grid.Row="1" Grid.RowSpan="2" DataContext="{Binding MultiLiveDataManager}" ItemsSource="{Binding LiveStream, Mode=TwoWay}" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />

                                <DockPanel x:Name="Panel_BotActivity" Grid.Row="1" Grid.Column="4" Visibility="Collapsed">
                                    <Label DockPanel.Dock="Top" Content="Log of Bot Activity:" />
                                    <TextBox DockPanel.Dock="Bottom" x:Name="TB_BotActivityLog" Margin="5" TextWrapping="Wrap" Background="#FFEEEEEE" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" VerticalScrollBarVisibility="Visible" IsInactiveSelectionHighlightEnabled="True" TextChanged="TB_BotActivityLog_TextChanged" Text="{Binding MultiLiveStatusLog}" DataContext="{Binding MultiLiveDataManager, Mode=OneWay}" />
                                </DockPanel>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </DockPanel>
            </TabItem>
            <TabItem Header="Logs">
                <TabControl>
                    <TabItem Header="Twitch Status">

                    </TabItem>
                </TabControl>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
