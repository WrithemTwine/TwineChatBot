<Window x:Class="StreamerBot.StreamerBotWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:s="clr-namespace:StreamerBot.Properties"
        xmlns:GUI="clr-namespace:StreamerBot.GUI" xmlns:Static="clr-namespace:StreamerBot.Static"
        mc:Ignorable="d"
        Title="Streamer Bot Manager" Height="770" Width="1020"
        Loaded="Window_Loaded" Closing="OnWindowClosing" UseLayoutRounding="True">
    <Window.Resources>
        <ResourceDictionary>
            <GUI:GUITwitchBots x:Name="TwitchBot" x:Key="TwitchBot" />
            <GUI:GUIDataManagerViews x:Name="DataViews" x:Key="DataViews" />
            <Static:MsgVarHelp x:Name="CommandInfo" x:Key="CommandInfo" />

            <Style TargetType="{x:Type DockPanel}">
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="MinWidth" Value="50" />
                <Setter Property="Height" Value="30" />
            </Style>
            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Margin" Value="5" />
                <Setter Property="Width" Value="230" />
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Margin" Value="5" />
                <EventSetter Event="Click" Handler="CheckBox_Click_SaveSettings" />
            </Style>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Margin" Value="10,5,0,5" />
                <EventSetter Event="Click" Handler="CheckBox_Click_SaveSettings" />
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Padding" Value="5,0" />
            </Style>
            <Style TargetType="{x:Type DataGrid}">
                <Setter Property="AlternationCount" Value="1" />
                <Setter Property="AlternatingRowBackground" Value="#FFDBFFF4"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="AutoGenerateColumns" Value="True" />
                <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserDeleteRows" Value="False" />
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Culture/GUI_Msgs.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal" />
                </Style>
            </StatusBar.Resources>
            <StatusBar.DataContext>
                <Binding Mode="OneWay" Source="{StaticResource DataViews}"/>
            </StatusBar.DataContext>
            <StatusBarItem>
                <StackPanel>
                    <Label>All Viewers (Users):</Label>
                    <Label Content="{Binding Users.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator Width="1" />
            <StatusBarItem>
                <StackPanel>
                    <Label>
                        <Label.ToolTip>Select options to manage followers. Currently not updated in real-time when a follower stops following.</Label.ToolTip>
                        <Label.Content>Current Followers:</Label.Content>
                    </Label>
                    <Label Content="{Binding CurrFollowers.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator Width="1" />
            <StatusBarItem>
                <StackPanel>
                    <Label>Built-in Commands:</Label>
                    <Label Content="{Binding BuiltInCommands.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <StackPanel>
                    <Label>User-Defined Commands:</Label>
                    <Label Content="{Binding Commands.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator Width="1" />
            <ComboBoxItem x:Name="StatusBar_GoLiveCombo" IsEnabled="False" Visibility="Collapsed" />
        </StatusBar>
        <TabControl DockPanel.Dock="Top" TabStripPlacement="Left">
            <TabItem Header="Bots">
                <TabControl>
                    <TabItem Header="Start">
                        <StackPanel>
                            <TextBlock>The bot credentials form needs to be completed with at least client id and access token.<LineBreak />The LiveStreamMonitor Service will allow monitoring multiple channels if the &quot;MultiUserLiveBot&quot; is running or started, but functionality <LineBreak />stops when the separate "MultiUserLiveBot" process starts.
                                    <LineBreak />For optimal operation, don't turn start and stop the bots rapidly - allow some time between each operation.
                            </TextBlock>
                            <WrapPanel>
                                <GroupBox Header="LiveStream Monitor Service">
                                    <StackPanel Orientation="Vertical">
                                        <WrapPanel>
                                            <Label x:Name="Label_TwitchMultiLive_Start" Foreground="Green" Visibility="Collapsed">
                                                <TextBlock>The Twitch LiveStream Monitor Client is started!</TextBlock>
                                            </Label>
                                            <Label x:Name="Label_TwitchMultiLive_Stop" Foreground="Maroon" Visibility="Visible">
                                                <TextBlock>The Twitch LiveStream Monitor Client is stopped!</TextBlock>
                                            </Label>
                                            <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchLiveStreamSvcAutoStart}" >
                                                <TextBlock>Auto-start when application starts</TextBlock>
                                            </CheckBox>
                                            <RadioButton DataContext="{Binding TwitchLiveMonitor, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_LiveBotStart" Content="Start Live Monitor Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" Checked="Radio_Twitch_LiveBotStart_Checked"/>
                                            <RadioButton DataContext="{Binding TwitchLiveMonitor, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_LiveBotStop" Content="Stop Live Monitor Bot" IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" Checked="Radio_Twitch_LiveBotStop_Checked"/>
                                            <Label x:Name="Label_TwitchMultiLive_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                                <TextBlock>The Twitch MultiLive Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                            </Label>
                                        </WrapPanel>
                                        <GroupBox Header="MultiLive Monitoring Bot" Width="Auto">
                                            <WrapPanel Orientation="Vertical">
                                                <Label x:Name="Label_LiveStream_MultiLiveActiveMsg" Foreground="Maroon" Visibility="Collapsed">
                                                    <TextBlock>The MultiUserLiveBot is active, single channel activated.</TextBlock>
                                                </Label>
                                                <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchMultiLiveAutoStart}">
                                                    <TextBlock>Auto-start when application starts</TextBlock>
                                                </CheckBox>
                                                <RadioButton x:Name="Radio_MultiLiveTwitch_StartBot" Content="Start Bot" IsEnabled="False" HorizontalAlignment="Left" PreviewMouseDown="BC_MultiLiveTwitch_StartBot"/>
                                                <RadioButton x:Name="Radio_MultiLiveTwitch_StopBot" Content="Stop Bot"  IsChecked="True" IsEnabled="False" Width="70" HorizontalAlignment="Left" PreviewMouseDown="BC_MultiLiveTwitch_StopBot"/>
                                            </WrapPanel>
                                        </GroupBox>
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox Header="Follower Service">
                                    <WrapPanel>
                                        <Label x:Name="Label_TwitchFollow_Start" Foreground="Green" Visibility="Collapsed">
                                            <TextBlock TextWrapping="Wrap"><Run Text="The Twitch Follower Client is started!"/></TextBlock>
                                        </Label>
                                        <Label x:Name="Label_TwitchFollow_Stop" Foreground="Maroon" Visibility="Visible">
                                            <TextBlock TextWrapping="Wrap"><Run Text="The Twitch Follower Client is stopped!"/></TextBlock>
                                        </Label>
                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchFollowerSvcAutoStart}">
                                            <TextBlock TextWrapping="Wrap"><Run Text="Auto-start when application starts"/></TextBlock>
                                        </CheckBox>
                                        <RadioButton DataContext="{Binding TwitchFollower, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_FollowBotStart" Content="Start Follower Service Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" />
                                        <RadioButton DataContext="{Binding TwitchFollower, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_FollowBotStop" Content="Stop Follower Service Bot"  IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                        <Label x:Name="Label_TwitchFollow_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                            <TextBlock>The Twitch Follow Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                        </Label>
                                    </WrapPanel>
                                </GroupBox>
                                <GroupBox DockPanel.Dock="Top" x:Name="BC_T_groupBox" Header="ChatBot" BorderBrush="#FF212D34">
                                    <WrapPanel Orientation="Horizontal" >
                                        <Label x:Name="Label_TwitchChat_Start" Foreground="Green" Visibility="Collapsed">
                                            <TextBlock>The Twitch Chat Client is started!</TextBlock>
                                        </Label>
                                        <Label x:Name="Label_TwitchChat_Stop" Foreground="Maroon" Visibility="Visible">
                                            <TextBlock>The Twitch Chat Client is stopped!</TextBlock>
                                        </Label>
                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchChatBotAutoStart}" LostFocus="Settings_LostFocus" >
                                            <TextBlock>Auto-start when application starts</TextBlock>
                                        </CheckBox>
                                        <RadioButton DataContext="{Binding TwitchIO, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_StartBot" Content="Start Chat Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown"  />
                                        <RadioButton DataContext="{Binding TwitchIO, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_StopBot" Content="Stop Chat Bot" IsChecked="True" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                        <Label x:Name="Label_TwitchChat_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                            <TextBlock>The Twitch Chat Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                        </Label>

                                        <Label Height="Auto">
                                            <TextBlock TextWrapping="Wrap">Start and Stop bot when stream goes online! Depends on Live Monitor Bot being active and the detection time - when the stream is detected online is when the Chat Bot would start.</TextBlock>
                                        </Label>
                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchChatBotConnectOnline}" LostFocus="Settings_LostFocus" >
                                            <TextBlock>Connect bot when stream goes online</TextBlock>
                                        </CheckBox>
                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchChatBotDisconnectOffline}" LostFocus="Settings_LostFocus" >
                                            <TextBlock>Disconnect bot when stream goes offline</TextBlock>
                                        </CheckBox>
                                    </WrapPanel>
                                </GroupBox>

                                <GroupBox Header="Clip Service">
                                    <WrapPanel>
                                        <Label x:Name="Label_TwitchClip_Start" Foreground="Green" Visibility="Collapsed">
                                            <TextBlock TextWrapping="Wrap">The Twitch Clip Client is started!</TextBlock>
                                        </Label>
                                        <Label x:Name="Label_TwitchClip_Stop" Foreground="Maroon" Visibility="Visible">
                                            <TextBlock TextWrapping="Wrap">The Twitch Clip Client is stopped!</TextBlock>
                                        </Label>
                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchClipAutoStart}">
                                            <TextBlock TextWrapping="Wrap">Auto-start when application starts</TextBlock>
                                        </CheckBox>
                                        <RadioButton DataContext="{Binding TwitchClip, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_ClipBotStart" Content="Start Clip Service Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" />
                                        <RadioButton DataContext="{Binding TwitchClip, Mode=OneWay, Source={StaticResource TwitchBot}}" x:Name="Radio_Twitch_ClipBotStop" Content="Stop Clip Service Bot"  IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                        <Label x:Name="Label_TwitchClip_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                            <TextBlock>The Twitch Clip Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                        </Label>
                                    </WrapPanel>
                                </GroupBox>
                            </WrapPanel>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Twitch">
                        <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                            <WrapPanel HorizontalAlignment="Left" Width="Auto" Height="Auto" DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <GroupBox Header="Bot Account" Width="Auto" DockPanel.Dock="Left">
                                    <StackPanel>
                                        <TextBlock x:Uid="ExpiredToken" x:Name="TextBlock_ExpiredCredentialsMsg" Foreground="#FFF71553" FontSize="18" HorizontalAlignment="Center" MaxWidth="550" TextAlignment="Center" Visibility="Collapsed" Text="{DynamicResource ExpiredToken}" />
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Label Content="Channel Name" Width="110" />
                                            <TextBox x:Name="TB_Twitch_Channel" Text="{Binding TwitchChannelName}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll"/>
                                        </StackPanel>
                                        <TextBlock Width="300" Text="* This Chat Bot only supports communicating to one channel through the Channel Name." TextWrapping="Wrap" FontSize="8" FontStretch="SemiCondensed" />
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Label Content="Bot User Name" Width="110" />
                                            <TextBox x:Name="TB_Twitch_BotUser" Text="{Binding TwitchBotUserName, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Button x:Name="Btn_Twitch_RefreshDate" Content="Refresh Due Date" Width="110" ToolTip="Click this button to set a 60 day due date from today, to show when the 'access token' needs refreshed." Click="RefreshButton_Click" LostFocus="Settings_LostFocus" />
                                            <Label x:Name="Twitch_RefreshDate" Content="{Binding TwitchRefreshDate, FallbackValue=1/1/1900, Mode=TwoWay, StringFormat=MM/dd/yyyy}" Width="200" />
                                        </StackPanel>
                                        <Expander x:Name="Expander_Credentials" Header="Credentials (Click me)" ExpandDirection="Down" IsExpanded="False">
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                    <Label Content="Client Id" Width="120" />
                                                    <TextBox x:Name="TB_Twitch_ClientID" Text="{Binding TwitchClientID, Mode=TwoWay}" Width="245" ToolTip="The client ID for the bot user account."  LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="10,0">
                                                    <Label Content="Token Scope" Width="120" />
                                                    <TextBox BorderBrush="Blue" BorderThickness="1" TextWrapping="Wrap" Width="245" Height="60" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll">bits:read chat:read chat:edit channel:moderate user:read:broadcast user:edit:follows</TextBox>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                    <Label Content="Access OAuth Token" Width="120" />
                                                    <TextBox x:Name="TB_Twitch_AccessToken" Text="{Binding TwitchAccessToken, Mode=TwoWay}" Width="245" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                    <Label Content="Refresh Token" Width="120" />
                                                    <TextBox x:Name="TB_Twitch_RefreshToken" Text="{Binding TwitchRefreshToken, Mode=TwoWay}" Width="245" LostFocus="Settings_LostFocus" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll"/>
                                                </StackPanel>

                                            </StackPanel>
                                        </Expander>
                                    </StackPanel>
                                </GroupBox>
                                <Expander Header="{DynamicResource CredentialsHeader}" IsExpanded="{Binding CredentialsHelpExpanded, Mode=OneWay}" ScrollViewer.CanContentScroll="True" Width="500">
                                    <FlowDocumentScrollViewer Margin="10" VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                                        <FlowDocument FontSize="12" PagePadding="5">
                                            <Section>
                                                <Paragraph>
                                                    <Run Text="{DynamicResource CredentialsIntro}"/>
                                                    <LineBreak/>
                                                    <LineBreak/>
                                                    <Run Text="{DynamicResource CredentialsSettings}"/>
                                                </Paragraph>
                                                <Paragraph>
                                                    <Run Text="{DynamicResource CredentialsOAuth}"/>
                                                    <LineBreak />
                                                    <LineBreak />
                                                    <Run Text="{DynamicResource CredentialsOAuthManual}"/>
                                                </Paragraph>
                                            </Section>
                                            <Section>
                                                <List>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="{DynamicResource CredentialsBotAccount}"/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="{DynamicResource CredentialsVisit}"/>
                                                            <InlineUIContainer>
                                                                <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="{DynamicResource CredentialsLinkTwitchConsole}"/>
                                                            </InlineUIContainer>
                                                            <Run Text="{DynamicResource CredentialsTwitchAppRegister}"/>
                                                        </Paragraph>
                                                        <List>
                                                            <ListItem>
                                                                <Paragraph>
                                                                    <Run Text="{DynamicResource CredentialsTwitchAppName}"/>
                                                                </Paragraph>
                                                            </ListItem>
                                                            <ListItem>
                                                                <Paragraph>
                                                                    <Run Text="Add:"/>
                                                                    <LineBreak />
                                                                    <InlineUIContainer>
                                                                        <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="{DynamicResource CredentialsLinkTwitchTokenGen}"/>
                                                                    </InlineUIContainer>
                                                                    <Run Text="{DynamicResource CredentialsTwitchAcctOAuthRedirect}"/>
                                                                </Paragraph>
                                                            </ListItem>
                                                            <ListItem>
                                                                <Paragraph>
                                                                    <Run Text="{DynamicResource CredentialsTwitchAppCreate}"/>
                                                                </Paragraph>
                                                            </ListItem>
                                                            <ListItem>
                                                                <Paragraph>
                                                                    <Run Text="{DynamicResource CredentialsTwitchClientId}"/>
                                                                </Paragraph>
                                                            </ListItem>
                                                        </List>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="{DynamicResource CredentialsAccessTokens}"/>
                                                            <InlineUIContainer>
                                                                <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="{DynamicResource CredentialsLinkTwitchTokenGen}"/>
                                                            </InlineUIContainer>
                                                        </Paragraph>
                                                        <List>
                                                            <ListItem>
                                                                <Paragraph>
                                                                    <Run Text="{DynamicResource CredentialsTwitchPasteClientId}"/>
                                                                    <Italic>
                                                                        <Run Text="{DynamicResource CredentialsLinkTwitchConsole}"/>
                                                                    </Italic>
                                                                    <Run Text=" ."/>
                                                                </Paragraph>
                                                            </ListItem>
                                                            <ListItem>
                                                                <Paragraph>
                                                                    <Run Text="{DynamicResource CredentialsTwitchPasteScopes}"/>
                                                                    <LineBreak />
                                                                    <InlineUIContainer>
                                                                        <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" TextWrapping="Wrap" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="{DynamicResource CredentialsTwitchScopes}"/>
                                                                    </InlineUIContainer>
                                                                    <LineBreak />
                                                                    <Run Text="{DynamicResource CredentialsTwitchScopesExplained}"/>
                                                                </Paragraph>
                                                            </ListItem>
                                                            <ListItem>
                                                                <Paragraph>
                                                                    <Run Text="{DynamicResource CredentialsTwitchAcctConnectClientIds}"/>
                                                                </Paragraph>
                                                            </ListItem>
                                                            <ListItem>
                                                                <Paragraph>
                                                                    <Run Text="{DynamicResource CredentialsTwitchRefreshDate}"/>
                                                                </Paragraph>
                                                            </ListItem>
                                                        </List>
                                                    </ListItem>
                                                </List>
                                            </Section>
                                        </FlowDocument>
                                    </FlowDocumentScrollViewer>
                                </Expander>
                                <GroupBox Header="Setup Follower Operations" Width="Auto" DockPanel.Dock="Left">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Seconds between checking for new follows:"/>
                                            <Label Content="{Binding Value, ElementName=Slider_TimeFollowerPollSeconds}" />
                                        </StackPanel>
                                        <Slider x:Name="Slider_TimeFollowerPollSeconds" Height="40" Width="407" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for new followers. Smaller values increases traffic to your channel." Value="{Binding TwitchFrequencyFollow, Mode=TwoWay}" Maximum="300" Minimum="5" SmallChange="1" SelectionStart="5" SelectionEnd="300" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="50" TickFrequency="5" />
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox Header="Setup Clip Operations" Width="Auto" DockPanel.Dock="Left">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Seconds between checking for new follows:"/>
                                            <Label Content="{Binding Value, ElementName=Slider_TimeClipPollSeconds}" />
                                        </StackPanel>
                                        <Slider x:Name="Slider_TimeClipPollSeconds" Height="40" Width="407" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for new clips. Smaller values increases traffic to your channel." Value="{Binding TwitchFrequencyClipTime, Mode=TwoWay}" Maximum="1200" Minimum="5" SmallChange="1" SelectionStart="5" SelectionEnd="1200" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="50" TickFrequency="5"  />
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox Header="Setup Go-Live Notifications" Width="Auto" DockPanel.Dock="Left">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Seconds between checking for going live: " />
                                            <Label Content="{Binding Value, ElementName=Slider_TimeGoLivePollSeconds}" />
                                        </StackPanel>
                                        <Slider x:Name="Slider_TimeGoLivePollSeconds" Height="40" Width="407" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for a change in channel state: going live, updated stream, and going offline. Smaller values increases traffic to your channel." Value="{Binding TwitchGoLiveFrequency, Mode=TwoWay}" Maximum="3600" Minimum="5" SmallChange="10" SelectionStart="5" SelectionEnd="3600" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="100" TickFrequency="10"  />
                                    </StackPanel>
                                </GroupBox>
                            </WrapPanel>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Data" DataContext="{Binding Mode=OneWay, Source={StaticResource DataViews}}">
                <DockPanel>
                    <TabControl>
                        <TabItem x:Name="TabItem_DataOptions" Header="Options">
                            <TabItem.Resources>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </TabItem.Resources>
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <DockPanel Margin="10" DataContext="{Binding Source={x:Static s:Settings.Default}}" HorizontalAlignment="Center" ScrollViewer.CanContentScroll="True">
                                    <WrapPanel Orientation="Horizontal">
                                        <GroupBox Header="Any - Bot Management">
                                            <StackPanel>
                                                <CheckBox IsChecked="{Binding MsgBotConnection, Mode=TwoWay}">
                                                    <TextBlock><Run Text="Enable bot welcome message when connected to stream channel."/></TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding PostMultiLive, Mode=TwoWay}">
                                                    <TextBlock><Run Text="Enable posting to social media (e.g. Discord) multiple live messages in same day."/></TextBlock>
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Any - Automatic Commands by Timer">
                                            <StackPanel Margin="5">
                                                <CheckBox IsChecked="{Binding RepeatWhenLive, Mode=TwoWay}" >
                                                    <TextBlock><Run Text="Enable Repeat commands only when live."/></TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding RepeatTimerCommands, Mode=TwoWay}">
                                                    <CheckBox.ToolTip>
                                                        <TextBlock>Add 'seconds' (whole number, e.g. 600) to the repeat timer column within the command list. Timer updates after the command runs.</TextBlock>
                                                    </CheckBox.ToolTip>
                                                    <TextBlock>Enable repeating commands.</TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding RepeatTimerComSlowdown, Mode=TwoWay}">
                                                    <CheckBox.ToolTip>
                                                        <TextBlock>The repeating commands will slow down by up to 2x the specified time. The commands will return/unwind to normal speed when chat is very active. The specs for normal operation speed are about: at least 10+ viewers an hour or over 20 viewer chats in 15 minutes.</TextBlock>
                                                    </CheckBox.ToolTip>
                                                    <TextBlock>Enable smart slow-down repeating commands</TextBlock>
                                                </CheckBox>
                                                <TextBlock Visibility="Collapsed">TODO: add option spot for bot AI responses to encourage streamer when chatting is slow, and back away when stream has faster chatting.</TextBlock>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Any - Welcome Viewers">
                                            <StackPanel>
                                                <Label Content="Only once per user per active stream (no repeats)" />
                                                <RadioButton IsChecked="{Binding WelcomeDisabled, Mode=TwoWay}">
                                                    <TextBlock Text="{DynamicResource Disabled}" />
                                                </RadioButton>
                                                <RadioButton IsChecked="{Binding FirstUserJoinedMsg, Mode=TwoWay}">
                                                    <TextBlock Text="Enable when viewer joins the channel" />
                                                </RadioButton>
                                                <RadioButton IsChecked="{Binding FirstUserChatMsg, Mode=TwoWay}">
                                                    <TextBlock Text="Enable when a viewer first chats" />
                                                </RadioButton>
                                                <CheckBox IsChecked="{Binding MsgWelcomeStreamer, Mode=TwoWay}">
                                                    <TextBlock Text="Enable welcome message when streamer chats" />
                                                </CheckBox>
                                                <Line Fill="Black" StrokeThickness="1" Stroke="Black" X2="200" HorizontalAlignment="Center" />
                                                <TextBlock Text="Customize Welcome Messages - Welcome New Viewer, Returning Viewer, and Followers/Subscribers" />
                                                <CheckBox IsChecked="{Binding WelcomeCustomMsg, Mode=TwoWay}">
                                                    <TextBlock Text="Enable" />
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>

                                        <GroupBox Header="Twitch - Format Bot messages">
                                            <StackPanel>
                                                <Label Content="/me changes message to all italics" />
                                                <RadioButton x:Uid="Disabled" IsChecked="{Binding MsgNoMe, Mode=TwoWay}" Content="{DynamicResource Disabled}" />
                                                <RadioButton IsChecked="{Binding MsgInsertMe, Mode=TwoWay}" Content="Enable /me for all commands" />
                                                <RadioButton IsChecked="{Binding MsgPerComMe, Mode=TwoWay}" Content="Enable /me per command" />
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Twitch - Shout Out Viewers">
                                            <StackPanel>
                                                <Label>
                                                    <TextBlock>Active when channel is live</TextBlock>
                                                </Label>
                                                <CheckBox IsChecked="{Binding MsgAutoShout, Mode=TwoWay}">
                                                    <TextBlock>Auto shoutout viewers when they first appear (tied to 'Welcome Viewers'. Add names to &quot;Auto SO&quot; tab.</TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding TwitchRaidShoutOut}">
                                                    <TextBlock>Enable auto shoutout for incoming channel raid streamers</TextBlock>
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Twitch - Follow Options">
                                            <StackPanel>
                                                <CheckBox IsChecked="{Binding TwitchAddFollowersStart, Mode=TwoWay}" ToolTip="Will also re-perform when clicking 'Stop Bot' then 'Start Bot'.">
                                                    <TextBlock TextWrapping="Wrap">Enable adding all followers when bot starts.</TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding TwitchPruneNonFollowers, Mode=TwoWay}" ToolTip="Will also re-perform when clicking 'Stop Bot' then 'Start Bot'.">
                                                    <TextBlock TextWrapping="Wrap">Enable action to remove non-followers from the Follower list when bot starts.</TextBlock>
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Twitch - Stream Clips">
                                            <StackPanel>
                                                <CheckBox IsChecked="{Binding TwitchClipPostChat, Mode=TwoWay}">
                                                    <TextBlock>Post new clips to chat.</TextBlock>
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding TwitchClipPostDiscord}">
                                                    <TextBlock>Post new clips to Discord. Must have "Clips" Webhook(s) defined.</TextBlock>
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Twitch - Currency System">
                                            <StackPanel>
                                                <CheckBox IsChecked="{Binding TwitchCurrencyStart, Mode=TwoWay}">
                                                    <TextBlock>Enable Currency Accrual - still permits adding currencies</TextBlock>
                                                </CheckBox>
                                                <CheckBox x:Name="CheckBox_CurrencyOnline" IsChecked="{Binding TwitchCurrencyOnline, Mode=TwoWay}" Visibility="Collapsed">
                                                    <TextBlock>Enable Currency Accrual only when Streaming Online</TextBlock>
                                                </CheckBox>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="Any - Data Management">
                                            <GroupBox.Resources>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <EventSetter Event="Click" Handler="CheckBox_ManageData_Click" />
                                                </Style>
                                            </GroupBox.Resources>
                                            <StackPanel>
                                                <Label>
                                                    <TextBlock Foreground="Red">*Unchecking will remove data from database.*</TextBlock>
                                                </Label>
                                                <CheckBox x:Name="CheckBox_ManageUsers" IsChecked="{Binding ManageUsers}">
                                                    <TextBlock TextWrapping="Wrap">Manage channel viewers, including their watchtime.*</TextBlock>
                                                </CheckBox>
                                                <CheckBox x:Name="CheckBox_ManageFollowers" IsChecked="{Binding ManageFollowers}">
                                                    <TextBlock TextWrapping="Wrap">Manage channel followers, including their followage. Requires User data.*</TextBlock>
                                                </CheckBox>
                                                <CheckBox x:Name="CheckBox_ManageStreamStat" IsChecked="{Binding ManageStreamStats}">
                                                    <TextBlock TextWrapping="Wrap">Record Stream Stats for each stream.*</TextBlock>
                                                </CheckBox>
                                                <CheckBox x:Name="CheckBox_ManageRaidData" IsChecked="{Binding ManageRaidData}">
                                                    <TextBlock TextWrapping="Wrap">Record Raid Stats for incoming raids.*</TextBlock>
                                                </CheckBox>
                                                <Label>
                                                    <TextBlock Foreground="Red">*Unchecking will remove data from database.*</TextBlock>
                                                </Label>
                                            </StackPanel>
                                        </GroupBox>


                                        <!-- Settings Template
                                
                                <GroupBox Header="Twitch -">
                                    <StackPanel>
                                        <CheckBox IsChecked="{Binding AutoShout, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Auto </TextBlock>
                                        </CheckBox>
                                        <CheckBox IsChecked="{Binding TwitchRaidShoutOut}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Enable </TextBlock>
                                        </CheckBox>
                                    </StackPanel>
                                </GroupBox>
                                
                                -->
                                    </WrapPanel>
                                </DockPanel>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Variables">
                            <ListView DockPanel.Dock="Right" DataContext="{Binding Mode=OneWay, Source={StaticResource CommandInfo}}" ItemsSource="{Binding Collection}" >
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn DisplayMemberBinding="{Binding Parameter}" Header="Parameter" Width="150"/>
                                        <GridViewColumn DisplayMemberBinding="{Binding Value}" Header="Value" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </TabItem>
                        <TabItem Header="Discord">
                            <StackPanel>
                                <TextBlock IsEnabled="False">Add Webhook links, one per line. Bot will report notifications to each Webhook. *The incorrect 'Kind' will prevent the notification.<LineBreak />
                                Use 'AddEveryone'=true (checkmark) to replace #everyone with @everyone, but 'AddEveryone'=false removes 'everyone' from message, some servers don't permit full notification tagging.<LineBreak />
                                Current implemented<LineBreak />'Kind':</TextBlock>
                                <StackPanel Orientation="Horizontal">
                                    <ListView ItemsSource="{Binding KindsWebhooks, Mode=OneWay}" SelectionMode="Single" />
                                    <DataGrid x:Name="DG_Webhooks" Height="200" Margin="10,0" AutoGenerateColumns="True" d:LayoutOverrides="LeftMargin, RightMargin" ItemsSource="{Binding Discord, Mode=OneWay}" AllowDrop="True" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />
                                </StackPanel>
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="Auto-SO">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="450" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="When 'Auto shout out' is enabled in options, displaynames in this list will receive a shout-out upon entering the channel - when Twitch tells me they're here."/>
                                <DataGrid Grid.Row="1" ItemsSource="{Binding ShoutOuts, Mode=OneWay}" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />
                            </Grid>
                        </TabItem>
                        <TabItem Header="User Data" x:Name="TabItem_Users">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Label Grid.Row="0" Content="User List"/>
                                <Button x:Name="Button_ClearWatchTime" Content="Reset WatchTime" Grid.Row="0" Height="20" Width="120" Click="Button_ClearWatchTime_Click" HorizontalAlignment="Right" Margin="0,0,15,0" />
                                <Label Grid.Row="0" Grid.Column="2" Content="Follower List" />
                                <DataGrid x:Name="DG_Users" ItemsSource="{Binding Users, Mode=OneWay}" Grid.Row="1" Grid.Column="0" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns"/>

                                <DataGrid x:Name="DG_Followers" ItemsSource="{Binding Followers, Mode=OneWay}" CanUserDeleteRows="True" Grid.Row="1" Grid.Column="2" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Clips" x:Name="TabItem_Clips">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="300"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Label Grid.Row="0" Grid.Column="2" Content="Clip List"/>
                                <Label Grid.Row="0" Content="Category List"/>
                                <DataGrid x:Name="DG_CategoryList_Clips" ItemsSource="{Binding Category, Mode=OneWay}" Grid.Row="1" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" />
                                <DataGrid x:Name="DG_Clips" ItemsSource="{Binding Clips, Mode=OneWay}" Grid.Row="1" Grid.Column="2" CanUserDeleteRows="True" />
                            </Grid>
                        </TabItem>
                        <TabItem Header="System Events">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="55" />
                                    <RowDefinition Height="100*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="250"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label>Current Category: </Label>
                                        <TextBlock x:Name="TextBlock_CurrentCategory" VerticalAlignment="Center" TextWrapping="Wrap"/>
                                    </StackPanel>
                                    <Button Name="Button_RefreshCategory" Height="20" Width="120" Content="Refresh Category" Click="Button_RefreshCategory_Click" />
                                </StackPanel>
                                <DataGrid x:Name="DG_CategoryList" ItemsSource="{Binding Category, Mode=OneWay}" Grid.Row="1" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" />

                                <TextBlock TextWrapping="Wrap" Grid.Row="0" Grid.Column="2"><Run Text="Double-click the MsgStr for your custom message. Use the 'Commands' to customize to a name or relevant values."/><LineBreak/><Run Text="'Live' is a message to Discord/other services."/></TextBlock>
                                <DataGrid x:Name="DG_CommonMsgs" ItemsSource="{Binding ChannelEvents, Mode=OneWay}"  AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" Grid.Row="1" Grid.Column="2">
                                    <DataGrid.ToolTip>
                                        <TextBlock TextWrapping="Wrap" Width="500"><Run Text="The name column is readonly. These are for channel events the bot recognizes and responds with the specified message."/><LineBreak /><LineBreak /><Run Text="You can edit the message to customize a response fitting your channel!"/><LineBreak /><Run Text="Please see the parameters to the right to use in each message, not all will be applicable. Ensure a space before the parameter, e.g. &quot;the #user followed&quot;, the &quot; #&quot; needs to be the first character in the word."/></TextBlock>
                                    </DataGrid.ToolTip>
                                </DataGrid>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Currency" x:Name="TabItem_CurrencyAccrual">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="65" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="320"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.ColumnSpan="3">
                                    <TextBlock Width="744">Specify Currency Type (left side) to accrue per user (right side). Specify Amount earned for Seconds of time (e.g. earn 5 every 10 seconds). Any updates are prospective (starts from now) and not retrospective (doesn't award currency for the past).</TextBlock>
                                </Label>
                                <Button x:Name="Button_ClearCurrencyAccrlValues" Grid.Column="2" Height="20" Width="147" Content="Clear All Currency Values" VerticalAlignment="Center" HorizontalAlignment="Right" Click="Button_ClearCurrencyAccrlValues_Click" />
                                <DataGrid x:Name="DG_Currency" ItemsSource="{Binding CurrencyType, Mode=OneWay}" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" Grid.Row="1" Grid.Column="0" CanUserDeleteRows="True" CanUserAddRows="True"/>
                                <DataGrid x:Name="DG_CurrencyAccrual" ItemsSource="{Binding Currency, Mode=OneWay}" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" CanUserDeleteRows="False" Grid.Row="1" Grid.Column="2" />
                            </Grid>
                        </TabItem>
                        <TabItem Header="Commands">
                            <TabControl>
                                <TabItem Header="Help">
                                    <Grid>
                                        <TextBlock><Run Text="The 'BuiltInCommands' are those established within the bot."/><LineBreak /><Run Text="The 'socials' (specific services): add your custom message for the social media and your access URL. E.g. &quot;Visit me on Twitter at: http://wwww.twitter.com/myuser&quot;. The command will show all socials except messages that are blank or the default 'Social media url here'."/><LineBreak /><LineBreak /><Run Text="The variables within message to format a custom response:"/><LineBreak /><Run Text="#user: the user specific to the command; either 'command invoker' user or parameter to the command"/><LineBreak /><Run Text="#url: the Twitch URL with the supplied user attached - specific to 'so == shoutout' command"/><LineBreak /><Run Text="#fieldvalue: placeholder for the value from a table lookup"/><LineBreak /><Run Text="#currencyname: placeholder for the currency name - extracted from table"/><LineBreak /><Run Text="#currencyvalue: the value of a currency"/><LineBreak /><LineBreak /><Run Text="#date: the current date"/><LineBreak /><Run Text="#time: the current time"/><LineBreak /></TextBlock>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="Commands">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="50" />
                                            <RowDefinition Height="25" />
                                            <RowDefinition />
                                            <RowDefinition Height="5" />
                                            <RowDefinition Height="25" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="To use command repeat timers, set option in 'Option' tab and set the *seconds* within the command row. This repeat doesn't work with those commands requiring parameters. The '!socials', for example, is an ideal repeat commands. 1 minute = 60 seconds, 10 minutes = 600 seconds, 15 minutes = 900 seconds, 30 minutes = 1800 seconds, 1 hour = 3600 seconds. Top can be '0' for a single item, '-1' for all items, and 'n' (positive integer) for the top n items as defined by 'sort = ASC or DESC" />
                                        <Label Content="Built-in Commands:" Grid.Row="1"/>
                                        <DataGrid Grid.Row="2" x:Name="DG_BuiltInCommands" ItemsSource="{Binding BuiltInCommands, Mode=OneWay}" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" MaxColumnWidth="253" />
                                        <Label Content="User-Defined Commands:" Grid.Row="4"/>
                                        <DataGrid Grid.Row="5" ItemsSource="{Binding Commands, Mode=OneWay}" CanUserDeleteRows="True" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding"/>
                                    </Grid>
                                </TabItem>
                            </TabControl>
                        </TabItem>
                        <TabItem Header="Incoming Raid">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="500" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">This table saves incoming raids to your channel, so you can show them any additional appreciation after your stream. Category indicates what they were streaming.</TextBlock>
                                <DataGrid Grid.Row="1" ItemsSource="{Binding RaidData, Mode=OneWay}" CanUserDeleteRows="True" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />
                            </Grid>
                        </TabItem>
                        <TabItem Header="Stream Stats" x:Name="TabItem_StreamStats">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" Grid.Row="0">
                                    <Button Content="Add Random Test Stream" Height="20" Margin="10,0" ToolTip="Will activate in debug mode, won't post to social media." Click="StartDebugStream_Click"/>
                                    <Button Content="Stop Random Test Stream" Height="20" Margin="10,0" Click="EndDebugStream_Click" />
                                </StackPanel>
                                <DataGrid Grid.Row="1" ItemsSource="{Binding StreamStats, Mode=OneWay}" CanUserDeleteRows="True" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />
                            </Grid>
                        </TabItem>
                        <TabItem IsEnabled="False" MinWidth="20" Width="20" />
                        <TabItem Header="MultiLive Monitor">
                            <Grid x:Name="TabItem_MultiUserLiveMonitor">
                                <Grid.Resources>
                                    <Style TargetType="DataGrid">
                                        <Setter Property="Margin" Value="5"/>
                                        <Setter Property="MaxColumnWidth" Value="160" />
                                        <Setter Property="AlternationCount" Value="1" />
                                        <Setter Property="AlternatingRowBackground" Value="#FFDBFFF4" />
                                        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
                                        <Setter Property="CanUserAddRows" Value="False" />
                                        <EventSetter Event="MouseEnter" Handler="DataGrid_MouseEnter" />
                                        <EventSetter Event="MouseLeave" Handler="DataGrid_MouseLeave" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.DataContext>
                                    <Binding Path="TwitchLiveMonitor" Source="{StaticResource TwitchBot}"/>
                                </Grid.DataContext>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50" />
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="298*" />
                                    <ColumnDefinition Width="52"/>
                                    <ColumnDefinition Width="100"  />
                                    <ColumnDefinition Width="52"/>
                                    <ColumnDefinition Width="293*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock TextWrapping="Wrap" Grid.Row="0" Padding="3"><Run Text="Use this tab to set up which channels (only first 100) to watch for going live and where to post messages. Currently only Discord."/></TextBlock>
                                <Label Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Foreground="Red" Visibility="{Binding Visibility, ElementName=Label_LiveStream_MultiLiveActiveMsg}">
                                    <TextBlock TextWrapping="Wrap"><Run Text="The MultiUserLiveBot is active, single channel activated."/></TextBlock>
                                </Label>
                                <TextBlock TextWrapping="Wrap" Grid.Row="0" Grid.Column="4" Text="Message for Live Notification:" />
                                <TextBox x:Name="TB_LiveMsg" Grid.Row="0" Grid.Column="4" VerticalContentAlignment="Top" 
                             DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" Text="{Binding MsgLive}" 
                             TextAlignment="Left" TextWrapping="Wrap" LostFocus="Settings_LostFocus" Margin="0,16,0,0">
                                    <TextBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="#user" Click="MenuItem_Click" />
                                            <MenuItem Header="#category" Click="MenuItem_Click" />
                                            <MenuItem Header="#title" Click="MenuItem_Click" />
                                            <MenuItem Header="#url" Click="MenuItem_Click" />
                                        </ContextMenu>
                                    </TextBox.ContextMenu>
                                    <TextBox.ToolTip>
                                        <TextBlock><Run Text="Use these tags within the message and it'll be replaced before sending the posted live message."/><LineBreak /><Run Text="Available by right-click menu - insert at cursor."/><LineBreak /><Run Text="&quot;#user&quot; - channel name of the user"/><LineBreak /><Run Text="&quot;#category&quot; - the category of the stream"/><LineBreak /><Run Text="&quot;#title&quot; - the title of the stream when it goes live"/><LineBreak /><Run Text="&quot;#url&quot; - to send someone to the Twitch channel, it's already prepared &quot; twitch.tv/user &quot;"/><LineBreak /><LineBreak /><Run Text="Example: @everyone, #user is now live streaming #category - #title! Come join and say hi at: #url"/></TextBlock>
                                    </TextBox.ToolTip>
                                </TextBox>

                                <DataGrid x:Name="DG_Multi_WebHooks" Grid.Row="1" Grid.RowSpan="2" DataContext="{Binding MultiLiveDataManager}" 
                              ItemsSource="{Binding MsgEndPoints, Mode=OneWay}" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding"  />
                                <DataGrid x:Name="DG_Multi_ChannelNames" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" DataContext="{Binding MultiLiveDataManager}" 
                              ItemsSource="{Binding Channels, Mode=OneWay}" RowEditEnding="DG_ChannelNames_RowEditEnding" InitializingNewItem="DataGrid_InitializingNewItem" />
                                <DataGrid x:Name="DG_Multi_LiveStreamStats" Grid.Column="4" Grid.Row="1" Grid.RowSpan="2" DataContext="{Binding MultiLiveDataManager}" ItemsSource="{Binding LiveStream, Mode=TwoWay}" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />

                                <DockPanel x:Name="Panel_BotActivity" Grid.Row="1" Grid.Column="4" Visibility="Collapsed">
                                    <Label DockPanel.Dock="Top" Content="Log of Bot Activity:" />
                                    <TextBox DockPanel.Dock="Bottom" x:Name="TB_BotActivityLog" Margin="5" TextWrapping="Wrap" Background="#FFEEEEEE" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" VerticalScrollBarVisibility="Visible" IsInactiveSelectionHighlightEnabled="True" TextChanged="TB_BotActivityLog_TextChanged" Text="{Binding MultiLiveStatusLog}"  />
                                </DockPanel>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </DockPanel>
            </TabItem>
            <TabItem Header="Logs">
                <TabControl>
                    <TabItem Header="Twitch Status">
                        <GroupBox Header="Bot Status Log" BorderBrush="Black" Width="Auto">
                            <DockPanel>
                                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" DataContext="{Binding Source={x:Static s:Settings.Default}}">
                                    <CheckBox IsChecked="{Binding LogBotStatus}" Content="Enable Bot Status Logging" Margin="3" ToolTip="Save this log - 'StatusLog.txt'"/>
                                    <CheckBox IsChecked="{Binding LogExceptions}" Content="Enable TwineBot Exception Logging" Margin="3" ToolTip="Save Exceptions - 'ExceptionsLog.txt'"/>
                                </StackPanel>
                                <TextBox x:Name="TextBlock_TwitchBotLog" DataContext="{Binding TwitchIO, Mode=OneWay, Source={StaticResource TwitchBot}}" Text="{Binding StatusLog, Mode=OneWay}" TextWrapping="Wrap" Width="Auto" Background="#FFEEEEEE" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" VerticalScrollBarVisibility="Visible" IsInactiveSelectionHighlightEnabled="True" TextChanged="TextBox_TwitchBotLog_TextChanged" />
                            </DockPanel>
                        </GroupBox>
                    </TabItem>                    
                </TabControl>
            </TabItem>
            <TabItem Header="Bot Chat">
                <DockPanel>
                    <DockPanel LastChildFill="True" DockPanel.Dock="Left" Margin="0,0,10,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="100"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Content="Join List to organize playing games with your viewers." HorizontalContentAlignment="Center" Grid.RowSpan="3" />
                            <Label Grid.Row="1" Content="Click the 'remove' box next to the user name to remove from this list." HorizontalContentAlignment="Center" Grid.RowSpan="3" />
                            <GroupBox Grid.Row="2" Padding="10" Header="Join List Status" Grid.RowSpan="3" >
                                <StackPanel DataContext="{Binding Source={x:Static s:Settings.Default}}">
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type RadioButton}">
                                            <Setter Property="Margin" Value="3" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <RadioButton Content="Start Join List" IsChecked="{Binding UserPartyStart, Mode=TwoWay}" />
                                    <RadioButton Content="Stop Join List" IsChecked="{Binding UserPartyStop, Mode=TwoWay}" />
                                </StackPanel>
                            </GroupBox>

                            <ListView Grid.Row="3" x:Name="LV_JoinList" MaxWidth="500" DataContext="{Binding Source={StaticResource DataViews}}"
                                      ItemsSource="{Binding JoinCollection, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" SelectionMode="Single" Margin="0,0,0,10">
                                <ListView.Resources>
                                    <DataTemplate x:Key="GridColCheck">
                                        <CheckBox IsChecked="{Binding Remove, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Checked="JoinCollectionCheckBox_Checked" AutomationProperties.IsRowHeader="False" />
                                    </DataTemplate>
                                </ListView.Resources>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Remove" Width="70" CellTemplate="{DynamicResource GridColCheck}" />
                                        <GridViewColumn Header="GameTag UserName" Width="200" DisplayMemberBinding="{Binding GameUserName, Mode=OneWay, UpdateSourceTrigger=Default}" />
                                        <GridViewColumn Header="Chat User" Width="200" DisplayMemberBinding="{Binding ChatUser, Mode=OneWay, UpdateSourceTrigger=Default}" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </DockPanel>
                    <DockPanel LastChildFill="True" DockPanel.Dock="Right"  Background="#FF2B2929" >
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" Margin="5" Background="White" Width="410">
                            <Button Padding="10,4" Margin="10" Content="Pop-Out Chat Box" Click="PopOutChatButton_Click" Height="26" Opacity="1" IsEnabled="False" />
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Label Padding="0" Content="Pop-out Opacity"/>
                                <TextBlock Text="50%"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Right" Margin="0,4,15,4">
                            <TextBox x:Name="TextBox_BotChat" Width="360" />
                            <Button Content="Send" Margin="10,0,0,0" Padding="8,2" Click="BotChat_SendButton_Click" />
                        </StackPanel>
                        <FlowDocumentScrollViewer DockPanel.Dock="Top" BorderThickness="1,1,1,1" x:Name="FlowDoc_ChatBox" ScrollViewer.CanContentScroll="True" DataContext="{Binding Mode=OneWay, Source={StaticResource DataViews}}" Document="{Binding ChatData, Mode=OneWay, NotifyOnSourceUpdated=True}" Foreground="#FFC5C3C3" />
                    </DockPanel>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
