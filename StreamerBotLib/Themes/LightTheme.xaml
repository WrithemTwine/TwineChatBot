<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--<SolidColorBrush x:Key="DarkBackground" Color="#FF1E1E1E"/>
    <SolidColorBrush x:Key="ForegroundText" Color="#FFCCCCCC"  />
    <SolidColorBrush x:Key="Borders" Color="#FF383838"  />
    <SolidColorBrush x:Key="ScrollViewerBackground" Color="#FF383838"  />
    <SolidColorBrush x:Key="ScrollViewerForeground" Color="#FF5B5B5B"  />-->

    <!-- base colors -->
    <Color x:Key="LighterColor">#FFBBBBBB</Color>
    <Color x:Key="MediumColor">#FFDCDCDC</Color>
    <Color x:Key="FullColor">#FFFFFFFF</Color>
    <Color x:Key="ForegroundColor">#FF000000</Color>


    <SolidColorBrush x:Key="FullBackground" Color="{DynamicResource FullColor}"/>
    <SolidColorBrush x:Key="PartBackground" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="LightBackground" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ForegroundText" Color="{DynamicResource ForegroundColor}"  />


    <!-- border colors -->
    <SolidColorBrush x:Key="Borders" Color="{DynamicResource MediumColor}"  />
    <Color x:Key="BorderColor">#FF000000</Color>

    <!-- scrollbar colors -->
    <SolidColorBrush x:Key="ScrollBarBackground" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="ScrollBarForeground" Color="{DynamicResource LighterColor}" />

    <Color x:Key="ScrollBarRepeatButton">#FFBBBBBB</Color>

    <!-- tab item colors -->
    <SolidColorBrush x:Key="TabControlTabs" Color="{DynamicResource MediumColor}"  />
    <Color x:Key="TabItemControlLightColor">#FFBBBBBB</Color>
    <Color x:Key="TabItemControlMediumColor">#FFDCDCDC</Color>
    <Color x:Key="TabItemControlFullColor">#FFFFFFFF</Color>
    <SolidColorBrush x:Key="TabItemControlLight" Color="{DynamicResource TabItemControlLightColor}" />
    <SolidColorBrush x:Key="TabItemControlMedium" Color="{DynamicResource TabItemControlMediumColor}" />
    <SolidColorBrush x:Key="TabItemControlFull" Color="{DynamicResource TabItemControlFullColor}" />

    <!-- activity colors -->
    <SolidColorBrush x:Key="BrightGo" Color="LimeGreen" />
    <SolidColorBrush x:Key="BrightStop" Color="#FFEA3434" />
    <SolidColorBrush x:Key="Go" Color="#FF16A502" />
    <SolidColorBrush x:Key="Stop" Color="#FFEA3434" />
    <SolidColorBrush x:Key="LabelBeta" Color="MediumVioletRed" />

    <!-- datagrid colors -->
    <SolidColorBrush x:Key="DataGridAlternateColor" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="DataGridBackground" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="DataGridRowHeaderBackground" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="DataGridColumnHeaderBackground" Color="{DynamicResource LighterColor}" />

    <!-- contextmenu coloring -->
    <SolidColorBrush x:Key="ContextMenuBackground" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="ContextMenuForeground" Color="{DynamicResource ForegroundColor}"/>


    <!-- ListView colors -->
    <Color x:Key="ListViewControlFullColor">#FFFFFFFF</Color>
    <Color x:Key="ListViewControlMediumColor">#FFDCDCDC</Color>
    <Color x:Key="ListViewControlLightColor">#FFBBBBBB</Color>
    <SolidColorBrush x:Key="ListViewControlMedium" Color="{DynamicResource ListViewControlMediumColor}"  />

    <!-- ComboBox colors -->
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="{DynamicResource MediumColor}"/>
    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource MediumColor}" Offset="0.0"/>
        <GradientStop Color="{DynamicResource LighterColor}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="{DynamicResource FullColor}"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFECF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAECFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="{DynamicResource FullColor}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>

    
    
    <!-- Checkbox colors -->
    <SolidColorBrush x:Key="CheckBoxFullBackground" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="CheckBoxMedBackground" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="CheckBoxBorder" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="CheckBoxForeground" Color="{DynamicResource ForegroundColor}" />
    <SolidColorBrush x:Key="CheckBoxNotEnabledBackground" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="CheckBoxNotEnabledForeground" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="CheckBoxNotEnabledPath" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="CheckBoxNullCheckedBackground" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="CheckBoxNullCheckPath" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="CheckBoxPressedBackground" Color="{DynamicResource FullColor}" />

    <!-- button colors -->
    <Color x:Key="ButtonHoverControlFullColor">#FFFFFFFF</Color>
    <Color x:Key="ButtonHoverControlMediumColor">#FFDCDCDC</Color>
    <Color x:Key="ButtonHoverControlLightColor">#FFBBBBBB</Color>
    <SolidColorBrush x:Key="ButtonHoverControlMedium" Color="{DynamicResource ButtonHoverControlMediumColor}"  />
    <SolidColorBrush x:Key="ButtonHoverControlFull" Color="{DynamicResource ButtonHoverControlFullColor}"  />

    <!-- RadioButton colors -->
    <SolidColorBrush x:Key="RadioButtonFullBackground" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="RadioButtonMedBackground" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="RadioButtonForeground" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="{DynamicResource ForegroundColor}" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="{DynamicResource ForegroundColor}" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="{DynamicResource ForegroundColor}" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="{DynamicResource LighterColor}" />

    
    <Style x:Key="{x:Type CheckBox}"
           TargetType="{x:Type CheckBox}">

        <Setter Property="Margin" Value="5" />

        <Setter Property="Background"
                Value="{DynamicResource CheckBoxFullBackground}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource CheckBoxForeground}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource CheckBoxBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent"
                                     SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="CheckMark"
                                                          Background="{TemplateBinding Background}"
                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                          BorderBrush="{TemplateBinding BorderBrush}">
                                <Path x:Name="CheckMarkPath"
                                      Margin="1,1,1,1"
                                      Width="7"
                                      Height="7"
                                      FlowDirection="LeftToRight"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M 0 2.0 L 0 4.8 L 2.5 7.4 L 7.1 2.8 L 7.1 0 L 2.5 4.6 Z"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="false">
                            <Setter TargetName="CheckMarkPath"
                                    Property="Visibility"
                                    Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter TargetName="CheckMark"
                                    Property="Background"
                                    Value="{DynamicResource CheckBoxNullCheckedBackground}"/>
                            <Setter TargetName="CheckMarkPath"
                                    Property="Fill"
                                    Value="{DynamicResource CheckBoxNullCheckPath}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="CheckMark"
                                    Property="Background"
                                    Value="{DynamicResource CheckBoxPressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="CheckMark"
                                    Property="Background"
                                    Value="{DynamicResource CheckBoxNotEnabledBackground}"/>
                            <Setter TargetName="CheckMarkPath"
                                    Property="Fill"
                                    Value="{DynamicResource CheckBoxNotEnabledPath}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource CheckBoxNotEnabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PartBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border" CornerRadius="3" BorderThickness="2">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ButtonHoverControlLightColor}" Offset="0.0" />
                                        <GradientStop Color="{DynamicResource ButtonHoverControlMediumColor}" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource ButtonHoverControlMediumColor}" Offset="0" />
                                <GradientStop Color="{DynamicResource ButtonHoverControlLightColor}" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ButtonHoverControlFullColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource FullBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonHoverControlFull}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource FullBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource FullBackground}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource LightBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource FullBackground}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource LightBackground}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource LightBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Margin" Value="10,5,0,5" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource RadioButtonFullBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource RadioButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" 
                            Margin="1,1,2,1" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            CornerRadius="100">
                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse x:Name="optionMark" Opacity="0" MinWidth="6" MinHeight="6" Fill="{DynamicResource RadioButton.Static.Glyph}"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                            RecognizesAccessKey="True" 
                            Grid.Column="1" 
                            Margin="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource RadioButton.MouseOver.Background}" TargetName="radioButtonBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.MouseOver.Border}" TargetName="radioButtonBorder" />
                            <Setter Property="Fill" Value="{DynamicResource RadioButton.MouseOver.Glyph}" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource RadioButton.Disabled.Background}" TargetName="radioButtonBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.Disabled.Border}" TargetName="radioButtonBorder" />
                            <Setter Property="Fill" Value="{DynamicResource RadioButton.Disabled.Glyph}" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource RadioButton.Pressed.Background}" TargetName="radioButtonBorder" />
                            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Pressed.Border}" TargetName="radioButtonBorder" />
                            <Setter Property="Fill" Value="{StaticResource RadioButton.Pressed.Glyph}" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" Value="1" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" Value="0.56" TargetName="optionMark" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>