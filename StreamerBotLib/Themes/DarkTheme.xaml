<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- base colors -->
    <Color x:Key="LighterColor">#FF5B5B5B</Color>
    <Color x:Key="MediumColor">#FF383838</Color>
    <Color x:Key="FullColor">#FF1E1E1E</Color>
    <Color x:Key="ForegroundColor">#FFCCCCCC</Color>


    <SolidColorBrush x:Key="FullBackground" Color="{DynamicResource FullColor}"/>
    <SolidColorBrush x:Key="PartBackground" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="LightBackground" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ForegroundText" Color="{DynamicResource ForegroundColor}"  />


    <!-- border colors -->
    <SolidColorBrush x:Key="Borders" Color="{DynamicResource MediumColor}"  />
    <Color x:Key="BorderColor">#FFCCCCCC</Color>

    <!-- scrollbar colors -->
    <SolidColorBrush x:Key="ScrollBarBackground" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="ScrollBarForeground" Color="{DynamicResource LighterColor}" />

    <Color x:Key="ScrollBarRepeatButton">#FF1E1E1E</Color>

    <!-- tab item colors -->
    <SolidColorBrush x:Key="TabControlTabs" Color="{DynamicResource MediumColor}"  />
    <Color x:Key="TabItemControlLightColor">#FF5B5B5B</Color>
    <Color x:Key="TabItemControlMediumColor">#FF383838</Color>
    <Color x:Key="TabItemControlFullColor">#FF1E1E1E</Color>
    <SolidColorBrush x:Key="TabItemControlLight" Color="{DynamicResource TabItemControlLightColor}" />
    <SolidColorBrush x:Key="TabItemControlMedium" Color="{DynamicResource TabItemControlMediumColor}" />
    <SolidColorBrush x:Key="TabItemControlFull" Color="{DynamicResource TabItemControlFullColor}" />

    <!-- activity colors -->
    <SolidColorBrush x:Key="BrightGo" Color="LimeGreen" />
    <SolidColorBrush x:Key="BrightStop" Color="#FFEA3434" />
    <SolidColorBrush x:Key="Go" Color="#FF16A502" />
    <SolidColorBrush x:Key="Stop" Color="#FFEA3434" />
    <SolidColorBrush x:Key="LabelBeta" Color="MediumVioletRed" />

    <!-- datagrid colors -->
    <SolidColorBrush x:Key="DataGridAlternateColor" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="DataGridBackground" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="DataGridRowHeaderBackground" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="DataGridColumnHeaderBackground" Color="{DynamicResource LighterColor}" />

    <!-- contextmenu coloring -->
    <SolidColorBrush x:Key="ContextMenuBackground" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="ContextMenuForeground" Color="{DynamicResource ForegroundColor}"/>

    <!-- ListView colors -->
    <Color x:Key="ListViewControlFullColor">#FF1E1E1E</Color>
    <Color x:Key="ListViewControlMediumColor">#FF383838</Color>
    <Color x:Key="ListViewControlLightColor">#FF5B5B5B</Color>
    <SolidColorBrush x:Key="ListViewControlFull" Color="{DynamicResource ListViewControlFullColor}"  />
    <SolidColorBrush x:Key="ListViewControlMedium" Color="{DynamicResource ListViewControlMediumColor}"  />
    <SolidColorBrush x:Key="ListViewControlLight" Color="{DynamicResource ListViewControlLightColor}" />

    <!-- ComboBox colors -->
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="{DynamicResource MediumColor}"/>
    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource MediumColor}" Offset="0.0"/>
        <GradientStop Color="{DynamicResource LighterColor}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="{DynamicResource FullColor}"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource LighterColor}" Offset="0.0"/>
        <GradientStop Color="{DynamicResource MediumColor}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource LighterColor}" Offset="0.0"/>
        <GradientStop Color="{DynamicResource MediumColor}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource MediumColor}" Offset="0.0"/>
        <GradientStop Color="{DynamicResource FullColor}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource LighterColor}" Offset="0.0"/>
        <GradientStop Color="{DynamicResource MediumColor}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="{DynamicResource LighterColor}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="{DynamicResource MediumColor}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="{DynamicResource FullColor}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>

    
    <!-- Checkbox colors -->
    <SolidColorBrush x:Key="CheckBoxFullBackground" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="CheckBoxMedBackground" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="CheckBoxBorder" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="CheckBoxForeground" Color="{DynamicResource ForegroundColor}" />
    <SolidColorBrush x:Key="CheckBoxNotEnabledBackground" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="CheckBoxNotEnabledForeground" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="CheckBoxNotEnabledPath" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="CheckBoxNullCheckedBackground" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="CheckBoxNullCheckPath" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="CheckBoxPressedBackground" Color="{DynamicResource FullColor}" />

    <!-- button colors -->
    <Color x:Key="ButtonHoverControlFullColor">#FF1E1E1E</Color>
    <Color x:Key="ButtonHoverControlMediumColor">#FF383838</Color>
    <Color x:Key="ButtonHoverControlLightColor">#FF5B5B5B</Color>
    <SolidColorBrush x:Key="ButtonHoverControlMedium" Color="{DynamicResource ButtonHoverControlMediumColor}"  />
    <SolidColorBrush x:Key="ButtonHoverControlFull" Color="{DynamicResource ButtonHoverControlFullColor}"  />

    <!-- RadioButton colors -->
    <SolidColorBrush x:Key="RadioButtonMedBackground" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="RadioButtonForeground" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="{DynamicResource LighterColor}" />
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="{DynamicResource ForegroundColor}" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="{DynamicResource ForegroundColor}" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="{DynamicResource ForegroundColor}" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="{DynamicResource FullColor}" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="{DynamicResource MediumColor}" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="{DynamicResource LighterColor}" />

    
    <Style x:Key="{x:Type CheckBox}"
           TargetType="{x:Type CheckBox}">

        <Setter Property="Margin" Value="5" />

        <Setter Property="Background"
                Value="{DynamicResource CheckBoxMedBackground}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource CheckBoxForeground}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource CheckBoxBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent"
                                     SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="CheckMark"
                                                          Background="{TemplateBinding Background}"
                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                          BorderBrush="{TemplateBinding BorderBrush}">
                                <Path x:Name="CheckMarkPath"
                                      Margin="1,1,1,1"
                                      Width="7"
                                      Height="7"
                                      FlowDirection="LeftToRight"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M 0 2.0 L 0 4.8 L 2.5 7.4 L 7.1 2.8 L 7.1 0 L 2.5 4.6 Z"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="false">
                            <Setter TargetName="CheckMarkPath"
                                    Property="Visibility"
                                    Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter TargetName="CheckMark"
                                    Property="Background"
                                    Value="{DynamicResource CheckBoxNullCheckedBackground}"/>
                            <Setter TargetName="CheckMarkPath"
                                    Property="Fill"
                                    Value="{DynamicResource CheckBoxNullCheckPath}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="CheckMark"
                                    Property="Background"
                                    Value="{DynamicResource CheckBoxPressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="CheckMark"
                                    Property="Background"
                                    Value="{DynamicResource CheckBoxNotEnabledBackground}"/>
                            <Setter TargetName="CheckMarkPath"
                                    Property="Fill"
                                    Value="{DynamicResource CheckBoxNotEnabledPath}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource CheckBoxNotEnabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <!--<Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource PartBackground}" />
            </Trigger>
        </Style.Triggers>-->
        <Setter Property="Background" Value="{DynamicResource PartBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border" CornerRadius="3" BorderThickness="2">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ButtonHoverControlLightColor}" Offset="0.0" />
                                        <GradientStop Color="{DynamicResource ButtonHoverControlMediumColor}" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource ButtonHoverControlMediumColor}" Offset="0" />
                                <GradientStop Color="{DynamicResource ButtonHoverControlLightColor}" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ButtonHoverControlFullColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource FullBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonHoverControlFull}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource FullBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource FullBackground}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource LightBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource LightBackground}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource LightBackground}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource PartBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Margin" Value="10,5,0,5" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource RadioButtonMedBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource RadioButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" 
                            Margin="1,1,2,1" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            CornerRadius="100">
                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse x:Name="optionMark" Opacity="0" MinWidth="6" MinHeight="6" Fill="{DynamicResource RadioButton.Static.Glyph}"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                            RecognizesAccessKey="True" 
                            Grid.Column="1" 
                            Margin="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource RadioButton.MouseOver.Background}" TargetName="radioButtonBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.MouseOver.Border}" TargetName="radioButtonBorder" />
                            <Setter Property="Fill" Value="{DynamicResource RadioButton.MouseOver.Glyph}" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource RadioButton.Disabled.Background}" TargetName="radioButtonBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.Disabled.Border}" TargetName="radioButtonBorder" />
                            <Setter Property="Fill" Value="{DynamicResource RadioButton.Disabled.Glyph}" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource RadioButton.Pressed.Background}" TargetName="radioButtonBorder" />
                            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Pressed.Border}" TargetName="radioButtonBorder" />
                            <Setter Property="Fill" Value="{StaticResource RadioButton.Pressed.Glyph}" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" Value="1" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" Value="0.56" TargetName="optionMark" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"                    Offset="0" />
                <GradientStop Color="#600000FF"                    Offset="0.4" />
                <GradientStop Color="#600000FF"                    Offset="0.6" />
                <GradientStop Color="#000000FF"                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

   
    <Style x:Key="ToggleButtonTwitchTokenSelecter" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                                                                                              (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                                              Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource MediumColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                                                                                              (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                                              Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                                         Value="{StaticResource FullColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">

                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                                                                                              (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                                              Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                                         Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                                                                                              (SolidColorBrush.Color)"
                                                                                              Storyboard.TargetName="Arrow">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                                         Value="{StaticResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                                                                                              (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                                              Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard Duration="0:0:1">
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
(GradientBrush.GradientStops)[1].(GradientStop.Color)"
Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource FullColor}" />
                                        </ColorAnimationUsingKeyFrames>

                                        <PointAnimationUsingKeyFrames
                                                                Storyboard.TargetName="ToggleButton_TwitchAuthText_ChoiceEllipse"
                                                                Storyboard.TargetProperty="Center" Duration="0:0:0.5">
                                            <LinearPointKeyFrame KeyTime="0" Value="18,18" />
                                            <LinearPointKeyFrame KeyTime="0:0:0.5" Value="81,18" />
                                        </PointAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames 
                                                                Storyboard.TargetName="ToggleButton_TwitchAuthText_Manual"
                                                                Storyboard.TargetProperty="Opacity" Duration="1">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                            <DiscreteDoubleKeyFrame KeyTime="1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                                                Storyboard.TargetName="ToggleButton_TwitchAuthText_Auth"
                                                                Storyboard.TargetProperty="Opacity" Duration="1">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard Duration="0:0:1">
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
(GradientBrush.GradientStops)[1].(GradientStop.Color)"
Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource FullColor}" />
                                        </ColorAnimationUsingKeyFrames>

                                        <PointAnimationUsingKeyFrames
                                                                Storyboard.TargetName="ToggleButton_TwitchAuthText_ChoiceEllipse"
                                                                Storyboard.TargetProperty="Center" Duration="0:0:0.5">
                                            <LinearPointKeyFrame KeyTime="0" Value="81,18" />
                                            <LinearPointKeyFrame KeyTime="0:0:0.5" Value="18,18" />
                                        </PointAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                                                Storyboard.TargetName="ToggleButton_TwitchAuthText_Manual"
                                                                Storyboard.TargetProperty="Opacity" Duration="1">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                                                Storyboard.TargetName="ToggleButton_TwitchAuthText_Auth"
                                                                Storyboard.TargetProperty="Opacity" Duration="1">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                            <DiscreteDoubleKeyFrame KeyTime="1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                                                        Grid.ColumnSpan="2"
                                                        CornerRadius="15"
                                                        BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0,1"
                                                                             StartPoint="0,0">
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                                                                          Offset="0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                                                                          Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>

                                <LinearGradientBrush StartPoint="0,0"
                                                                             EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource MediumColor}" />
                                            <GradientStop Color="{DynamicResource LighterColor}"
                                                                                  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.Background>
                        </Border>

                        <Path Name="ToggleButton_TwitchAuthText_ChoicePath" 
                                                       Height="35">
                            <Path.Data>
                                <EllipseGeometry x:Name="ToggleButton_TwitchAuthText_ChoiceEllipse"   Center="18,18" RadiusX="14" RadiusY="14" />
                            </Path.Data>
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                    <GradientStop Color="{DynamicResource FullColor}" Offset="0"/>
                                    <GradientStop Color="{DynamicResource ForegroundColor}" Offset="1" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>

                        <TextBlock 
                            Name="ToggleButton_TwitchAuthText_Manual" 
                            HorizontalAlignment="Right" VerticalAlignment="Center" 
                            FontSize="10px" Width="60" TextWrapping="Wrap">
                                            Manual Token
                        </TextBlock>
                        <TextBlock Name="ToggleButton_TwitchAuthText_Auth"  
                                   HorizontalAlignment="Left" VerticalAlignment="Center" 
                                   FontSize="10px" Width="60" TextWrapping="Wrap" 
                                   Margin="2,0,0,0" Opacity="1.0">
                                            Auth Code Token
                        </TextBlock>

                        <!--<StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                                                    <Ellipse Margin="5,0"
                                                             Height="25"
                                                             Width="30">
                                                        <Ellipse.Fill>
                                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                                <GradientStop Color="{DynamicResource FullColor}" Offset="0"/>
                                                                <GradientStop Color="{DynamicResource ForegroundColor}" Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                                                    <TextBlock
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"
                                                               FontSize="10px"
                                                                Width="60"
                                                                TextWrapping="Wrap">
                                                        Manual Token
                                                    </TextBlock>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2" Visibility="Collapsed">
                                                    <TextBlock
                                                               HorizontalAlignment="Center" 
                                                               VerticalAlignment="Center"
                                                               FontSize="10px"
                                                        Width="60"
                                                                TextWrapping="Wrap"
                                                                Margin="2,0,0,0">
                                                        Auth Code Token
                                                    </TextBlock>
                                                    <Ellipse
                                                         HorizontalAlignment="Right"
                                                        Margin="4"
                                                         Height="25"
                                                         Width="30">
                                                        <Ellipse.Fill>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                <GradientStop Color="{DynamicResource FullColor}" Offset="0"/>
                                                                <GradientStop Color="{DynamicResource ForegroundColor}" Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                                                </StackPanel>-->

                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>