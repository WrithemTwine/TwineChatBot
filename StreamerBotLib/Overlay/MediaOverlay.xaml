<Window x:Class="StreamerBotLib.Overlay.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Data="clr-namespace:StreamerBotLib.Overlay.GUI"
        xmlns:Prop="clr-namespace:StreamerBotLib.Properties"
        xmlns:M ="clr-namespace:StreamerBotLib.Overlay.Models"
        mc:Ignorable="d"
        Title="Media Overlay" 
        Height="550" Width="510" 
        UseLayoutRounding="True" 
        SnapsToDevicePixels="True" 
        Closing="Window_Closing" 
        Loaded="Window_Loaded"
        Background="{DynamicResource FullBackground}"
        >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Name="ResourceThemeDictionary" Source="pack://application:,,,/StreamerBotLib;component/Themes/DarkTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Data:GUIData x:Name="GUIAppData" x:Key="GUIAppData" />
            <M:SelectedTickerItems x:Name="TickerSelectedItems" x:Key="TickerSelectedItems" />
            <DataTemplate x:Key="OverlayTypeStatTemplate">
                <StatusBarItem Padding="0" >
                    <StackPanel Orientation="Horizontal" Margin="2,0">
                        <TextBlock Text="{Binding OverlayType}" />
                        <TextBlock Text="{Binding OverlayCount, FallbackValue=0, NotifyOnSourceUpdated=True}" />
                    </StackPanel>
                </StatusBarItem>
            </DataTemplate>
            <DataTemplate x:Key="PageLinksTemplate">
                <ListViewItem>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="90" Content="{Binding OverlayType}" />
                        <TextBox Width="400" Text="{Binding OverlayHyperText}" IsReadOnly="True" IsReadOnlyCaretVisible="False" PreviewMouseLeftButtonUp="TextBox_PreviewMouseLeftButtonUp" VerticalContentAlignment="Center" Padding="2,0" />
                    </StackPanel>
                </ListViewItem>
            </DataTemplate>

            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundText}" />
                <Setter Property="MinWidth" Value="50" />
                <Setter Property="Height" Value="25" />

                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource TabItemControlMedium}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="Border">
                                                    <EasingThicknessKeyFrame KeyTime="0" Value="1,1,1,0" />
                                                </ThicknessAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" >
                                            <!--<Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource TabItemControlMedium}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource TabItemControlLight}"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>-->
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border" Margin="0" BorderThickness="1" CornerRadius="2,12,0,0">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource BorderColor}" />
                                    </Border.BorderBrush>

                                    <ContentPresenter x:Name="ContentSite" 
                                                      VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                      ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True" />

                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource TabItemControlLight}" Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource TabItemControlMedium}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Border.Background>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True" >
                                    <Setter Property="Panel.ZIndex" Value="100" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom" 
                   DataContext="{Binding Mode=OneWay, Source={StaticResource GUIAppData}}" 
                   HorizontalAlignment="Center"
                   ItemsSource="{Binding OverlayStats}" 
                   ItemTemplate="{Binding Mode=OneWay, Source={StaticResource OverlayTypeStatTemplate}}" />
        <TabControl Margin="3">
            <TabItem Header="Options" DataContext="{x:Static Prop:Settings.Default}">
                <WrapPanel Orientation="Vertical" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" >
                    <GroupBox Header="Overlay Settings">
                        <CheckBox x:Name="CheckBox_OptionSamePage" IsChecked="{Binding MediaOverlayUseSameStyle}" Click="Click_UpdateLinks">
                            <TextBlock>Enable the same Overlay style for every alert.</TextBlock>
                        </CheckBox>
                    </GroupBox>
                    <GroupBox Header="Server Port Number Settings">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                                <Label Content="Server Action Port: "/>
                                <TextBox x:Name="TextBox_ActionPortNumber" Height="18" Width="80" 
                                         Text="{Binding MediaOverlayActionPort, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, StringFormat=\{0:F0\}, UpdateSourceTrigger=PropertyChanged}" LostFocus="Click_UpdateLinks" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                                <Label Content="Server Ticker Port: "/>
                                <TextBox x:Name="TextBox_TickerPortNumber" Height="18" Width="80" 
                                         Text="{Binding MediaOverlayTickerPort, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, StringFormat=\{0:F0\}, UpdateSourceTrigger=PropertyChanged}" LostFocus="Click_UpdateLinks" />
                            </StackPanel>
                            <TextBlock>
                                Ports consist of 1-65535, the lower ports often have assigned services. <LineBreak />
                                Initial loading will choose a random port.<LineBreak />
                                This will affect the access URLs for the Overlay notices.
                            </TextBlock>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Overlay Media Server">
                        <StackPanel>
                            <CheckBox IsChecked="{Binding MediaOverlayAutoServerStart}">
                                <TextBlock>Enable Auto-Starting Server</TextBlock>
                            </CheckBox> 
                            <RadioButton x:Name="RadioButton_OverlayServer_Start" Checked="RadioButton_OverlayServer_Start_Checked" >
                                <TextBlock>Start Server</TextBlock></RadioButton>
                            <RadioButton x:Name="RadioButton_OverlayServer_Stop" Checked="RadioButton_OverlayServer_Stop_Checked" IsChecked="True" >
                                <TextBlock>Stop Server</TextBlock></RadioButton>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Ticker Item Arrangement">
                        <StackPanel>
                            <GroupBox Header="Itemizations" Width="Auto">
                                <StackPanel>
                                    <RadioButton IsChecked="{Binding MediaOverlayTickerSingle}" Click="TickerSpecChanges">
                                        <TextBlock>Single Item Ticker Pages</TextBlock>
                                    </RadioButton>
                                    <RadioButton IsChecked="{Binding MediaOverlayTickerMulti}" Click="TickerSpecChanges">
                                        <TextBlock>Show All Ticker Items</TextBlock>
                                    </RadioButton>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Animation" Width="Auto">
                                <GroupBox.Resources>
                                    <BitmapImage x:Key="ImageSeconds" UriSource="/StreamerBotLib;component/Overlay/img/seconds.png" />
                                </GroupBox.Resources>
                                <StackPanel>
                                    <RadioButton IsChecked="{Binding MediaOverlayTickerStatic}" Click="TickerSpecChanges" >
                                        <TextBlock>Static</TextBlock>
                                    </RadioButton>
                                    <RadioButton IsChecked="{Binding MediaOverlayTickerRotate}" Click="TickerSpecChanges">
                                        <RadioButton.Content>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock>Rotation Cycle</TextBlock>
                                                <TextBox Width="50" Text="{Binding MediaOverlayTickerRotateTime}" LostFocus="MarqueeTypeSecondsLostFocus">
                                                    <TextBox.Background>
                                                        <ImageBrush ImageSource="{StaticResource ImageSeconds}"/>
                                                    </TextBox.Background>
                                                </TextBox>
                                            </StackPanel>
                                        </RadioButton.Content>
                                    </RadioButton>
                                    <RadioButton IsChecked="{Binding MediaOverlayTickerMarquee}" Click="TickerSpecChanges">
                                        <RadioButton.Content>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock>Marquee Scroll</TextBlock>
                                                <TextBox Width="50" Text="{Binding MediaOverlayTickerMarqueeTime}" LostFocus="MarqueeTypeSecondsLostFocus">
                                                    <TextBox.Background>
                                                        <ImageBrush ImageSource="{StaticResource ImageSeconds}"/>
                                                    </TextBox.Background>
                                                </TextBox>
                                            </StackPanel>
                                        </RadioButton.Content>
                                    </RadioButton>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Show Ticker Items" Padding="6">
                        <StackPanel>
                            <TextBlock FontWeight="Bold" FontSize="10">Select which items to include in the ticker</TextBlock>
                            <ListBox DataContext="{Binding Source={StaticResource TickerSelectedItems}}" 
                                     ItemsSource="{Binding TickerItems}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="M:SelectedTickerItem">
                                        <StackPanel>
                                            <CheckBox Margin="1" 
                                                      IsChecked="{Binding IsSelected}" 
                                                      Click="TickerSelections">
                                                <TextBlock Text="{Binding OverlayTickerItem}" />
                                            </CheckBox>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </GroupBox>
                </WrapPanel>
            </TabItem>
            <TabItem x:Name="TabItem_Links" Header="Links">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top">Use these links in the Streaming Software to display alerts. Available after starting server.</TextBlock>
                    <ListView DataContext="{Binding Mode=OneWay, Source={StaticResource GUIAppData}}" 
                              ItemsSource="{Binding OverlayLinks}" 
                              ItemTemplate="{Binding Mode=OneWay, Source={StaticResource PageLinksTemplate}}" 
                               />
                </DockPanel>
            </TabItem>
            <TabItem Header="Overlay Styles" >
                <DockPanel Margin="3">
                    <TextBlock DockPanel.Dock="Top" Text="The CSS styles below save when the style box loses focus." />
                    <Expander DataContext="{x:Static Prop:Settings.Default}" IsExpanded="{Binding MediaOverlayHelpExpand}" DockPanel.Dock="Top">
                        <Expander.Header>
                            <Label>CSS Help</Label>
                        </Expander.Header>
                        <FlowDocumentScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <FlowDocument>
                                <Section>
                                    <Paragraph FontSize="12">
                                        <Run>These are CSS class styles, allowing you to customize the overlay response style. Please ensure the input is valid, such as at</Run>
                                        <TextBox Foreground="Blue" PreviewMouseLeftButtonUp="TextBox_PreviewMouseLeftButtonUp">https://jigsaw.w3.org/css-validator/</TextBox>
                                        <Run>under direct input. Any syntax errors will invalidate the HTML styles and the Overlay response may fail.</Run>
                                        <LineBreak />
                                        <LineBreak />
                                        <Run>(Stopping the app first,) deleting the *.css files will restore the default data (when the app is opened again).</Run>
                                    </Paragraph>
                                </Section>
                            </FlowDocument>
                        </FlowDocumentScrollViewer>
                    </Expander>

                    <TabControl x:Name="TabControl_OverlayStyles" TabStripPlacement="Top" />
                </DockPanel>

            </TabItem>
        </TabControl>
    </DockPanel>
</Window>

