<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:BotIOController="clr-namespace:ChatBot_Net5.BotIOController"
    xmlns:s="clr-namespace:ChatBot_Net5.Properties"
    x:Class="ChatBot_Net5.BotWindow" mc:Ignorable="d" Title="Twine Chat Bot Manager" Height="771" Width="1020" 
    Closing="OnWindowClosing" SnapsToDevicePixels="True" Loaded="Window_Loaded" UseLayoutRounding="True">
    <Window.Resources>
        <ResourceDictionary>
            <BotIOController:BotController x:Name="ControlBot" x:Key="ControlBot" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Culture/GUI_Msgs.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel SnapsToDevicePixels="True" DataContext="{DynamicResource ControlBot}">
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal" />
                </Style>
            </StatusBar.Resources>
            <StatusBarItem>
                <StackPanel>
                    <Label>All Viewers (Users):</Label>
                    <Label DataContext="{Binding DataManage, Mode=OneWay}" Content="{Binding Users.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator Width="1" />
            <StatusBarItem>
                <StackPanel>
                    <Label>
                        <Label.ToolTip>When a viewers stops following, not currently updated real-time. Bot startup option manages followers.</Label.ToolTip>
                        <Label.Content>Followers:</Label.Content>
                    </Label>
                    <Label DataContext="{Binding DataManage, Mode=OneWay}" Content="{Binding Followers.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator Width="1" />
            <StatusBarItem>
                <StackPanel>
                    <Label>Commands- Built-in:</Label>
                    <Label DataContext="{Binding DataManage, Mode=OneWay}" Content="{Binding BuiltInCommands.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <StackPanel>
                    <Label> User-Defined:</Label>
                    <Label DataContext="{Binding DataManage, Mode=OneWay}" Content="{Binding Commands.Count, NotifyOnSourceUpdated=True, StringFormat=\{0:N\}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator Width="1" />
            <ComboBoxItem x:Name="StatusBar_GoLiveCombo" IsEnabled="False" Visibility="Collapsed" />
        </StatusBar>
        <TabControl>
            <TabControl.Resources>
                <Style TargetType="{x:Type GroupBox}">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Width" Value="230" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="Margin" Value="5" />
                </Style>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Margin" Value="10,5,0,5" />
                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="Padding" Value="5,0" />
                </Style>
                <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="AlternationCount" Value="1" />
                    <Setter Property="AlternatingRowBackground" Value="#FFDBFFF4"/>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                    <Setter Property="AutoGenerateColumns" Value="True" />
                    <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
                    <Setter Property="CanUserAddRows" Value="False" />
                    <Setter Property="CanUserDeleteRows" Value="False" />
                </Style>
            </TabControl.Resources>
            <TabItem Header="Bot Setup">
                <TabControl>
                    <TabItem Header="Bot Actions">
                        <DockPanel VerticalAlignment="Top">
                            <Label DockPanel.Dock="Top" Content="This tab manages the current bot status - to start and stop operations." />
                            <GroupBox Header="Twitch" HorizontalAlignment="Center" Width="Auto">
                                <StackPanel>
                                    <TextBlock>The bot credentials form needs to be completed with at least client id and access token.<LineBreak />The LiveStreamMonitor Service will allow monitoring multiple channels if the &quot;MultiUserLiveBot&quot; is running or started, but functionality <LineBreak />stops when the separate "MultiUserLiveBot" process starts.
                                    <LineBreak />For optimal operation, don't turn start and stop the bots rapidly - allow some time between each operation.</TextBlock>
                                    <TextBlock x:Uid="ExpiredToken" x:Name="TextBlock_ExpiredCredentialsMsg" Foreground="#FFF71553" FontSize="18" HorizontalAlignment="Center" MaxWidth="550" TextAlignment="Center" Visibility="Collapsed" Text="{DynamicResource ExpiredToken}" />
                                    <WrapPanel>
                                        <WrapPanel.Resources>
                                            <Style TargetType="{x:Type Label}">
                                                <Setter Property="Height" Value="50" />
                                            </Style>
                                        </WrapPanel.Resources>
                                        <GroupBox DockPanel.Dock="Top" x:Name="BC_T_groupBox" Header="ChatBot" BorderBrush="#FF212D34">
                                            <WrapPanel Orientation="Horizontal" >
                                                <Label x:Name="Label_TwitchChat_Start" Foreground="Green" Visibility="Collapsed">
                                                    <TextBlock>The Twitch Chat Client is started!</TextBlock>
                                                </Label>
                                                <Label x:Name="Label_TwitchChat_Stop" Foreground="Maroon" Visibility="Visible">
                                                    <TextBlock>The Twitch Chat Client is stopped!</TextBlock>
                                                </Label>
                                                <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchChatBotAutoStart}" >
                                                    <TextBlock>Auto-start when application starts</TextBlock>
                                                </CheckBox>
                                                <RadioButton DataContext="{Binding TwitchIO, Mode=OneWay}" x:Name="Radio_Twitch_StartBot" Content="Start Chat Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown"  />
                                                <RadioButton DataContext="{Binding TwitchIO, Mode=OneWay}" x:Name="Radio_Twitch_StopBot" Content="Stop Chat Bot" IsChecked="True" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                                <Label x:Name="Label_TwitchChat_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                                    <TextBlock>The Twitch Chat Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                                </Label>
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Header="Follower Service">
                                            <WrapPanel>
                                                <Label x:Name="Label_TwitchFollow_Start" Foreground="Green" Visibility="Collapsed">
                                                    <TextBlock TextWrapping="Wrap"><Run Text="The Twitch Follower Client is started!"/></TextBlock>
                                                </Label>
                                                <Label x:Name="Label_TwitchFollow_Stop" Foreground="Maroon" Visibility="Visible">
                                                    <TextBlock TextWrapping="Wrap"><Run Text="The Twitch Follower Client is stopped!"/></TextBlock>
                                                </Label>
                                                <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchFollowerSvcAutoStart}">
                                                    <TextBlock TextWrapping="Wrap"><Run Text="Auto-start when application starts"/></TextBlock>
                                                </CheckBox>
                                                <RadioButton DataContext="{Binding TwitchFollower, Mode=OneWay}" x:Name="Radio_Twitch_FollowBotStart" Content="Start Follower Service Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" />
                                                <RadioButton DataContext="{Binding TwitchFollower, Mode=OneWay}" x:Name="Radio_Twitch_FollowBotStop" Content="Stop Follower Service Bot"  IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                                <Label x:Name="Label_TwitchFollow_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                                    <TextBlock>The Twitch Follow Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                                </Label>
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Header="LiveStream Monitor Service">
                                            <StackPanel Orientation="Vertical">
                                                <WrapPanel>
                                                    <Label x:Name="Label_TwitchMultiLive_Start" Foreground="Green" Visibility="Collapsed">
                                                        <TextBlock>The Twitch LiveStream Monitor Client is started!</TextBlock>
                                                    </Label>
                                                    <Label x:Name="Label_TwitchMultiLive_Stop" Foreground="Maroon" Visibility="Visible">
                                                        <TextBlock>The Twitch LiveStream Monitor Client is stopped!</TextBlock>
                                                    </Label>
                                                    <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchLiveStreamSvcAutoStart}" >
                                                        <TextBlock>Auto-start when application starts</TextBlock>
                                                    </CheckBox>
                                                    <RadioButton DataContext="{Binding TwitchLiveMonitor, Mode=OneWay}" x:Name="Radio_Twitch_LiveBotStart" Content="Start Live Monitor Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" Checked="Radio_Twitch_LiveBotStart_Checked" />
                                                    <RadioButton DataContext="{Binding TwitchLiveMonitor, Mode=OneWay}" x:Name="Radio_Twitch_LiveBotStop" Content="Stop Live Monitor Bot" IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" Checked="Radio_Twitch_LiveBotStop_Checked" />
                                                    <Label x:Name="Label_TwitchMultiLive_Error" Foreground="Maroon" Visibility="Collapsed" Height="Auto">
                                                    <TextBlock>The Twitch MultiLive Client failed to start! Check the Access Token Refresh Date and the Token Scope.</TextBlock>
                                                </Label>
                                                </WrapPanel>
                                                <GroupBox Header="MultiLive Monitoring Bot" Width="Auto">
                                                    <WrapPanel Orientation="Vertical">
                                                        <Label x:Name="Label_LiveStream_MultiLiveActiveMsg" Foreground="Maroon" Visibility="Collapsed">
                                                            <TextBlock>The MultiUserLiveBot is active, single channel activated.</TextBlock>
                                                        </Label>
                                                        <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchMultiLiveAutoStart}">
                                                            <TextBlock>Auto-start when application starts</TextBlock>
                                                        </CheckBox>
                                                        <StackPanel Orientation="Horizontal">
                                                            <RadioButton x:Name="Radio_MultiLiveTwitch_StartBot" Content="Start Bot"  PreviewMouseDown="BC_MultiLiveTwitch_StartBot" IsEnabled="False" />
                                                            <RadioButton x:Name="Radio_MultiLiveTwitch_StopBot" Content="Stop Bot"  PreviewMouseDown="BC_MultiLiveTwitch_StopBot" IsChecked="True" IsEnabled="False" Width="70" />
                                                        </StackPanel>
                                                    </WrapPanel>
                                                </GroupBox>
                                            </StackPanel>
                                        </GroupBox>
                                    </WrapPanel>
                                </StackPanel>
                            </GroupBox>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="Twitch Setup" GotFocus="TabItem_Twitch_GotFocus">
                        <DockPanel LastChildFill="False" x:Name="DockPanel_BotSetup_Twitch">
                            <StackPanel DockPanel.Dock="Left" DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}">
                                <GroupBox Header="Bot Account" Width="450">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Label Content="Channel Name" Width="110" />
                                            <TextBox x:Name="TB_Twitch_Channel" Text="{Binding TwitchChannelName}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" />
                                        </StackPanel>
                                        <TextBlock Width="300" Text="* This Chat Bot only supports communicating to one channel through the Channel Name." TextWrapping="Wrap" FontSize="8" FontStretch="SemiCondensed" />
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Label Content="Bot User Name" Width="110" />
                                            <TextBox x:Name="TB_Twitch_BotUser" Text="{Binding TwitchBotUserName, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Button x:Name="Btn_Twitch_RefreshDate" Content="Refresh Due Date" Width="110" ToolTip="Click this button to set a 60 day due date from today, to show when the 'access token' needs refreshed." Click="RefreshButton_Click" LostFocus="Settings_LostFocus" />
                                            <Label x:Name="Twitch_RefreshDate" Content="{Binding TwitchRefreshDate, FallbackValue=1/1/1900, Mode=TwoWay, StringFormat=MM/dd/yyyy}" Width="200" />
                                        </StackPanel>

                                        <Expander x:Name="Expander_Credentials" Header="Credential (Click me)" ExpandDirection="Down" IsExpanded="False">
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                    <Label Content="Client Id" Width="120" />
                                                    <TextBox x:Name="TB_Twitch_ClientID" Text="{Binding TwitchClientID, Mode=TwoWay}" Width="250" ToolTip="The client ID for the bot user account."  LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" InputScope="Password" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="10,0">
                                                    <Label Content="Token Scope" />
                                                    <TextBox BorderBrush="Blue" BorderThickness="1" TextWrapping="Wrap" Width="328" Height="42" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll">bits:read chat:read chat:edit channel:moderate user:read:broadcast user:edit:follows</TextBox>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                    <Label Content="Access OAuth Token" Width="120" />
                                                    <TextBox x:Name="TB_Twitch_AccessToken" Text="{Binding TwitchAccessToken, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" InputScope="Password" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                                    <Label Content="Refresh Token" Width="120" />
                                                    <TextBox x:Name="TB_Twitch_RefreshToken" Text="{Binding TwitchRefreshToken, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" />
                                                </StackPanel>

                                            </StackPanel>
                                        </Expander>
                                    </StackPanel>
                                </GroupBox>

                                <GroupBox Header="Follow-Back Account - Streamer Channel" Width="450">
                                    <StackPanel>
                                        <TextBlock x:Uid="ExplainFollowBack" Margin="10" Text="{DynamicResource ExplainFollowBack}" />
                                        <StackPanel Orientation="Horizontal" Margin="10">
                                            <TextBlock x:Uid="ExpiredToken" x:Name="TextBlock_ExpiredStreamerCredentialsMsg" Foreground="#FFF71553" FontSize="18" HorizontalAlignment="Center" MaxWidth="550" TextAlignment="Center" Visibility="Collapsed" Text="{DynamicResource ExpiredToken}" />
                                            <Button Content="Refresh Due Date" Width="110" ToolTip="Click this button to set a 60 day due date from today, to show when the 'access token' needs refreshed." Click="RefreshStreamButton_Click" LostFocus="Settings_LostFocus" />
                                            <Label x:Name="Twitch_StreamerRefreshDate"  Content="{Binding TwitchStreamTokenDate, FallbackValue=1/1/1900, Mode=TwoWay, StringFormat=MM/dd/yyyy}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Streamer Channel Name"/>
                                            <TextBox TextWrapping="Wrap" Text="{Binding TwitchStreamerChannel, Mode=TwoWay}" Width="296" />
                                        </StackPanel>
                                    <Expander Header="Credential (Click Me)">
                                            <StackPanel>
                                                
                                            <StackPanel Orientation="Horizontal" Margin="10,0">
                                                <Label Content="Token Scope" />
                                                    <TextBox BorderBrush="Blue" BorderThickness="1" TextWrapping="Wrap" Width="116" Height="22" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll">user:edit:follows</TextBox>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Streamer Token"/>
                                                <TextBox TextWrapping="Wrap" Text="{Binding TwitchStreamerToken, Mode=TwoWay}" Width="340" />
                                            </StackPanel>
                                            </StackPanel>
                                        </Expander></StackPanel>
                                </GroupBox>
                                
                                <StackPanel>
                                    <GroupBox Header="Setup Follower Operations" Width="Auto">
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Seconds between checking for new follows:"/>
                                                <Label Content="{Binding Value, ElementName=Slider_TimeFollowerPollSeconds}" />
                                            </StackPanel>
                                            <Slider x:Name="Slider_TimeFollowerPollSeconds" Height="40" Width="407" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for new followers. Smaller values increases traffic to your channel." Value="{Binding TwitchFrequency, Mode=TwoWay}" Maximum="300" Minimum="5" SmallChange="1" SelectionStart="5" SelectionEnd="300" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="50" TickFrequency="5" />

                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Setup Go-Live Notifications" Width="Auto">
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Seconds between checking for going live: " />
                                                <Label Content="{Binding Value, ElementName=Slider_TimeGoLivePollSeconds}" />
                                            </StackPanel>
                                            <Slider x:Name="Slider_TimeGoLivePollSeconds" Height="40" Width="422" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for a change in channel state: going live, updated stream, and going offline. Smaller values increases traffic to your channel." Value="{Binding TwitchGoLiveFrequency, Mode=TwoWay}" Maximum="3600" Minimum="5" SmallChange="10" SelectionStart="5" SelectionEnd="3600" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="100" TickFrequency="10" />
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>

                            </StackPanel>

                            <FlowDocumentScrollViewer DockPanel.Dock="Right" Margin="10" VerticalScrollBarVisibility="Auto">
                                <FlowDocument FontSize="12" PagePadding="5">
                                    <Section>
                                        <Paragraph>
                                            <Run Text="*The 'Credentials' are in the expander to the left for privacy when the bot starts. Click to expand to enter and view the credentials. The data is saved after the textbox, slider, or checkbox loses focus."/>
                                            <LineBreak/>
                                            <LineBreak/>
                                            <Run Text="The settings are saved at: "/>
                                            <Italic>
                                                <Run Text="C:\Users\{username}\AppData\Local\ChatBot"/>
                                            </Italic>
                                        </Paragraph>
                                        <Paragraph>
                                            <Run Text="Bots need an &quot;Access Token&quot; to authorize it to post to Twitch. Per the OAuth requirements, the &quot;Access Token&quot; must be paired with the &quot;Client Id&quot; used to generate the &quot;Access Token&quot;."/>
                                            <LineBreak />
                                            <LineBreak />
                                            <Run Text="*Until this application supports creating and refreshing access tokens, the user will need to manually perform this task."/>
                                        </Paragraph>
                                    </Section>
                                    <Section>
                                        <List>
                                            <ListItem>
                                                <Paragraph>
                                                    <Run Text="Get the bot account to use within this chat bot."/>
                                                    <LineBreak/>
                                                    <Run Text="*The recommendation is to create a separate Twitch account for this bot to use."/>
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Run Text="Visit: "/>
                                                    <InlineUIContainer>
                                                        <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="https://dev.twitch.tv/console"/>
                                                    </InlineUIContainer>
                                                    <Run Text=" and &quot;Register Your Application&quot; under the account the bot will use."/>
                                                    <LineBreak/>
                                                    <Run Text="*Note, the Twitch account needs 2-factor authentication set-up to register applications.*"/>
                                                </Paragraph>
                                                <List>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Give the application a name (it's just a reference when you look at the listing)."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Add:"/>
                                                            <LineBreak />
                                                            <InlineUIContainer>
                                                                <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="https://twitchapps.com/tokengen/"/>
                                                            </InlineUIContainer>
                                                            <Run Text=" as the OAuth Redirect URLs. Select &quot;Chat Bot&quot; category (or add the token generator website you're using to generate tokens)."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Complete the reCaptcha and click 'Create'."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="View the application entry to get the 'Client Id'. You can save it in your files and add to the left credential box."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                </List>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Run Text="One such site to generate the access tokens is at: "/>
                                                    <InlineUIContainer>
                                                        <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="https://twitchapps.com/tokengen/"/>
                                                    </InlineUIContainer>
                                                </Paragraph>
                                                <List>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Paste the 'Client Id' generated from above at: "/>
                                                            <Italic>
                                                                <Run Text="https://dev.twitch.tv/console"/>
                                                            </Italic>
                                                            <Run Text=" ."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="For &quot;Scopes&quot;, paste exactly"/>
                                                            <LineBreak />
                                                            <InlineUIContainer>
                                                                <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" TextWrapping="Wrap" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="bits:read chat:read chat:edit channel:moderate user:read:broadcast user:edit:follows"/>
                                                            </InlineUIContainer>
                                                            <LineBreak />
                                                            <Run Text="*This permits specific access for the app functions. Please add these scopes. Currently, the app doesn't adjust to what user scopes you've selected if you don't want specific features enabled."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Click 'Connect' and copy the resulting &quot;Access Token&quot;. You can save it to your local files and paste it to the left credential box."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Be sure to click &quot;Refresh Date&quot; here in the credentials which will give you the 60-day date from now in which you need to refresh the 'access token'. You would only need to perform step 3 for a new 'access token'."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                </List>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Run Text="View the other tabs to setup your bot messages to events and commands."/>
                                                </Paragraph>
                                            </ListItem>
                                        </List>
                                    </Section>
                                </FlowDocument>
                            </FlowDocumentScrollViewer>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="Discord" DataContext="{Binding DataManage}">
                        <StackPanel>
                            <TextBlock IsEnabled="False"><Run Text="Add Webhook links, one per line. Bot will report notifications to each Webhook. *The incorrect 'Kind' will prevent the notification."/><LineBreak /><Run Text="Current implemented"/><LineBreak /><Run Text="'Kind':"/></TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <ListView ItemsSource="{Binding KindsWebhooks, Mode=OneWay}" SelectionMode="Single" />
                                <DataGrid x:Name="DG_Webhooks" Height="200" Margin="10,0" AutoGenerateColumns="True" d:LayoutOverrides="LeftMargin, RightMargin" ItemsSource="{Binding Discord, Mode=OneWay}" AllowDrop="True" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />
                            </StackPanel>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Bot Status Log">
                        <GroupBox Header="Bot Status Log" BorderBrush="Black" Width="Auto">
                            <TextBox x:Name="TextBlock_TwitchBotLog" DataContext="{Binding TwitchIO}" Text="{Binding StatusLog, Mode=OneWay}" TextWrapping="Wrap" Background="#FFEEEEEE" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" VerticalScrollBarVisibility="Visible" IsInactiveSelectionHighlightEnabled="True" TextChanged="TextBox_TwitchBotLog_TextChanged" />
                        </GroupBox>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Data &amp; Msgs">
                <TabControl x:Name="TabControl_DataTabs">
                    <TabItem x:Name="TabItem_DataOptions" Header="Options">
                        <TabItem.Resources>
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </TabItem.Resources>
                        <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <DockPanel Margin="20" DataContext="{Binding Source={x:Static s:Settings.Default}}" HorizontalAlignment="Center" ScrollViewer.CanContentScroll="True">
                                <WrapPanel Orientation="Horizontal">
                                    <GroupBox Header="Any - Bot Management">
                                        <StackPanel>
                                            <CheckBox IsChecked="{Binding MsgBotConnection, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Enable bot welcome message when connected to stream channel."/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding PostMultiLive, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Enable posting to social media (e.g. Discord) multiple live messages in same day."/></TextBlock>
                                            </CheckBox>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Twitch - Format Bot messages">
                                        <StackPanel>
                                            <Label Content="/me changes message to all italics" />
                                            <RadioButton x:Uid="Disabled" IsChecked="{Binding MsgNoMe, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" Content="{DynamicResource Disabled}" />
                                            <RadioButton IsChecked="{Binding MsgInsertMe, Mode=TwoWay}" Content="Enable /me for all commands" Click="CheckBox_Click_SaveSettings" />
                                            <RadioButton IsChecked="{Binding MsgPerComMe, Mode=TwoWay}" Content="Enable /me per command" Click="CheckBox_Click_SaveSettings" />
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Any - Automatic Commands by Timer">
                                        <StackPanel Margin="5">
                                            <CheckBox IsChecked="{Binding RepeatWhenLive, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" >
                                                <TextBlock><Run Text="Enable Repeat commands only when live."/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding RepeatTimerCommands, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <CheckBox.ToolTip>
                                                    <TextBlock>Add 'seconds' (whole number, e.g. 600) to the repeat timer column within the command list. Timer updates after the command runs.</TextBlock></CheckBox.ToolTip>
                                                <TextBlock>Enable repeating commands.</TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding RepeatTimerComSlowdown, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" >
                                                <CheckBox.ToolTip>
                                                    <TextBlock>The repeating commands will slow down by up to 2x the specified time. The commands will return/unwind to normal speed when chat is very active. The specs for normal operation speed are about: at least 10+ viewers an hour or over 20 viewer chats in 15 minutes.</TextBlock></CheckBox.ToolTip>
                                                <TextBlock>Enable smart slow-down repeating commands</TextBlock>
                                            </CheckBox>
                                            <TextBlock>TODO: add option spot for bot AI responses to encourage streamer when chatting is slow, and back away when stream has faster chatting.</TextBlock>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Any - Welcome Viewers">
                                        <StackPanel>
                                            <Label Content="Only once per user per active stream (no repeats)" />
                                            <RadioButton IsChecked="{Binding WelcomeDisabled, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock Text="{DynamicResource Disabled}" />
                                            </RadioButton>
                                            <RadioButton IsChecked="{Binding WelcomeUserJoined, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock Text="Enable when viewer joins the channel" />
                                            </RadioButton>
                                            <RadioButton IsChecked="{Binding WelcomeChatMsg, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock Text="Enable when a viewer first chats" />
                                            </RadioButton>
                                            <CheckBox IsChecked="{Binding MsgWelcomeStreamer, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock Text="Enable welcome message when streamer chats" />
                                            </CheckBox>
                                            <Line Fill="Black" StrokeThickness="1" Stroke="Black" X2="200" HorizontalAlignment="Center" />
                                            <TextBlock Text="Customize Welcome Messages - Welcome New Viewer, Returning Viewer, and Followers/Subscribers" />
                                            <CheckBox IsChecked="{Binding WelcomeCustomMsg, Mode=TwoWay}">
                                                <TextBlock Text="Enable" />
                                            </CheckBox>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Twitch - Shout Out Viewers">
                                        <StackPanel>
                                            <Label>
                                                <TextBlock>Active when channel is live</TextBlock>
                                            </Label>
                                            <CheckBox IsChecked="{Binding MsgAutoShout, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock>Auto shoutout viewers when they first appear (tied to 'Welcome Viewers'. Add names to &quot;Auto SO&quot; tab.</TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding TwitchRaidShoutOut}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock>Enable auto shoutout for incoming channel raid streamers</TextBlock>
                                            </CheckBox>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Twitch - Follow Options">
                                        <StackPanel>
                                            <CheckBox IsChecked="{Binding TwitchAddFollowersStart, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Will also re-perform when clicking 'Stop Bot' then 'Start Bot'.">
                                                <TextBlock TextWrapping="Wrap">Enable adding all followers when bot starts.</TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding TwitchPruneNonFollowers, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Will also re-perform when clicking 'Stop Bot' then 'Start Bot'.">
                                                <TextBlock TextWrapping="Wrap">Enable action to remove non-followers from the Follower list when bot starts.</TextBlock>
                                            </CheckBox>
                                            <GroupBox Header="Automatic Follow other Viewers:" Visibility="Visible" Width="199">
                                                <StackPanel>
                                                    <GroupBox Header="Follow-back Account: " Width="165">
                                                        <StackPanel>
                                                            <CheckBox IsChecked="{Binding TwitchFollowbackBotChoice, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Perform follow-back on bot account.">
                                                                <TextBlock>Bot Account</TextBlock></CheckBox>
                                                            <CheckBox IsChecked="{Binding TwitchFollowbackStreamerChoice, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Perform follow-back on streamer account. Must have Stream Name and Token identified in Bot Setup/Twitch Setup tab.">
                                                                <TextBlock>Streamer Account</TextBlock></CheckBox>
                                                        </StackPanel>
                                                    </GroupBox>

                                            <CheckBox IsChecked="{Binding TwitchFollowerFollowBack, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Follow only if not currently following.">
                                                        <TextBlock>Enable follow-back new followers</TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding TwitchRaidFollowBack}"  ToolTip="Follow only if not currently following." Click="CheckBox_Click_SaveSettings">
                                                        <TextBlock>Enable follow-back incoming raider</TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding TwitchAddFollowerNotification}"  ToolTip="Notification of the channel's live status." Click="CheckBox_Click_SaveSettings">
                                                        <TextBlock>Enable live notifications for the follow-back channel i.e. Twitch notifies you when the channel goes live</TextBlock>
                                            </CheckBox>                                                
                                            </StackPanel></GroupBox>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Any - Data Management">
                                        <StackPanel>
                                            <Label>
                                                <TextBlock Foreground="Red"><Run Text="*Unchecking will remove data from database.*"/></TextBlock>
                                            </Label>
                                            <CheckBox x:Name="CheckBox_ManageUsers" IsChecked="{Binding ManageUsers}" Click="CheckBox_ManageData_Click">
                                                <TextBlock TextWrapping="Wrap"><Run Text="Manage channel viewers, including their watchtime.*"/></TextBlock>
                                            </CheckBox>
                                            <CheckBox x:Name="CheckBox_ManageFollowers" IsChecked="{Binding ManageFollowers}" Click="CheckBox_ManageData_Click">
                                                <TextBlock TextWrapping="Wrap"><Run Text="Manage channel followers, including their followage. Requires User data.*"/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding ManageStreamStats}" Click="CheckBox_ManageData_Click">
                                                <TextBlock TextWrapping="Wrap"><Run Text="Record Stream Stats for each stream.*"/></TextBlock>
                                            </CheckBox>
                                            <Label>
                                                <TextBlock Foreground="Red"><Run Text="*Unchecking will remove data from database.*"/></TextBlock>
                                            </Label>
                                        </StackPanel>
                                    </GroupBox>


                                    <!-- Settings Template
                                
                                <GroupBox Header="Twitch -">
                                    <StackPanel>
                                        <CheckBox IsChecked="{Binding AutoShout, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Auto </TextBlock>
                                        </CheckBox>
                                        <CheckBox IsChecked="{Binding TwitchRaidShoutOut}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Enable </TextBlock>
                                        </CheckBox>
                                    </StackPanel>
                                </GroupBox>
                                
                                -->
                                </WrapPanel>
                            </DockPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Auto-SO">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="450" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="When 'Auto shout out' is enabled in options, displaynames in this list will receive a shout-out upon entering the channel - when Twitch tells me they're here."/>
                            <DataGrid Grid.Row="1" DataContext="{Binding DataManage}" ItemsSource="{Binding ShoutOuts, Mode=OneWay}" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="User Data" x:Name="TabItem_Users">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Content="User List"/>
                            <Label Grid.Row="0" Grid.Column="2" Content="Follower List" />
                            <DataGrid x:Name="DG_Users" DataContext="{Binding DataManage}" ItemsSource="{Binding Users, Mode=OneWay}" Grid.Row="1" Grid.Column="0" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns"/>

                            <DataGrid x:Name="DG_Followers" DataContext="{Binding DataManage}" ItemsSource="{Binding Followers, Mode=OneWay}" CanUserDeleteRows="True" Grid.Row="1" Grid.Column="2" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns"/>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Variable Options">
                        <ListView DockPanel.Dock="Right" ItemsSource="{Binding CommandInfo.Collection}" >
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn DisplayMemberBinding="{Binding Parameter}" Header="Parameter" Width="150"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Value}" Header="Value" Width="600"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <TabItem Header="System Events">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="55" />
                                <RowDefinition Height="100*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="250"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <DataGrid x:Name="DG_CategoryList" DataContext="{Binding DataManage}" ItemsSource="{Binding Category, Mode=OneWay}" Grid.Row="1" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" />

                            <TextBlock TextWrapping="Wrap" Grid.Row="0" Grid.Column="2"><Run Text="Double-click the MsgStr for your custom message. Use the 'Commands' to customize to a name or relevant values."/><LineBreak/><Run Text="'Live' is a message to Discord/other services."/></TextBlock>
                            <DataGrid x:Name="DG_CommonMsgs" DataContext="{Binding DataManage}" ItemsSource="{Binding ChannelEvents, Mode=OneWay}"  AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" Grid.Row="1" Grid.Column="2">
                                <DataGrid.ToolTip>
                                    <TextBlock TextWrapping="Wrap" Width="500"><Run Text="The name column is readonly. These are for channel events the bot recognizes and responds with the specified message."/><LineBreak /><LineBreak /><Run Text="You can edit the message to customize a response fitting your channel!"/><LineBreak /><Run Text="Please see the parameters to the right to use in each message, not all will be applicable. Ensure a space before the parameter, e.g. &quot;the #user followed&quot;, the &quot; #&quot; needs to be the first character in the word."/></TextBlock>
                                </DataGrid.ToolTip>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Currency" x:Name="TabItem_CurrencyAccrual" Visibility="Collapsed">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            
                            <DataGrid x:Name="DG_Currency" DataContext="{Binding DataManage}" ItemsSource="{Binding CurrencyType, Mode=OneWay}" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" Grid.Row="1" Grid.Column="0" />
                            <DataGrid x:Name="DG_CurrencyAccrual" DataContext="{Binding DataManage}" ItemsSource="{Binding Currency, Mode=OneWay}" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" CanUserDeleteRows="True" Grid.Row="1" Grid.Column="2" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Commands">
                        <TabControl>
                            <TabItem Header="Help">
                                <Grid>
                                    <TextBlock><Run Text="The 'BuiltInCommands' are those established within the bot."/><LineBreak /><Run Text="The 'socials' (specific services): add your custom message for the social media and your access URL. E.g. &quot;Visit me on Twitter at: http://wwww.twitter.com/myuser&quot;. The command will show all socials except messages that are blank or the default 'Social media url here'."/><LineBreak /><LineBreak /><Run Text="The variables within message to format a custom response:"/><LineBreak /><Run Text="#user: the user specific to the command; either 'command invoker' user or parameter to the command"/><LineBreak /><Run Text="#url: the Twitch URL with the supplied user attached - specific to 'so == shoutout' command"/><LineBreak /><Run Text="#fieldvalue: placeholder for the value from a table lookup"/><LineBreak /><Run Text="#currencyname: placeholder for the currency name - extracted from table"/><LineBreak /><Run Text="#currencyvalue: the value of a currency"/><LineBreak /><LineBreak /><Run Text="#date: the current date"/><LineBreak /><Run Text="#time: the current time"/><LineBreak /></TextBlock>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Commands">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="50" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition />
                                        <RowDefinition Height="5" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="To use command repeat timers, set option in 'Option' tab and set the *seconds* within the command row. This repeat doesn't work with those commands requiring parameters. The '!socials', for example, is an ideal repeat commands. 1 minute = 60 seconds, 10 minutes = 600 seconds, 15 minutes = 900 seconds, 30 minutes = 1800 seconds, 1 hour = 3600 seconds. Top can be '0' for a single item, '-1' for all items, and 'n' (positive integer) for the top n items as defined by 'sort = ASC or DESC" />
                                    <Label Content="Built-in Commands:" Grid.Row="1"/>
                                    <DataGrid Grid.Row="2" x:Name="DG_BuiltInCommands" DataContext="{Binding DataManage}" ItemsSource="{Binding BuiltInCommands, Mode=OneWay}" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" MaxColumnWidth="253" />
                                    <Label Content="User-Defined Commands:" Grid.Row="4"/>
                                    <DataGrid Grid.Row="5" DataContext="{Binding DataManage}" ItemsSource="{Binding Commands, Mode=OneWay}" CanUserDeleteRows="True" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding"/>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </TabItem>
                    <TabItem Header="Stream Stats" x:Name="TabItem_StreamStats">
                        <Grid>
                            <DataGrid DataContext="{Binding DataManage}" ItemsSource="{Binding StreamStats, Mode=OneWay}" CanUserDeleteRows="True" MouseEnter="DataGrid_MouseEnter" MouseLeave="DataGrid_MouseLeave" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />
                        </Grid>
                    </TabItem>
                    <TabItem IsEnabled="False" />
                    <TabItem Header="MultiLive Monitor">
                        <Grid x:Name="TabItem_MultiUserLiveMonitor">
                            <Grid.Resources>
                                <Style TargetType="DataGrid">
                                    <Setter Property="Margin" Value="5"/>
                                    <Setter Property="MaxColumnWidth" Value="160" />
                                    <Setter Property="AlternationCount" Value="1" />
                                    <Setter Property="AlternatingRowBackground" Value="#FFDBFFF4" />
                                    <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
                                    <Setter Property="CanUserAddRows" Value="False" />
                                    <EventSetter Event="MouseEnter" Handler="DataGrid_MouseEnter" />
                                    <EventSetter Event="MouseLeave" Handler="DataGrid_MouseLeave" />
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="298*" />
                                <ColumnDefinition Width="52"/>
                                <ColumnDefinition Width="100"  />
                                <ColumnDefinition Width="52"/>
                                <ColumnDefinition Width="293*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock TextWrapping="Wrap" Grid.Row="0" Padding="3"><Run Text="Use this tab to set up which channels (only first 100) to watch for going live and where to post messages. Currently only Discord."/></TextBlock>
                            <Label Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Foreground="Red" Visibility="{Binding Visibility, ElementName=Label_LiveStream_MultiLiveActiveMsg}">
                                <TextBlock TextWrapping="Wrap"><Run Text="The MultiUserLiveBot is active, single channel activated."/></TextBlock>
                            </Label>
                            <TextBlock TextWrapping="Wrap" Grid.Row="0" Grid.Column="4" Text="Message for Live Notification:" />
                            <TextBox x:Name="TB_LiveMsg" Grid.Row="0" Grid.Column="4" VerticalContentAlignment="Top" 
                             DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" Text="{Binding MsgLive}" 
                             TextAlignment="Left" TextWrapping="Wrap" LostFocus="Settings_LostFocus" Margin="0,16,0,0">
                                <TextBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="#user" Click="MenuItem_Click" />
                                        <MenuItem Header="#category" Click="MenuItem_Click" />
                                        <MenuItem Header="#title" Click="MenuItem_Click" />
                                        <MenuItem Header="#url" Click="MenuItem_Click" />
                                    </ContextMenu>
                                </TextBox.ContextMenu>
                                <TextBox.ToolTip>
                                    <TextBlock><Run Text="Use these tags within the message and it'll be replaced before sending the posted live message."/><LineBreak /><Run Text="Available by right-click menu - insert at cursor."/><LineBreak /><Run Text="&quot;#user&quot; - channel name of the user"/><LineBreak /><Run Text="&quot;#category&quot; - the category of the stream"/><LineBreak /><Run Text="&quot;#title&quot; - the title of the stream when it goes live"/><LineBreak /><Run Text="&quot;#url&quot; - to send someone to the Twitch channel, it's already prepared &quot; twitch.tv/user &quot;"/><LineBreak /><LineBreak /><Run Text="Example: @everyone, #user is now live streaming #category - #title! Come join and say hi at: #url"/></TextBlock>
                                </TextBox.ToolTip>
                            </TextBox>

                            <DataGrid x:Name="DG_Multi_WebHooks" Grid.Row="1" Grid.RowSpan="2" DataContext="{Binding MultiLiveDataManager}" 
                              ItemsSource="{Binding MsgEndPoints, Mode=OneWay}" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding"  />
                            <DataGrid x:Name="DG_Multi_ChannelNames" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" DataContext="{Binding MultiLiveDataManager}" 
                              ItemsSource="{Binding Channels, Mode=OneWay}" RowEditEnding="DG_ChannelNames_RowEditEnding" InitializingNewItem="DataGrid_InitializingNewItem" />
                            <DataGrid x:Name="DG_Multi_LiveStreamStats" Grid.Column="4" Grid.Row="1" Grid.RowSpan="2" DataContext="{Binding MultiLiveDataManager}" ItemsSource="{Binding LiveStream, Mode=TwoWay}" InitializingNewItem="DataGrid_InitializingNewItem" RowEditEnding="DataGrid_RowEditEnding" />

                            <DockPanel x:Name="Panel_BotActivity" Grid.Row="1" Grid.Column="4" Visibility="Collapsed">
                                <Label DockPanel.Dock="Top" Content="Log of Bot Activity:" />
                                <TextBox DockPanel.Dock="Bottom" x:Name="TB_BotActivityLog" Margin="5" TextWrapping="Wrap" Background="#FFEEEEEE" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" VerticalScrollBarVisibility="Visible" IsInactiveSelectionHighlightEnabled="True" TextChanged="TB_BotActivityLog_TextChanged" Text="{Binding MultiLiveStatusLog}" />
                            </DockPanel>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Bot Chat">
                <DockPanel>
                    <DockPanel LastChildFill="True" DockPanel.Dock="Left" Margin="0,0,10,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="100"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Content="Join List to organize playing games with your viewers." HorizontalContentAlignment="Center" Grid.RowSpan="3" />
                            <Label Grid.Row="1" Content="Click the 'remove' box next to the user name to remove from this list." HorizontalContentAlignment="Center" Grid.RowSpan="3" />
                            <GroupBox Grid.Row="2" Padding="10" Header="Join List Status" Grid.RowSpan="3" >
                                <StackPanel DataContext="{Binding Source={x:Static s:Settings.Default}}">
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type RadioButton}">
                                            <Setter Property="Margin" Value="3" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <RadioButton Content="Start Join List" IsChecked="{Binding UserPartyStart, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" />
                                    <RadioButton Content="Stop Join List" IsChecked="{Binding UserPartyStop, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" />
                                </StackPanel>
                            </GroupBox>

                            <ListView Grid.Row="3"  x:Name="LV_JoinList" MaxWidth="500" 
                                      ItemsSource="{Binding JoinCollection, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single" Margin="0,0,0,10">
                                <ListView.Resources>
                                    <DataTemplate x:Key="GridColCheck">
                                        <CheckBox IsChecked="{Binding Remove, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Checked="JoinCollectionCheckBox_Checked" AutomationProperties.IsRowHeader="False" />
                                    </DataTemplate>
                                </ListView.Resources>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Remove" Width="70" CellTemplate="{DynamicResource GridColCheck}" />
                                        <GridViewColumn Header="GameTag UserName" Width="200" DisplayMemberBinding="{Binding GameUserName, Mode=OneWay, UpdateSourceTrigger=Default}" />
                                        <GridViewColumn Header="Chat User" Width="200" DisplayMemberBinding="{Binding ChatUser, Mode=OneWay, UpdateSourceTrigger=Default}" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </DockPanel>
                    <DockPanel LastChildFill="True" DockPanel.Dock="Right"  Background="#FF2B2929" >
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" Margin="5" Background="White" Width="410">
                            <Button Padding="10,4" Margin="10" Content="Pop-Out Chat Box" Click="PopOutChatButton_Click" Height="26" Opacity="1" IsEnabled="False" />
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Label Padding="0" Content="Pop-out Opacity"/>
                                <TextBlock Text="50%"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Right" Margin="0,4,15,4">
                            <TextBox Width="365" />
                            <Button Content="Send" Margin="10,0,0,0" Padding="8,2" />
                        </StackPanel>
                        <FlowDocumentScrollViewer DockPanel.Dock="Top" BorderThickness="1,1,1,1" x:Name="FlowDoc_ChatBox" ScrollViewer.CanContentScroll="True" DataContext="{Binding ChatData, Mode=OneWay}" Document="{Binding Mode=OneWay, NotifyOnSourceUpdated=True}" Foreground="#FFC5C3C3" />
                    </DockPanel>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
