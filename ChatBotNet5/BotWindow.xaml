<Window x:Class="ChatBot_Net5.BotWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:BotIOController ="clr-namespace:ChatBot_Net5.BotIOController"
        xmlns:MultiLive="clr-namespace:MultiUserLiveBot.Clients;assembly=MultiUserLiveBot"
        xmlns:s="clr-namespace:ChatBot_Net5.Properties"
        mc:Ignorable="d"
        Title="Chat Bot Manager" Height="771" Width="1000" Closing="OnWindowClosing" SnapsToDevicePixels="True" Loaded="Window_Loaded" UseLayoutRounding="True">
    <Window.Resources>
        <BotIOController:BotController x:Name="ControlBot" x:Key="ControlBot" />
    </Window.Resources>
    <DockPanel SnapsToDevicePixels="True" DataContext="{DynamicResource ControlBot}">
        <StatusBar Height="25" DockPanel.Dock="Bottom" />
        <TabControl>
            <TabControl.Resources>
                <Style TargetType="GroupBox">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Width" Value="230" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Margin" Value="5" />
                </Style>
                <Style TargetType="RadioButton">
                    <Setter Property="Margin" Value="10,5,0,5" />
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="Padding" Value="5,0" />
                </Style>
            </TabControl.Resources>
            <TabItem Header="Bot Setup">
                <TabControl>
                    <TabItem Header="Bot Actions">
                        <DockPanel VerticalAlignment="Top">
                            <Label DockPanel.Dock="Top" Content="This tab manages the current bot status - to start and stop operations." />
                            <GroupBox Header="Twitch" HorizontalAlignment="Center" Width="Auto">
                                <StackPanel>
                                    <Label>
                                        <TextBlock TextWrapping="Wrap">
                                            The bot credentials form needs to be completed with at least client id and access token.
                                        <LineBreak />
                                            The LiveStreamMonitor Service will not monitor multiple channels and stops if the "MultiUserLiveBot" is running or started.
                                        </TextBlock>
                                    </Label>
                                    <WrapPanel>
                                        <WrapPanel.Resources>
                                            <Style TargetType="Label">
                                                <Setter Property="Height" Value="50" />
                                            </Style>
                                        </WrapPanel.Resources>
                                        <GroupBox DockPanel.Dock="Top" x:Name="BC_T_groupBox" Header="ChatBot" BorderBrush="#FF212D34">
                                            <WrapPanel Orientation="Horizontal" >
                                                <Label x:Name="Label_TwitchChat_Start" Foreground="Green" Visibility="Collapsed">
                                                    <TextBlock TextWrapping="Wrap">The Twitch Chat Client is started!</TextBlock>
                                                </Label>
                                                <Label x:Name="Label_TwitchChat_Stop" Foreground="Maroon" Visibility="Visible">
                                                    <TextBlock TextWrapping="Wrap">The Twitch Chat Client is stopped!</TextBlock>
                                                </Label>
                                                <CheckBox DataContext="{Binding Source={x:Static s:Settings.Default}, Mode=OneWay}" IsChecked="{Binding TwitchChatBotAutoStart}" >
                                                    <TextBlock TextWrapping="Wrap">Auto-start when application starts</TextBlock>
                                                </CheckBox>
                                                <RadioButton DataContext="{Binding TwitchIO, Mode=OneWay}" x:Name="Radio_Twitch_StartBot" Content="Start Chat Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown"  />
                                                <RadioButton DataContext="{Binding TwitchIO, Mode=OneWay}" x:Name="Radio_Twitch_StopBot" Content="Stop Chat Bot" IsChecked="True" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Header="Follower Service">
                                            <WrapPanel>
                                                <Label x:Name="Label_TwitchFollow_Start" Foreground="Green" Visibility="Collapsed">
                                                    <TextBlock TextWrapping="Wrap">The Twitch Follower Client is started!</TextBlock>
                                                </Label>
                                                <Label x:Name="Label_TwitchFollow_Stop" Foreground="Maroon" Visibility="Visible">
                                                    <TextBlock TextWrapping="Wrap">The Twitch Follower Client is stopped!</TextBlock>
                                                </Label>
                                                <CheckBox DataContext="{Binding Source={x:Static s:Settings.Default}, Mode=OneWay}" IsChecked="{Binding TwitchFollowerSvcAutoStart}">
                                                    <TextBlock TextWrapping="Wrap">Auto-start when application starts</TextBlock>
                                                </CheckBox>
                                                <RadioButton DataContext="{Binding TwitchFollower, Mode=OneWay}" x:Name="Radio_Twitch_FollowBotStart" Content="Start Follower Service Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" />
                                                <RadioButton DataContext="{Binding TwitchFollower, Mode=OneWay}" x:Name="Radio_Twitch_FollowBotStop"  Content="Stop Follower Service Bot"  IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Header="LiveStream Monitor Service">
                                            <StackPanel Orientation="Vertical">
                                                <WrapPanel>
                                                    <Label x:Name="Label_TwitchMultiLive_Start" Foreground="Green" Visibility="Collapsed">
                                                        <TextBlock TextWrapping="Wrap">The Twitch LiveStream Monitor Client is started!</TextBlock>
                                                    </Label>
                                                    <Label x:Name="Label_TwitchMultiLive_Stop" Foreground="Maroon" Visibility="Visible">
                                                        <TextBlock TextWrapping="Wrap">The Twitch LiveStream Monitor Client is stopped!</TextBlock>
                                                    </Label>
                                                    <CheckBox DataContext="{Binding Source={x:Static s:Settings.Default}, Mode=OneWay}" IsChecked="{Binding TwitchLiveStreamSvcAutoStart}" >
                                                        <TextBlock TextWrapping="Wrap">Auto-start when application starts</TextBlock>
                                                    </CheckBox>
                                                    <RadioButton DataContext="{Binding TwitchLiveMonitor, Mode=OneWay}" x:Name="Radio_Twitch_LiveBotStart" Content="Start Live Monitor Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" Checked="Radio_Twitch_LiveBotStart_Checked" />
                                                    <RadioButton DataContext="{Binding TwitchLiveMonitor, Mode=OneWay}" x:Name="Radio_Twitch_LiveBotStop" Content="Stop Live Monitor Bot" IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" Checked="Radio_Twitch_LiveBotStop_Checked" />
                                                    <Label x:Name="Label_LiveStream_MultiLiveActiveMsg" Foreground="Red" Visibility="Hidden">
                                                        <TextBlock TextWrapping="Wrap">The MultiUserLiveBot is active, single channel activated.
                                                        </TextBlock>
                                                    </Label>
                                                </WrapPanel>
                                                <GroupBox Header="MultiLive Monitoring Bot" Width="Auto">
                                                    <StackPanel Orientation="Vertical">
                                                        <WrapPanel>
                                                            <CheckBox DataContext="{Binding Source={x:Static s:Settings.Default}, Mode=OneWay}" IsChecked="{Binding TwitchMultiLiveAutoStart}">
                                                                <TextBlock TextWrapping="Wrap">Auto-start when application starts</TextBlock>
                                                            </CheckBox>
                                                            <RadioButton x:Name="Radio_MultiLiveTwitch_StartBot" Content="Start Bot"  PreviewMouseDown="BC_MultiLiveTwitch_StartBot" IsEnabled="False" />
                                                            <RadioButton x:Name="Radio_MultiLiveTwitch_StopBot" Content="Stop Bot"  PreviewMouseDown="BC_MultiLiveTwitch_StopBot" IsChecked="True" IsEnabled="False" Width="70" />
                                                        </WrapPanel>
                                                    </StackPanel>
                                                </GroupBox>
                                            </StackPanel>
                                        </GroupBox>

                                    </WrapPanel>
                                </StackPanel>
                            </GroupBox>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="Twitch Setup" GotFocus="TabItem_Twitch_GotFocus">
                        <DockPanel LastChildFill="False" Name="DockPanel_BotSetup_Twitch">
                            <StackPanel DockPanel.Dock="Left" DataContext="{Binding Source={x:Static s:Settings.Default}, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                    <Label Content="Channel Name" Width="110" />
                                    <TextBox x:Name="TB_Twitch_Channel" Text="{Binding TwitchChannelName}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" />
                                </StackPanel>
                                <TextBlock Width="300" Text="* Currently, this Chat Bot only supports communicating to one channel through the Channel Name." TextWrapping="Wrap" FontSize="8" FontStretch="SemiCondensed" />
                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                    <Label Content="Bot User Name" Width="110" />
                                    <TextBox x:Name="TB_Twitch_BotUser" Text="{Binding TwitchBotUserName, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                    <Button x:Name="Btn_Twitch_RefreshDate" Content="Refresh Due Date" Width="110" ToolTip="Click this button to set a 60 day due date from today, to show when the 'access token' needs refreshed." Click="RefreshButton_Click" LostFocus="Settings_LostFocus" />
                                    <Label Name="Twitch_RefreshDate" Content="{Binding TwitchRefreshDate, FallbackValue=1/1/1900, Mode=TwoWay, StringFormat=MM/dd/yyyy}" Width="200" />
                                </StackPanel>

                                <Expander Name="Expander_Credentials" Header="Credential (Click me)" ExpandDirection="Down" IsExpanded="False">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Label Content="Client Id" Width="120" />
                                            <TextBox x:Name="TB_Twitch_ClientID" Text="{Binding TwitchClientID, Mode=TwoWay}" Width="250" ToolTip="The client ID for the bot user account."  LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" InputScope="Password" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Label Content="Access OAuth Token" Width="120" />
                                            <TextBox x:Name="TB_Twitch_AccessToken" Text="{Binding TwitchAccessToken, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" InputScope="Password" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Label Content="Refresh Token" Width="120" />
                                            <TextBox x:Name="TB_Twitch_RefreshToken" Text="{Binding TwitchRefreshToken, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" />
                                        </StackPanel>

                                    </StackPanel>
                                </Expander>
                                <StackPanel>
                                    <GroupBox Header="Setup Follower Operations">
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Seconds between checking for new follows: " />
                                                <Label Content="{Binding Value, ElementName=Slider_TimeFollowerPollSeconds}" />
                                            </StackPanel>

                                            <Slider x:Name="Slider_TimeFollowerPollSeconds" Height="40" Width="407" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for new followers. Smaller values increases traffic to your channel." Value="{Binding TwitchFrequency, Mode=TwoWay}" Maximum="600" Minimum="5" SmallChange="1" SelectionStart="5" SelectionEnd="600" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="50" TickFrequency="5" />

                                        </StackPanel>
                                    </GroupBox>

                                    <GroupBox Header="Setup Go-Live Notifications">
                                        <StackPanel>
                                            
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Seconds between checking for going live: " />
                                                <Label Content="{Binding Value, ElementName=Slider_TimeGoLivePollSeconds}" />
                                            </StackPanel>
                                            <Slider x:Name="Slider_TimeGoLivePollSeconds" Height="40" Width="422" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for a change in channel state: going live, updated stream, and going offline. Smaller values increases traffic to your channel." Value="{Binding TwitchGoLiveFrequency, Mode=TwoWay}" Maximum="3600" Minimum="5" SmallChange="10" SelectionStart="5" SelectionEnd="3600" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="100" TickFrequency="10" />
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>

                            </StackPanel>

                            <FlowDocumentScrollViewer DockPanel.Dock="Right" Margin="10" VerticalScrollBarVisibility="Auto">
                                <FlowDocument FontSize="12" PagePadding="5">
                                    <Section>
                                        <Paragraph>
                                            *The 'Credentials' are in the expander to the left for privacy when the bot starts. Click to expand to enter and view the credentials. The data is saved after the textbox, slider, or checkbox loses focus.
                                            <LineBreak/>
                                            <LineBreak/>
                                            The settings are saved at:
                                            <Italic>C:\Users\{username}\AppData\Local\ChatBot</Italic>
                                        </Paragraph>
                                        <!--<Section Padding="15,0,15,0">
                                            <Paragraph>
                                                Be sure to update the application into the same folder to keep the settings maintained between versions. If you do need to move the application or if installed into another folder and you want to move the settings already saved to the application, run the application to establish a new folder with settings at the above path and look at the folder timestamps. The last part of the folder name, all the jumbled letters, is a hash code based on the application's folder path.
                                            </Paragraph>
                                            <Table>
                                                <TableRowGroup>
                                                    <TableRow>
                                                        <TableCell BorderBrush="Black" BorderThickness="1" Padding="2">
                                                            <Paragraph>To update the settings:</Paragraph>
                                                        </TableCell>
                                                        <TableCell BorderBrush="Black" BorderThickness="1" Padding="2">
                                                            <Paragraph>To move the settings files:</Paragraph>
                                                        </TableCell>
                                                    </TableRow>
                                                    <TableRow>
                                                        <TableCell BorderBrush="Black" BorderThickness="1" Padding="2">
                                                            <Paragraph>Open the prior application settings 'user.config' file and paste each of the values into the left credentials box.</Paragraph>
                                                        </TableCell>
                                                        <TableCell BorderBrush="Black" BorderThickness="1" Padding="2">
                                                            <Paragraph>Close the application, open the previous settings folder and latest version number, copy the 'user.config' file. Paste the 'user.config' file to the newer application settings folder and the version number.</Paragraph>
                                                        </TableCell>
                                                    </TableRow>
                                                </TableRowGroup>
                                            </Table>
                                        </Section>-->
                                        <Paragraph>
                                            Bots need an "Access Token" to authorize it to post to Twitch. Per the OAuth requirements, the "Access Token" must be paired with the "Client Id" used to generate the "Access Token".
                                            <LineBreak />
                                            <LineBreak />
                                            *Until this application supports creating and refreshing access tokens, the user will need to manually perform this task.
                                        </Paragraph>
                                    </Section>
                                    <Section>
                                        <List>
                                            <ListItem>
                                                <Paragraph>Get the bot account to use within this chat bot.
                                                    <LineBreak/> *The recommendation is to create a separate Twitch account for this bot to use.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>Visit:
                                                    <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll">https://dev.twitch.tv/console</TextBox> and "Register Your Application" under the account the bot will use.
                                                    <LineBreak/> *Note, the Twitch account needs 2-factor authentication set-up to register applications.*
                                                </Paragraph>
                                                <List>
                                                    <ListItem>
                                                        <Paragraph>Give the application a name (it's just a reference when you look at the listing).</Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>Add:
                                                            <LineBreak />
                                                            <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll">https://twitchapps.com/tokengen/</TextBox> as the OAuth Redirect URLs. Select "Chat Bot" category (or add the token generator website you're using to generate tokens).
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>Complete the reCaptcha and click 'Create'.</Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>View the application entry to get the 'Client Id'. You can save it in your files and add to the left credential box.</Paragraph>
                                                    </ListItem>
                                                </List>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>One such site to generate the access tokens is at:
                                                    <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll">https://twitchapps.com/tokengen/</TextBox>
                                                </Paragraph>
                                                <List>
                                                    <ListItem>
                                                        <Paragraph>Paste the 'Client Id' generated from above at:
                                                            <Italic>https://dev.twitch.tv/console</Italic> .
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>For "Scopes", paste exactly
                                                            <LineBreak />
                                                            <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" TextWrapping="Wrap" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll">bits:read chat:read chat:edit channel:moderate user:read:broadcast user:edit:follows</TextBox>
                                                            <LineBreak /> *This permits specific access for the app functions. Please add these scopes. Currently, the app doesn't adjust to what user scopes you've selected if you don't want specific features enabled.
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>Click 'Connect' and copy the resulting "Access Token". You can save it to your local files and paste it to the left credential box.</Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>Be sure to click "Refresh Date" here in the credentials which will give you the 60-day date from now in which you need to refresh the 'access token'. You would only need to perform step 3 for a new 'access token'.</Paragraph>
                                                    </ListItem>
                                                </List>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>View the other tabs to setup your bot messages to events and commands.
                                                </Paragraph>
                                            </ListItem>
                                        </List>
                                    </Section>
                                </FlowDocument>
                            </FlowDocumentScrollViewer>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="Discord" DataContext="{Binding DataManage}">
                        <StackPanel>
                            <TextBlock IsEnabled="False">Add Webhook links, one per line. Bot will report notifications to each Webhook. *The incorrect 'Kind' will prevent the notification.<LineBreak />
                              Current implemented <LineBreak /> 'Kind':
                            </TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <ListView ItemsSource="{Binding KindsWebhooks, Mode=OneWay}" SelectionMode="Single"  />
                                <DataGrid Name="DG_Webhooks" Height="200" Margin="10,0" AutoGenerateColumns="True" d:LayoutOverrides="LeftMargin, RightMargin" ItemsSource="{Binding Discord, Mode=OneWay}"/>
                            </StackPanel>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Bot Status Log">
                        <GroupBox Header="Bot Status Log" BorderBrush="Black" Width="Auto">
                            <TextBox x:Name="TextBlock_TwitchBotLog" DataContext="{Binding TwitchIO}" Text="{Binding StatusLog, Mode=OneWay}" TextWrapping="Wrap" Background="#FFEEEEEE" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" VerticalScrollBarVisibility="Visible" IsInactiveSelectionHighlightEnabled="True" TextChanged="TextBox_TwitchBotLog_TextChanged" />
                        </GroupBox>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Data &amp; Messages">
                <TabControl x:Name="TabControl_DataTabs">
                    <TabItem Header="Options">
                        <StackPanel Margin="10" DataContext="{Binding Source={x:Static s:Settings.Default}}">
                            <WrapPanel>
                                <GroupBox Header="Twitch - Bot Management">
                                    <WrapPanel>
                                        <CheckBox IsChecked="{Binding BotConnectionMsg, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Enable chat message when bot connects to a channel.</TextBlock>
                                        </CheckBox>
                                        <CheckBox IsChecked="{Binding PostMultiLive, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Enable posting to social media (e.g. Discord) multiple live messages in same day.</TextBlock></CheckBox>
                                    </WrapPanel>
                                </GroupBox>
                                <GroupBox Header="Twitch - Format Bot messages">
                                    <StackPanel Margin="5">
                                        <Label Content="/me changes message to all italics" />
                                        <RadioButton IsChecked="{Binding NoMeMsg, Mode=TwoWay}" Content="Disabled" />
                                        <RadioButton IsChecked="{Binding InsertMeToMsg, Mode=TwoWay}" Content="Enable /me for all commands" />
                                        <RadioButton IsChecked="{Binding PerComMeMsg, Mode=TwoWay}" Content="Enable /me per command"  />
                                    </StackPanel>
                                </GroupBox>
                                 <GroupBox Header="Any - Automatic Commands by Timer">
                                    <StackPanel Margin="5">
                                        <CheckBox IsChecked="{Binding RepeatWhenLive, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" >
                                            <TextBlock>Enable Repeat commands only when live.</TextBlock>
                                        </CheckBox>
                                        <CheckBox IsChecked="{Binding RepeatTimerCommands, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Add 'seconds' (whole number, e.g. 600) to the repeat timer column within the command list. Timer updates after the command runs.">
                                            <TextBlock>Enable repeating commands.</TextBlock>
                                        </CheckBox>
                                    </StackPanel>
                                </GroupBox>
                               <GroupBox Header="Any - Welcome Users">
                                    <StackPanel Margin="5">
                                        <Label Content="Only once per user per active stream (no repeats)" />
                                        <RadioButton IsChecked="{Binding WelcomeDisabled, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Disabled</TextBlock>
                                        </RadioButton>
                                        <RadioButton IsChecked="{Binding WelcomeUserJoined, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Enable when viewer joins the channel</TextBlock>
                                        </RadioButton>
                                        <RadioButton IsChecked="{Binding WelcomeChatMsg, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Enable when a viewer first chats</TextBlock>
                                        </RadioButton>
                                        <CheckBox IsChecked="{Binding AutoShout, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Auto shoutout users when they first appear in your live stream (tied to 'Welcome Users'. Add names to "Auto SO" tab.</TextBlock>
                                        </CheckBox>
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox Header="Any - Data Management">
                                    <WrapPanel>
                                        <Label>
                                            <TextBlock Foreground="Red">*Unchecking these settings will remove this data from the database.*</TextBlock>
                                        </Label>
                                        <CheckBox IsChecked="{Binding ManageUsers}" Click="CheckBox_ManageData_Click">
                                            <TextBlock TextWrapping="Wrap">Manage channel viewers in the database, including their watchtime.*</TextBlock>
                                        </CheckBox>
                                        <CheckBox IsChecked="{Binding ManageFollowers}" Click="CheckBox_ManageData_Click">
                                            <TextBlock TextWrapping="Wrap">Manage channel followers in the database, including their followage.*</TextBlock>
                                        </CheckBox>
                                        <CheckBox IsChecked="{Binding ManageStreamStats}" Click="CheckBox_ManageData_Click">
                                            <TextBlock TextWrapping="Wrap">Record Stream Stats for each stream.*</TextBlock>
                                        </CheckBox>
                                         <Label>
                                            <TextBlock Foreground="Red">*Unchecking these settings will remove this data from the database.*</TextBlock>
                                        </Label>
                                        <CheckBox IsChecked="{Binding AddFollowersStart, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Will also re-perform when clicking 'Stop Bot' then 'Start Bot'.">
                                            <TextBlock TextWrapping="Wrap">Enable adding all followers when bot starts, i.e. click 'Start Bot'.</TextBlock>
                                        </CheckBox>

                                    </WrapPanel>
                                </GroupBox>
                                
                            </WrapPanel>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Auto-SO">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="450" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="When 'Auto shout out' is enabled in options, displaynames in this list will receive a shout-out upon entering the channel - when Twitch tells me they're here."/>
                            <DataGrid Grid.Row="1" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding ShoutOuts, Mode=OneWay}" AutoGenerateColumns="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Users" Name="TabItem_Users">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!--<Label Content="This tab is disabled while the bot is started. Stop the bot to access this tab." Grid.Row="0" />-->
                            <DataGrid x:Name="DG_Users" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding Users, Mode=OneWay}" AutoGenerateColumns="True" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" CanUserAddRows="False" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" Grid.Row="1" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Followers" Name="TabItem_Followers">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!--<Label Content="This tab is disabled while the bot is started. Stop the bot to access this tab." Grid.Row="0" />-->
                            <DataGrid x:Name="DG_Followers" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding Followers, Mode=OneWay}" AutoGenerateColumns="True"  AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" CanUserAddRows="False" CanUserDeleteRows="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" Grid.Row="1" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Variable Options">
                        <ListView DockPanel.Dock="Right" ItemsSource="{Binding CommandInfo.Collection}" >
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn DisplayMemberBinding="{Binding Parameter}" Header="Parameter" />
                                    <GridViewColumn DisplayMemberBinding="{Binding Value}" Header="Value"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <TabItem Header="System Events">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="55" />
                                <RowDefinition Height="100*" />
                            </Grid.RowDefinitions>
                            <TextBlock TextWrapping="Wrap" Grid.Row="0">Double-click the MsgStr for your custom message. Use the 'Commands' to customize to a name or relevant values.<LineBreak/>
                                'Live' is a message to Discord/other services.</TextBlock>
                            <DataGrid x:Name="DG_CommonMsgs" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding ChannelEvents, Mode=OneWay}"  AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" DockPanel.Dock="Bottom" CanUserAddRows="False" CanUserDeleteRows="False" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" Grid.Row="1">
                                <DataGrid.ToolTip>
                                    <TextBlock TextWrapping="Wrap" Width="500">The name column is readonly. These are for channel events the bot recognizes and responds with the specified message. 
                                    <LineBreak /><LineBreak />         
                                    You can edit the message to customize a response fitting your channel!
                                    <LineBreak />
                                    Please see the parameters to the right to use in each message, not all will be applicable. Ensure a space before  the parameter, e.g. "the #user followed", the " #" needs to be the first character in the word.
                                    </TextBlock>
                                </DataGrid.ToolTip>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Currency Types">
                        <Grid>
                            <DataGrid Name="DG_Currency" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding CurrencyType, Mode=OneWay}" AutoGenerateColumns="True" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" CanUserAddRows="False" CanUserDeleteRows="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Currency" Name="TabItem_CurrencyAccrual">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!--<Label Content="This tab is disabled while the bot is started. Stop the bot to access this tab." Grid.Row="0" />-->
                            <DataGrid Name="DG_CurrencyAccrual" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding Currency, Mode=OneWay}" AutoGenerateColumns="True" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" CanUserAddRows="False" CanUserDeleteRows="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" Grid.Row="1" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Command System">
                        <TabControl>
                            <TabItem Header="Help">
                                <Grid>
                                    <TextBlock>
                                        The 'BuiltInCommands' are those established within the bot. <LineBreak />
                                        The 'socials' (specific services): add your custom message for the social media and your access URL. E.g. "Visit me on Twitter at: http://wwww.twitter.com/myuser". The command will show all socials except messages that are blank or the default 'Social media url here'.
                                        <LineBreak />
                                        <LineBreak />
                                        The variables within message to format a custom response:<LineBreak />
                                        #user: the user specific to the command; either 'command invoker' user or parameter to the command<LineBreak />
                                        #url: the Twitch URL with the supplied user attached - specific to 'so == shoutout' command<LineBreak />
                                        #fieldvalue: placeholder for the value from a table lookup<LineBreak />
                                        #currencyname: placeholder for the currency name - extracted from table<LineBreak />
                                        #currencyvalue: the value of a currency<LineBreak />
                                        <LineBreak />
                                        #date: the current date<LineBreak />
                                        #time: the current time<LineBreak />
                                    </TextBlock>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Built-In Commands">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="50" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="To use command repeat timers, set option in 'Option' tab and set the *seconds* within the command row. This repeat doesn't work with those commands requiring parameters. The '!socials', for example, is an ideal repeat commands. 1 minute = 60 seconds, 10 minutes = 600 seconds, 15 minutes = 900 seconds, 30 minutes = 1800 seconds, 1 hour = 3600 seconds. Top can be '0' for a single item, '-1' for all items, and 'n' (positive integer) for the top n items as defined by 'sort = ASC or DESC" />
                                    <DataGrid Grid.Row="1" x:Name="DG_BuiltInCommands" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding BuiltInCommands, Mode=OneWay}" AutoGenerateColumns="True"  AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns"  AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" CanUserDeleteRows="False" CanUserAddRows="False" MaxColumnWidth="253" />
                                </Grid>
                            </TabItem>
                            <TabItem Header="Commands">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="50" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="To use command repeat timers, set option in 'Option' tab and set the seconds within the command row. This repeat doesn't work with those commands requiring parameters. The '!socials', for example, is an ideal repeat command. 1 minute = 60 seconds, 10 minutes = 600 seconds, 15 minutes = 900 seconds, 30 minutes = 1800 seconds, 1 hour = 3600 seconds. Top can be '0' for a single item, '-1' for all items, and 'n' (positive integer) for the top n items as defined by 'sort = ASC or DESC"/>
                                    <DataGrid Grid.Row="1" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding Commands, Mode=OneWay}" AutoGenerateColumns="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" />
                                </Grid>
                            </TabItem>

                        </TabControl>
                    </TabItem>
                    <TabItem Header="Stream Stats" Name="TabItem_StreamStats">
                        <Grid>
                            <DataGrid IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding StreamStats, Mode=OneWay}" AutoGenerateColumns="True" CanUserAddRows="False" CanUserDeleteRows="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" />
                        </Grid>
                    </TabItem>
                    <TabItem IsEnabled="False" />
                    <TabItem Header="MultiLive Monitor">
                        <Grid x:Name="TabItem_MultiUserLiveMonitor">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="298*" />
                                <ColumnDefinition Width="52"/>
                                <ColumnDefinition Width="100"  />
                                <ColumnDefinition Width="52"/>
                                <ColumnDefinition Width="293*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock TextWrapping="Wrap" Grid.Row="0" Padding="3">
                        Use this tab to set up which channels (only first 100) to watch for going live and where to post messages. Currently only Discord.
                            </TextBlock>
                            <Label Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Foreground="Red" Visibility="{Binding Visibility, ElementName=Label_LiveStream_MultiLiveActiveMsg}">
                                <TextBlock TextWrapping="Wrap">The MultiUserLiveBot is active, single channel activated.
                                </TextBlock>
                            </Label>
                            <TextBlock TextWrapping="Wrap" Grid.Row="0" Grid.Column="4" Text="Message for Live Notification:" />
                            <TextBox x:Name="TB_LiveMsg" Grid.Row="0" Grid.Column="4" VerticalContentAlignment="Top" 
                             DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" Text="{Binding LiveMsg}" 
                             TextAlignment="Left" TextWrapping="Wrap" LostFocus="Settings_LostFocus" Margin="0,16,0,0">
                                <TextBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="#user" Click="MenuItem_Click" />
                                        <MenuItem Header="#category" Click="MenuItem_Click" />
                                        <MenuItem Header="#title" Click="MenuItem_Click" />
                                        <MenuItem Header="#url" Click="MenuItem_Click" />
                                    </ContextMenu>
                                </TextBox.ContextMenu>
                                <TextBox.ToolTip>
                                    <TextBlock>
                               
                            Use these tags within the message and it'll be replaced before sending the posted live message. <LineBreak />
                             Available by right-click menu - insert at cursor. <LineBreak />    
                             "#user" - channel name of the user<LineBreak />
                             "#category" - the category of the stream<LineBreak />
                             "#title" - the title of the stream when it goes live<LineBreak />
                             "#url" - to send someone to the Twitch channel, it's already prepared " twitch.tv/user "<LineBreak />
                            <LineBreak />
                            Example: @everyone, #user is now live streaming #category - #title! Come join and say hi at: #url
                                    </TextBlock>
                                </TextBox.ToolTip>
                            </TextBox>

                            <DataGrid x:Name="DG_Multi_WebHooks" Grid.Row="1" Grid.RowSpan="2" Margin="5,5,5,5" DataContext="{Binding MultiLiveDataManager}" 
                              ItemsSource="{Binding MsgEndPoints, Mode=OneWay}" MaxColumnWidth="160" AlternationCount="1" 
                              AlternatingRowBackground="#FFDBFFF4" IsSynchronizedWithCurrentItem="True" />
                            <DataGrid x:Name="DG_Multi_ChannelNames" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" Margin="5,5,5,5" DataContext="{Binding MultiLiveDataManager}" 
                              ItemsSource="{Binding Channels, Mode=OneWay}" MaxColumnWidth="160"  AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" IsSynchronizedWithCurrentItem="True" RowEditEnding="DG_ChannelNames_RowEditEnding" />
                            <DataGrid x:Name="DG_Multi_LiveStreamStats" Grid.Column="4" Grid.Row="1" Margin="5,5,5,5" Grid.RowSpan="2" MaxColumnWidth="160" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" IsSynchronizedWithCurrentItem="True" DataContext="{Binding MultiLiveDataManager}" ItemsSource="{Binding LiveStream, Mode=TwoWay}" />

                            <DockPanel x:Name="Panel_BotActivity" Grid.Row="1" Grid.Column="4" Visibility="Collapsed">
                                <Label DockPanel.Dock="Top" Content="Log of Bot Activity:" />
                                <TextBox DockPanel.Dock="Bottom" x:Name="TB_BotActivityLog" Margin="5" TextWrapping="Wrap" Background="#FFEEEEEE" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" VerticalScrollBarVisibility="Visible" IsInactiveSelectionHighlightEnabled="True" TextChanged="TB_BotActivityLog_TextChanged" Text="{Binding MultiLiveStatusLog}" />
                            </DockPanel>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Bot Chat">
                <DockPanel>
                    <DockPanel LastChildFill="True" DockPanel.Dock="Left" Margin="0,0,10,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="100"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Content="Join List to organize playing games with your viewers." HorizontalContentAlignment="Center" Grid.RowSpan="3" />
                            <Label Grid.Row="1" Content="Click the 'remove' box next to the user name to remove from this list." HorizontalContentAlignment="Center" Grid.RowSpan="3" />
                            <GroupBox Grid.Row="2" Padding="10" Header="Join List Status" Grid.RowSpan="3" >
                                <StackPanel DataContext="{Binding Source={x:Static s:Settings.Default}}">
                                    <StackPanel.Resources>
                                        <Style TargetType="RadioButton">
                                            <Setter Property="Margin" Value="3" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <RadioButton Content="Start Join List" IsChecked="{Binding UserPartyStart, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" />
                                    <RadioButton Content="Stop Join List" IsChecked="{Binding UserPartyStop, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" />
                                </StackPanel>
                            </GroupBox>

                            <ListView Grid.Row="3"  x:Name="LV_JoinList" MaxWidth="500" 
                                      ItemsSource="{Binding JoinCollection, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single" Margin="0,0,0,10">
                                <ListView.Resources>
                                    <DataTemplate x:Key="GridColCheck">
                                        <CheckBox IsChecked="{Binding Remove, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Checked="JoinCollectionCheckBox_Checked" AutomationProperties.IsRowHeader="False" />
                                    </DataTemplate>
                                </ListView.Resources>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Remove" Width="70" CellTemplate="{DynamicResource GridColCheck}" />
                                        <GridViewColumn Header="GameTag UserName" Width="200" DisplayMemberBinding="{Binding GameUserName, Mode=OneWay, UpdateSourceTrigger=Default}" />
                                        <GridViewColumn Header="Chat User" Width="200" DisplayMemberBinding="{Binding ChatUser, Mode=OneWay, UpdateSourceTrigger=Default}" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </DockPanel>
                    <DockPanel LastChildFill="True" DockPanel.Dock="Right"  Background="#FF2B2929" >
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" Margin="5" Background="White" Width="410">
                            <Button Padding="10,4" Margin="10" Content="Pop-Out Chat Box" Click="PopOutChatButton_Click" Height="26" />
                            <GroupBox Header="Pop-out Opacity" Margin="5,0" Width="252" Height="50">
                                <Slider x:Name="Slider_PopOut_Opacity" TickPlacement="TopLeft" IsSnapToTickEnabled="True" Height="25"  />
                            </GroupBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Right" Margin="0,4,15,4">
                            <TextBox Width="365" />
                            <Button Content="Send" Margin="10,0,0,0" Padding="8,2" />
                        </StackPanel>

                        <FlowDocumentScrollViewer DockPanel.Dock="Top" BorderThickness="1,1,1,1" x:Name="FlowDoc_ChatBox" ScrollViewer.CanContentScroll="True" DataContext="{Binding ChatData, Mode=OneWay}" Document="{Binding}" Foreground="#FFC5C3C3" />
                    </DockPanel>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
