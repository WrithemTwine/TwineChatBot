<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:BotIOController ="clr-namespace:ChatBot_Net5.BotIOController"
        xmlns:MultiLive="clr-namespace:MultiUserLiveBot.Clients;assembly=MultiUserLiveBot"
        xmlns:s="clr-namespace:ChatBot_Net5.Properties"
        xmlns:local="clr-namespace:ChatBot_Net5" x:Class="ChatBot_Net5.BotWindow"
        mc:Ignorable="d"
        Title="Chat Bot Manager" Height="771" Width="1020" Closing="OnWindowClosing" SnapsToDevicePixels="True" Loaded="Window_Loaded" UseLayoutRounding="True">
    <Window.Resources>
        <BotIOController:BotController x:Name="ControlBot" x:Key="ControlBot" />
    </Window.Resources>
    <DockPanel SnapsToDevicePixels="True" DataContext="{DynamicResource ControlBot}">
        <StatusBar Height="25" DockPanel.Dock="Bottom" />
        <TabControl>
            <TabControl.Resources>
                <Style TargetType="{x:Type GroupBox}">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Width" Value="230" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="Margin" Value="5" />
                </Style>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Margin" Value="10,5,0,5" />
                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="Padding" Value="5,0" />
                </Style>
            </TabControl.Resources>
            <TabItem Header="Bot Setup">
                <TabControl>
                    <TabItem Header="Bot Actions">
                        <DockPanel VerticalAlignment="Top">
                            <Label DockPanel.Dock="Top" Content="This tab manages the current bot status - to start and stop operations." />
                            <GroupBox Header="Twitch" HorizontalAlignment="Center" Width="Auto">
                                <StackPanel>
                                    <Label>
                                        <TextBlock TextWrapping="Wrap"><Run Text="The bot credentials form needs to be completed with at least client id and access token."/><LineBreak /><Run Text="The LiveStreamMonitor Service will not monitor multiple channels and stops if the &quot;MultiUserLiveBot&quot; is running or started."/></TextBlock>
                                    </Label>
                                    <WrapPanel>
                                        <WrapPanel.Resources>
                                            <Style TargetType="{x:Type Label}">
                                                <Setter Property="Height" Value="50" />
                                            </Style>
                                        </WrapPanel.Resources>
                                        <GroupBox DockPanel.Dock="Top" x:Name="BC_T_groupBox" Header="ChatBot" BorderBrush="#FF212D34">
                                            <WrapPanel Orientation="Horizontal" >
                                                <Label x:Name="Label_TwitchChat_Start" Foreground="Green" Visibility="Collapsed">
                                                    <TextBlock TextWrapping="Wrap"><Run Text="The Twitch Chat Client is started!"/></TextBlock>
                                                </Label>
                                                <Label x:Name="Label_TwitchChat_Stop" Foreground="Maroon" Visibility="Visible">
                                                    <TextBlock TextWrapping="Wrap"><Run Text="The Twitch Chat Client is stopped!"/></TextBlock>
                                                </Label>
                                                <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchChatBotAutoStart}" >
                                                    <TextBlock TextWrapping="Wrap"><Run Text="Auto-start when application starts"/></TextBlock>
                                                </CheckBox>
                                                <RadioButton DataContext="{Binding TwitchIO, Mode=OneWay}" x:Name="Radio_Twitch_StartBot" Content="Start Chat Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown"  />
                                                <RadioButton DataContext="{Binding TwitchIO, Mode=OneWay}" x:Name="Radio_Twitch_StopBot" Content="Stop Chat Bot" IsChecked="True" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Header="Follower Service">
                                            <WrapPanel>
                                                <Label x:Name="Label_TwitchFollow_Start" Foreground="Green" Visibility="Collapsed">
                                                    <TextBlock TextWrapping="Wrap"><Run Text="The Twitch Follower Client is started!"/></TextBlock>
                                                </Label>
                                                <Label x:Name="Label_TwitchFollow_Stop" Foreground="Maroon" Visibility="Visible">
                                                    <TextBlock TextWrapping="Wrap"><Run Text="The Twitch Follower Client is stopped!"/></TextBlock>
                                                </Label>
                                                <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchFollowerSvcAutoStart}">
                                                    <TextBlock TextWrapping="Wrap"><Run Text="Auto-start when application starts"/></TextBlock>
                                                </CheckBox>
                                                <RadioButton DataContext="{Binding TwitchFollower, Mode=OneWay}" x:Name="Radio_Twitch_FollowBotStart" Content="Start Follower Service Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" />
                                                <RadioButton DataContext="{Binding TwitchFollower, Mode=OneWay}" x:Name="Radio_Twitch_FollowBotStop"  Content="Stop Follower Service Bot"  IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" />
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Header="LiveStream Monitor Service">
                                            <StackPanel Orientation="Vertical">
                                                <WrapPanel>
                                                    <Label x:Name="Label_TwitchMultiLive_Start" Foreground="Green" Visibility="Collapsed">
                                                        <TextBlock TextWrapping="Wrap"><Run Text="The Twitch LiveStream Monitor Client is started!"/></TextBlock>
                                                    </Label>
                                                    <Label x:Name="Label_TwitchMultiLive_Stop" Foreground="Maroon" Visibility="Visible">
                                                        <TextBlock TextWrapping="Wrap"><Run Text="The Twitch LiveStream Monitor Client is stopped!"/></TextBlock>
                                                    </Label>
                                                    <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchLiveStreamSvcAutoStart}" >
                                                        <TextBlock TextWrapping="Wrap"><Run Text="Auto-start when application starts"/></TextBlock>
                                                    </CheckBox>
                                                    <RadioButton DataContext="{Binding TwitchLiveMonitor, Mode=OneWay}" x:Name="Radio_Twitch_LiveBotStart" Content="Start Live Monitor Bot" IsEnabled="False" PreviewMouseLeftButtonDown="RadioButton_StartBot_PreviewMoustLeftButtonDown" Checked="Radio_Twitch_LiveBotStart_Checked" />
                                                    <RadioButton DataContext="{Binding TwitchLiveMonitor, Mode=OneWay}" x:Name="Radio_Twitch_LiveBotStop" Content="Stop Live Monitor Bot" IsEnabled="False" IsChecked="True" PreviewMouseLeftButtonDown="RadioButton_StopBot_PreviewMoustLeftButtonDown" Checked="Radio_Twitch_LiveBotStop_Checked" />
                                                    <Label x:Name="Label_LiveStream_MultiLiveActiveMsg" Foreground="Red" Visibility="Hidden">
                                                        <TextBlock TextWrapping="Wrap"><Run Text="The MultiUserLiveBot is active, single channel activated."/></TextBlock>
                                                    </Label>
                                                </WrapPanel>
                                                <GroupBox Header="MultiLive Monitoring Bot" Width="Auto">
                                                    <StackPanel Orientation="Vertical">
                                                        <WrapPanel>
                                                            <CheckBox DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" IsChecked="{Binding TwitchMultiLiveAutoStart}">
                                                                <TextBlock TextWrapping="Wrap"><Run Text="Auto-start when application starts"/></TextBlock>
                                                            </CheckBox>
                                                            <RadioButton x:Name="Radio_MultiLiveTwitch_StartBot" Content="Start Bot"  PreviewMouseDown="BC_MultiLiveTwitch_StartBot" IsEnabled="False" />
                                                            <RadioButton x:Name="Radio_MultiLiveTwitch_StopBot" Content="Stop Bot"  PreviewMouseDown="BC_MultiLiveTwitch_StopBot" IsChecked="True" IsEnabled="False" Width="70" />
                                                        </WrapPanel>
                                                    </StackPanel>
                                                </GroupBox>
                                            </StackPanel>
                                        </GroupBox>

                                    </WrapPanel>
                                </StackPanel>
                            </GroupBox>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="Twitch Setup" GotFocus="TabItem_Twitch_GotFocus">
                        <DockPanel LastChildFill="False" x:Name="DockPanel_BotSetup_Twitch">
                            <StackPanel DockPanel.Dock="Left" DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}">
                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                    <Label Content="Channel Name" Width="110" />
                                    <TextBox x:Name="TB_Twitch_Channel" Text="{Binding TwitchChannelName}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" />
                                </StackPanel>
                                <TextBlock Width="300" Text="* Currently, this Chat Bot only supports communicating to one channel through the Channel Name." TextWrapping="Wrap" FontSize="8" FontStretch="SemiCondensed" />
                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                    <Label Content="Bot User Name" Width="110" />
                                    <TextBox x:Name="TB_Twitch_BotUser" Text="{Binding TwitchBotUserName, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                    <Button x:Name="Btn_Twitch_RefreshDate" Content="Refresh Due Date" Width="110" ToolTip="Click this button to set a 60 day due date from today, to show when the 'access token' needs refreshed." Click="RefreshButton_Click" LostFocus="Settings_LostFocus" />
                                    <Label x:Name="Twitch_RefreshDate" Content="{Binding TwitchRefreshDate, FallbackValue=1/1/1900, Mode=TwoWay, StringFormat=MM/dd/yyyy}" Width="200" />
                                </StackPanel>

                                <Expander x:Name="Expander_Credentials" Header="Credential (Click me)" ExpandDirection="Down" IsExpanded="False">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Label Content="Client Id" Width="120" />
                                            <TextBox x:Name="TB_Twitch_ClientID" Text="{Binding TwitchClientID, Mode=TwoWay}" Width="250" ToolTip="The client ID for the bot user account."  LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" InputScope="Password" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Label Content="Access OAuth Token" Width="120" />
                                            <TextBox x:Name="TB_Twitch_AccessToken" Text="{Binding TwitchAccessToken, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" SourceUpdated="TextBox_SourceUpdated" InputScope="Password" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Height="25" Margin="10">
                                            <Label Content="Refresh Token" Width="120" />
                                            <TextBox x:Name="TB_Twitch_RefreshToken" Text="{Binding TwitchRefreshToken, Mode=TwoWay}" Width="250" LostFocus="Settings_LostFocus" />
                                        </StackPanel>

                                    </StackPanel>
                                </Expander>
                                <StackPanel>
                                    <GroupBox Header="Setup Follower Operations" Width="Auto">
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Seconds between checking for new follows:"/>
                                                <TextBlock Text="{Binding Value, ElementName=Slider_TimeFollowerPollSeconds}" />
                                            </StackPanel>
                                            <Slider x:Name="Slider_TimeFollowerPollSeconds" Height="40" Width="407" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for new followers. Smaller values increases traffic to your channel." Value="{Binding TwitchFrequency, Mode=TwoWay}" Maximum="600" Minimum="5" SmallChange="1" SelectionStart="5" SelectionEnd="600" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="50" TickFrequency="5" />

                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Setup Go-Live Notifications" Width="Auto">
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Seconds between checking for going live: " />
                                                <TextBlock Text="{Binding Value, ElementName=Slider_TimeGoLivePollSeconds}" />
                                            </StackPanel>
                                            <Slider x:Name="Slider_TimeGoLivePollSeconds" Height="40" Width="422" AutoToolTipPlacement="TopLeft" Interval="1" TickPlacement="Both" ToolTip="Choose how often, in seconds, to check for a change in channel state: going live, updated stream, and going offline. Smaller values increases traffic to your channel." Value="{Binding TwitchGoLiveFrequency, Mode=TwoWay}" Maximum="3600" Minimum="5" SmallChange="10" SelectionStart="5" SelectionEnd="3600" Margin="10,0" IsSnapToTickEnabled="True" LostFocus="Settings_LostFocus" LargeChange="100" TickFrequency="10" />
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>

                            </StackPanel>

                            <FlowDocumentScrollViewer DockPanel.Dock="Right" Margin="10" VerticalScrollBarVisibility="Auto">
                                <FlowDocument FontSize="12" PagePadding="5">
                                    <Section>
                                        <Paragraph>
                                            <Run Text="*The 'Credentials' are in the expander to the left for privacy when the bot starts. Click to expand to enter and view the credentials. The data is saved after the textbox, slider, or checkbox loses focus."/>
                                            <LineBreak/>
                                            <LineBreak/>
                                            <Run Text="The settings are saved at: "/>
                                            <Italic>
                                                <Run Text="C:\Users\{username}\AppData\Local\ChatBot"/>
                                            </Italic>
                                        </Paragraph>
                                        <!--<Section Padding="15,0,15,0">
                                            <Paragraph>
                                                Be sure to update the application into the same folder to keep the settings maintained between versions. If you do need to move the application or if installed into another folder and you want to move the settings already saved to the application, run the application to establish a new folder with settings at the above path and look at the folder timestamps. The last part of the folder name, all the jumbled letters, is a hash code based on the application's folder path.
                                            </Paragraph>
                                            <Table>
                                                <TableRowGroup>
                                                    <TableRow>
                                                        <TableCell BorderBrush="Black" BorderThickness="1" Padding="2">
                                                            <Paragraph>To update the settings:</Paragraph>
                                                        </TableCell>
                                                        <TableCell BorderBrush="Black" BorderThickness="1" Padding="2">
                                                            <Paragraph>To move the settings files:</Paragraph>
                                                        </TableCell>
                                                    </TableRow>
                                                    <TableRow>
                                                        <TableCell BorderBrush="Black" BorderThickness="1" Padding="2">
                                                            <Paragraph>Open the prior application settings 'user.config' file and paste each of the values into the left credentials box.</Paragraph>
                                                        </TableCell>
                                                        <TableCell BorderBrush="Black" BorderThickness="1" Padding="2">
                                                            <Paragraph>Close the application, open the previous settings folder and latest version number, copy the 'user.config' file. Paste the 'user.config' file to the newer application settings folder and the version number.</Paragraph>
                                                        </TableCell>
                                                    </TableRow>
                                                </TableRowGroup>
                                            </Table>
                                        </Section>-->
                                        <Paragraph>
                                            <Run Text="Bots need an &quot;Access Token&quot; to authorize it to post to Twitch. Per the OAuth requirements, the &quot;Access Token&quot; must be paired with the &quot;Client Id&quot; used to generate the &quot;Access Token&quot;."/>
                                            <LineBreak />
                                            <LineBreak />
                                            <Run Text="*Until this application supports creating and refreshing access tokens, the user will need to manually perform this task."/>
                                        </Paragraph>
                                    </Section>
                                    <Section>
                                        <List>
                                            <ListItem>
                                                <Paragraph>
                                                    <Run Text="Get the bot account to use within this chat bot."/>
                                                    <LineBreak/>
                                                    <Run Text="*The recommendation is to create a separate Twitch account for this bot to use."/>
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Run Text="Visit: "/>
                                                    <InlineUIContainer>
                                                        <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="https://dev.twitch.tv/console"/>
                                                    </InlineUIContainer>
                                                    <Run Text=" and &quot;Register Your Application&quot; under the account the bot will use."/>
                                                    <LineBreak/>
                                                    <Run Text="*Note, the Twitch account needs 2-factor authentication set-up to register applications.*"/>
                                                </Paragraph>
                                                <List>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Give the application a name (it's just a reference when you look at the listing)."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Add:"/>
                                                            <LineBreak />
                                                            <InlineUIContainer>
                                                                <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="https://twitchapps.com/tokengen/"/>
                                                            </InlineUIContainer>
                                                            <Run Text=" as the OAuth Redirect URLs. Select &quot;Chat Bot&quot; category (or add the token generator website you're using to generate tokens)."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Complete the reCaptcha and click 'Create'."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="View the application entry to get the 'Client Id'. You can save it in your files and add to the left credential box."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                </List>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Run Text="One such site to generate the access tokens is at: "/>
                                                    <InlineUIContainer>
                                                        <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="https://twitchapps.com/tokengen/"/>
                                                    </InlineUIContainer>
                                                </Paragraph>
                                                <List>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Paste the 'Client Id' generated from above at: "/>
                                                            <Italic>
                                                                <Run Text="https://dev.twitch.tv/console"/>
                                                            </Italic>
                                                            <Run Text=" ."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="For &quot;Scopes&quot;, paste exactly"/>
                                                            <LineBreak />
                                                            <InlineUIContainer>
                                                                <TextBox Padding="2" IsReadOnly="True"  BorderBrush="Blue" BorderThickness="1" TextWrapping="Wrap" PreviewMouseLeftButtonUp="PreviewMoustLeftButton_SelectAll" PreviewMouseLeftButtonDown="PreviewMoustLeftButton_SelectAll" Text="bits:read chat:read chat:edit channel:moderate user:read:broadcast user:edit:follows"/>
                                                            </InlineUIContainer>
                                                            <LineBreak />
                                                            <Run Text="*This permits specific access for the app functions. Please add these scopes. Currently, the app doesn't adjust to what user scopes you've selected if you don't want specific features enabled."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Click 'Connect' and copy the resulting &quot;Access Token&quot;. You can save it to your local files and paste it to the left credential box."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                    <ListItem>
                                                        <Paragraph>
                                                            <Run Text="Be sure to click &quot;Refresh Date&quot; here in the credentials which will give you the 60-day date from now in which you need to refresh the 'access token'. You would only need to perform step 3 for a new 'access token'."/>
                                                        </Paragraph>
                                                    </ListItem>
                                                </List>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Run Text="View the other tabs to setup your bot messages to events and commands."/>
                                                </Paragraph>
                                            </ListItem>
                                        </List>
                                    </Section>
                                </FlowDocument>
                            </FlowDocumentScrollViewer>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="Discord" DataContext="{Binding DataManage}">
                        <StackPanel>
                            <TextBlock IsEnabled="False"><Run Text="Add Webhook links, one per line. Bot will report notifications to each Webhook. *The incorrect 'Kind' will prevent the notification."/><LineBreak /><Run Text="Current implemented"/><LineBreak /><Run Text="'Kind':"/></TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <ListView ItemsSource="{Binding KindsWebhooks, Mode=OneWay}" SelectionMode="Single"  />
                                <DataGrid x:Name="DG_Webhooks" Height="200" Margin="10,0" AutoGenerateColumns="True" d:LayoutOverrides="LeftMargin, RightMargin" ItemsSource="{Binding Discord, Mode=OneWay}"/>
                            </StackPanel>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Bot Status Log">
                        <GroupBox Header="Bot Status Log" BorderBrush="Black" Width="Auto">
                            <TextBox x:Name="TextBlock_TwitchBotLog" DataContext="{Binding TwitchIO}" Text="{Binding StatusLog, Mode=OneWay}" TextWrapping="Wrap" Background="#FFEEEEEE" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" VerticalScrollBarVisibility="Visible" IsInactiveSelectionHighlightEnabled="True" TextChanged="TextBox_TwitchBotLog_TextChanged" />
                        </GroupBox>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Data &amp; Messages">
                <TabControl x:Name="TabControl_DataTabs">
                    <TabItem x:Name="TabItem_DataOptions" Header="Options">
                        <TabItem.Resources>
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </TabItem.Resources>
                        <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <DockPanel Margin="20" DataContext="{Binding Source={x:Static s:Settings.Default}}" HorizontalAlignment="Center" ScrollViewer.CanContentScroll="True">
                                <WrapPanel Orientation="Horizontal">
                                    <GroupBox Header="Twitch - Bot Management">
                                        <StackPanel>
                                            <CheckBox IsChecked="{Binding BotConnectionMsg, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Enable chat message when this bot connects to a channel."/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding PostMultiLive, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Enable posting to social media (e.g. Discord) multiple live messages in same day."/></TextBlock>
                                            </CheckBox>

                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Twitch - Format Bot messages">
                                        <StackPanel>
                                            <Label Content="/me changes message to all italics" />
                                            <RadioButton IsChecked="{Binding NoMeMsg, Mode=TwoWay}" Content="Disabled" Click="CheckBox_Click_SaveSettings" />
                                            <RadioButton IsChecked="{Binding InsertMeToMsg, Mode=TwoWay}" Content="Enable /me for all commands" Click="CheckBox_Click_SaveSettings" />
                                            <RadioButton IsChecked="{Binding PerComMeMsg, Mode=TwoWay}" Content="Enable /me per command" Click="CheckBox_Click_SaveSettings" />
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Any - Automatic Commands by Timer">
                                        <StackPanel Margin="5">
                                            <CheckBox IsChecked="{Binding RepeatWhenLive, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" >
                                                <TextBlock><Run Text="Enable Repeat commands only when live."/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding RepeatTimerCommands, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Add 'seconds' (whole number, e.g. 600) to the repeat timer column within the command list. Timer updates after the command runs.">
                                                <TextBlock><Run Text="Enable repeating commands."/></TextBlock>
                                            </CheckBox>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Any - Welcome Users">
                                        <StackPanel>
                                            <Label Content="Only once per user per active stream (no repeats)" />
                                            <RadioButton IsChecked="{Binding WelcomeDisabled, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Disabled"/></TextBlock>
                                            </RadioButton>
                                            <RadioButton IsChecked="{Binding WelcomeUserJoined, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Enable when viewer joins the channel"/></TextBlock>
                                            </RadioButton>
                                            <RadioButton IsChecked="{Binding WelcomeChatMsg, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Enable when a viewer first chats"/></TextBlock>
                                            </RadioButton>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Twitch - Shout Out Users">
                                        <StackPanel>
                                            <CheckBox IsChecked="{Binding AutoShout, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Auto shoutout users when they first appear in your live stream (tied to 'Welcome Users'. Add names to &quot;Auto SO&quot; tab."/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding TwitchRaidShoutOut}" Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Enable auto shoutout for incoming channel raid streamers."/></TextBlock>
                                            </CheckBox>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Twitch - Follow Options">
                                        <StackPanel>
                                            <CheckBox IsChecked="{Binding TwitchAddFollowersStart, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Will also re-perform when clicking 'Stop Bot' then 'Start Bot'.">
                                                <TextBlock TextWrapping="Wrap"><Run Text="Enable adding all followers when bot starts."/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding TwitchPruneNonFollowers, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Will also re-perform when clicking 'Stop Bot' then 'Start Bot'.">
                                                <TextBlock TextWrapping="Wrap"><Run Text="Enable action to remove non-followers from the Follower list when bot starts."/></TextBlock>
                                            </CheckBox>

                                            <Line Fill="Black" StrokeThickness="2" Stroke="Black" X2="200" HorizontalAlignment="Center" />
                                            <Label Content="Automatic Follow"/>
                                            <CheckBox IsChecked="{Binding TwitchFollowerFollowBack, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" ToolTip="Follow only if not currently following.">
                                                <TextBlock><Run Text="Enable follow-back new followers"/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding TwitchRaidFollowBack}"  ToolTip="Follow only if not currently following." Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Enable follow-back incoming raider"/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding TwitchAddFollowerNotification}"  ToolTip="Notification of the channel's live status." Click="CheckBox_Click_SaveSettings">
                                                <TextBlock><Run Text="Enable notifications for follow-back"/></TextBlock>
                                            </CheckBox>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Any - Data Management">
                                        <StackPanel>
                                            <Label>
                                                <TextBlock Foreground="Red"><Run Text="*Unchecking will remove data from database.*"/></TextBlock>
                                            </Label>
                                            <CheckBox IsChecked="{Binding ManageUsers}" Click="CheckBox_ManageData_Click">
                                                <TextBlock TextWrapping="Wrap"><Run Text="Manage channel viewers in the database, including their watchtime.*"/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding ManageFollowers}" Click="CheckBox_ManageData_Click">
                                                <TextBlock TextWrapping="Wrap"><Run Text="Manage channel followers in the database, including their followage.*"/></TextBlock>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding ManageStreamStats}" Click="CheckBox_ManageData_Click">
                                                <TextBlock TextWrapping="Wrap"><Run Text="Record Stream Stats for each stream.*"/></TextBlock>
                                            </CheckBox>
                                            <Label>
                                                <TextBlock Foreground="Red"><Run Text="*Unchecking will remove data from database.*"/></TextBlock>
                                            </Label>
                                        </StackPanel>
                                    </GroupBox>


                                    <!-- Settings Template
                                
                                <GroupBox Header="Twitch -">
                                    <StackPanel>
                                        <CheckBox IsChecked="{Binding AutoShout, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Auto </TextBlock>
                                        </CheckBox>
                                        <CheckBox IsChecked="{Binding TwitchRaidShoutOut}" Click="CheckBox_Click_SaveSettings">
                                            <TextBlock>Enable </TextBlock>
                                        </CheckBox>
                                    </StackPanel>
                                </GroupBox>
                                
                                -->

                                </WrapPanel>
                            </DockPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Auto-SO">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="450" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="When 'Auto shout out' is enabled in options, displaynames in this list will receive a shout-out upon entering the channel - when Twitch tells me they're here."/>
                            <DataGrid Grid.Row="1" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding ShoutOuts, Mode=OneWay}" AutoGenerateColumns="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Users" x:Name="TabItem_Users">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!--<Label Content="This tab is disabled while the bot is started. Stop the bot to access this tab." Grid.Row="0" />-->
                            <DataGrid x:Name="DG_Users" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding Users, Mode=OneWay}" AutoGenerateColumns="True" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" CanUserAddRows="False" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" Grid.Row="1" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Followers" x:Name="TabItem_Followers">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!--<Label Content="This tab is disabled while the bot is started. Stop the bot to access this tab." Grid.Row="0" />-->
                            <DataGrid x:Name="DG_Followers" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding Followers, Mode=OneWay}" AutoGenerateColumns="True"  AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" CanUserAddRows="False" CanUserDeleteRows="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" Grid.Row="1" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Variable Options">
                        <ListView DockPanel.Dock="Right" ItemsSource="{Binding CommandInfo.Collection}" >
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn DisplayMemberBinding="{Binding Parameter}" Header="Parameter" />
                                    <GridViewColumn DisplayMemberBinding="{Binding Value}" Header="Value"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <TabItem Header="System Events">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="55" />
                                <RowDefinition Height="100*" />
                            </Grid.RowDefinitions>
                            <TextBlock TextWrapping="Wrap" Grid.Row="0"><Run Text="Double-click the MsgStr for your custom message. Use the 'Commands' to customize to a name or relevant values."/><LineBreak/><Run Text="'Live' is a message to Discord/other services."/></TextBlock>
                            <DataGrid x:Name="DG_CommonMsgs" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding ChannelEvents, Mode=OneWay}"  AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" DockPanel.Dock="Bottom" CanUserAddRows="False" CanUserDeleteRows="False" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" Grid.Row="1">
                                <DataGrid.ToolTip>
                                    <TextBlock TextWrapping="Wrap" Width="500"><Run Text="The name column is readonly. These are for channel events the bot recognizes and responds with the specified message."/><LineBreak /><LineBreak /><Run Text="You can edit the message to customize a response fitting your channel!"/><LineBreak /><Run Text="Please see the parameters to the right to use in each message, not all will be applicable. Ensure a space before the parameter, e.g. &quot;the #user followed&quot;, the &quot; #&quot; needs to be the first character in the word."/></TextBlock>
                                </DataGrid.ToolTip>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Currency Types">
                        <Grid>
                            <DataGrid x:Name="DG_Currency" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding CurrencyType, Mode=OneWay}" AutoGenerateColumns="True" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" CanUserAddRows="False" CanUserDeleteRows="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Currency" x:Name="TabItem_CurrencyAccrual">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!--<Label Content="This tab is disabled while the bot is started. Stop the bot to access this tab." Grid.Row="0" />-->
                            <DataGrid x:Name="DG_CurrencyAccrual" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding Currency, Mode=OneWay}" AutoGenerateColumns="True" AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns" CanUserAddRows="False" CanUserDeleteRows="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" Grid.Row="1" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="Command System">
                        <TabControl>
                            <TabItem Header="Help">
                                <Grid>
                                    <TextBlock><Run Text="The 'BuiltInCommands' are those established within the bot."/><LineBreak /><Run Text="The 'socials' (specific services): add your custom message for the social media and your access URL. E.g. &quot;Visit me on Twitter at: http://wwww.twitter.com/myuser&quot;. The command will show all socials except messages that are blank or the default 'Social media url here'."/><LineBreak /><LineBreak /><Run Text="The variables within message to format a custom response:"/><LineBreak /><Run Text="#user: the user specific to the command; either 'command invoker' user or parameter to the command"/><LineBreak /><Run Text="#url: the Twitch URL with the supplied user attached - specific to 'so == shoutout' command"/><LineBreak /><Run Text="#fieldvalue: placeholder for the value from a table lookup"/><LineBreak /><Run Text="#currencyname: placeholder for the currency name - extracted from table"/><LineBreak /><Run Text="#currencyvalue: the value of a currency"/><LineBreak /><LineBreak /><Run Text="#date: the current date"/><LineBreak /><Run Text="#time: the current time"/><LineBreak /></TextBlock>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Built-In Commands">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="50" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="To use command repeat timers, set option in 'Option' tab and set the *seconds* within the command row. This repeat doesn't work with those commands requiring parameters. The '!socials', for example, is an ideal repeat commands. 1 minute = 60 seconds, 10 minutes = 600 seconds, 15 minutes = 900 seconds, 30 minutes = 1800 seconds, 1 hour = 3600 seconds. Top can be '0' for a single item, '-1' for all items, and 'n' (positive integer) for the top n items as defined by 'sort = ASC or DESC" />
                                    <DataGrid Grid.Row="1" x:Name="DG_BuiltInCommands" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding BuiltInCommands, Mode=OneWay}" AutoGenerateColumns="True"  AutoGeneratedColumns="DG_CommonMsgs_AutoGeneratedColumns"  AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" CanUserDeleteRows="False" CanUserAddRows="False" MaxColumnWidth="253" />
                                </Grid>
                            </TabItem>
                            <TabItem Header="Commands">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="50" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="To use command repeat timers, set option in 'Option' tab and set the seconds within the command row. This repeat doesn't work with those commands requiring parameters. The '!socials', for example, is an ideal repeat command. 1 minute = 60 seconds, 10 minutes = 600 seconds, 15 minutes = 900 seconds, 30 minutes = 1800 seconds, 1 hour = 3600 seconds. Top can be '0' for a single item, '-1' for all items, and 'n' (positive integer) for the top n items as defined by 'sort = ASC or DESC"/>
                                    <DataGrid Grid.Row="1" IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding Commands, Mode=OneWay}" AutoGenerateColumns="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" />
                                </Grid>
                            </TabItem>

                        </TabControl>
                    </TabItem>
                    <TabItem Header="Stream Stats" x:Name="TabItem_StreamStats">
                        <Grid>
                            <DataGrid IsSynchronizedWithCurrentItem="True" DataContext="{Binding DataManage}" ItemsSource="{Binding StreamStats, Mode=OneWay}" AutoGenerateColumns="True" CanUserAddRows="False" CanUserDeleteRows="True" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" ScrollViewer.CanContentScroll="True" />
                        </Grid>
                    </TabItem>
                    <TabItem IsEnabled="False" />
                    <TabItem Header="MultiLive Monitor">
                        <Grid x:Name="TabItem_MultiUserLiveMonitor">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="298*" />
                                <ColumnDefinition Width="52"/>
                                <ColumnDefinition Width="100"  />
                                <ColumnDefinition Width="52"/>
                                <ColumnDefinition Width="293*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock TextWrapping="Wrap" Grid.Row="0" Padding="3"><Run Text="Use this tab to set up which channels (only first 100) to watch for going live and where to post messages. Currently only Discord."/></TextBlock>
                            <Label Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Foreground="Red" Visibility="{Binding Visibility, ElementName=Label_LiveStream_MultiLiveActiveMsg}">
                                <TextBlock TextWrapping="Wrap"><Run Text="The MultiUserLiveBot is active, single channel activated."/></TextBlock>
                            </Label>
                            <TextBlock TextWrapping="Wrap" Grid.Row="0" Grid.Column="4" Text="Message for Live Notification:" />
                            <TextBox x:Name="TB_LiveMsg" Grid.Row="0" Grid.Column="4" VerticalContentAlignment="Top" 
                             DataContext="{Binding Mode=OneWay, Source={x:Static s:Settings.Default}}" Text="{Binding LiveMsg}" 
                             TextAlignment="Left" TextWrapping="Wrap" LostFocus="Settings_LostFocus" Margin="0,16,0,0">
                                <TextBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="#user" Click="MenuItem_Click" />
                                        <MenuItem Header="#category" Click="MenuItem_Click" />
                                        <MenuItem Header="#title" Click="MenuItem_Click" />
                                        <MenuItem Header="#url" Click="MenuItem_Click" />
                                    </ContextMenu>
                                </TextBox.ContextMenu>
                                <TextBox.ToolTip>
                                    <TextBlock><Run Text="Use these tags within the message and it'll be replaced before sending the posted live message."/><LineBreak /><Run Text="Available by right-click menu - insert at cursor."/><LineBreak /><Run Text="&quot;#user&quot; - channel name of the user"/><LineBreak /><Run Text="&quot;#category&quot; - the category of the stream"/><LineBreak /><Run Text="&quot;#title&quot; - the title of the stream when it goes live"/><LineBreak /><Run Text="&quot;#url&quot; - to send someone to the Twitch channel, it's already prepared &quot; twitch.tv/user &quot;"/><LineBreak /><LineBreak /><Run Text="Example: @everyone, #user is now live streaming #category - #title! Come join and say hi at: #url"/></TextBlock>
                                </TextBox.ToolTip>
                            </TextBox>

                            <DataGrid x:Name="DG_Multi_WebHooks" Grid.Row="1" Grid.RowSpan="2" Margin="5,5,5,5" DataContext="{Binding MultiLiveDataManager}" 
                              ItemsSource="{Binding MsgEndPoints, Mode=OneWay}" MaxColumnWidth="160" AlternationCount="1" 
                              AlternatingRowBackground="#FFDBFFF4" IsSynchronizedWithCurrentItem="True" />
                            <DataGrid x:Name="DG_Multi_ChannelNames" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" Margin="5,5,5,5" DataContext="{Binding MultiLiveDataManager}" 
                              ItemsSource="{Binding Channels, Mode=OneWay}" MaxColumnWidth="160"  AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" IsSynchronizedWithCurrentItem="True" RowEditEnding="DG_ChannelNames_RowEditEnding" />
                            <DataGrid x:Name="DG_Multi_LiveStreamStats" Grid.Column="4" Grid.Row="1" Margin="5,5,5,5" Grid.RowSpan="2" MaxColumnWidth="160" AlternationCount="1" AlternatingRowBackground="#FFDBFFF4" IsSynchronizedWithCurrentItem="True" DataContext="{Binding MultiLiveDataManager}" ItemsSource="{Binding LiveStream, Mode=TwoWay}" />

                            <DockPanel x:Name="Panel_BotActivity" Grid.Row="1" Grid.Column="4" Visibility="Collapsed">
                                <Label DockPanel.Dock="Top" Content="Log of Bot Activity:" />
                                <TextBox DockPanel.Dock="Bottom" x:Name="TB_BotActivityLog" Margin="5" TextWrapping="Wrap" Background="#FFEEEEEE" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" VerticalScrollBarVisibility="Visible" IsInactiveSelectionHighlightEnabled="True" TextChanged="TB_BotActivityLog_TextChanged" Text="{Binding MultiLiveStatusLog}" />
                            </DockPanel>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Bot Chat">
                <DockPanel>
                    <DockPanel LastChildFill="True" DockPanel.Dock="Left" Margin="0,0,10,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="100"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Content="Join List to organize playing games with your viewers." HorizontalContentAlignment="Center" Grid.RowSpan="3" />
                            <Label Grid.Row="1" Content="Click the 'remove' box next to the user name to remove from this list." HorizontalContentAlignment="Center" Grid.RowSpan="3" />
                            <GroupBox Grid.Row="2" Padding="10" Header="Join List Status" Grid.RowSpan="3" >
                                <StackPanel DataContext="{Binding Source={x:Static s:Settings.Default}}">
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type RadioButton}">
                                            <Setter Property="Margin" Value="3" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <RadioButton Content="Start Join List" IsChecked="{Binding UserPartyStart, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" />
                                    <RadioButton Content="Stop Join List" IsChecked="{Binding UserPartyStop, Mode=TwoWay}" Click="CheckBox_Click_SaveSettings" />
                                </StackPanel>
                            </GroupBox>

                            <ListView Grid.Row="3"  x:Name="LV_JoinList" MaxWidth="500" 
                                      ItemsSource="{Binding JoinCollection, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single" Margin="0,0,0,10">
                                <ListView.Resources>
                                    <DataTemplate x:Key="GridColCheck">
                                        <CheckBox IsChecked="{Binding Remove, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Checked="JoinCollectionCheckBox_Checked" AutomationProperties.IsRowHeader="False" />
                                    </DataTemplate>
                                </ListView.Resources>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Remove" Width="70" CellTemplate="{DynamicResource GridColCheck}" />
                                        <GridViewColumn Header="GameTag UserName" Width="200" DisplayMemberBinding="{Binding GameUserName, Mode=OneWay, UpdateSourceTrigger=Default}" />
                                        <GridViewColumn Header="Chat User" Width="200" DisplayMemberBinding="{Binding ChatUser, Mode=OneWay, UpdateSourceTrigger=Default}" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </DockPanel>
                    <DockPanel LastChildFill="True" DockPanel.Dock="Right"  Background="#FF2B2929" >
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" Margin="5" Background="White" Width="410">
                            <Button Padding="10,4" Margin="10" Content="Pop-Out Chat Box" Click="PopOutChatButton_Click" Height="26" Opacity="1" IsEnabled="False" />
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Label Padding="0" Content="Pop-out Opacity"/>
                                <TextBlock Text="50%"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Right" Margin="0,4,15,4">
                            <TextBox Width="365" />
                            <Button Content="Send" Margin="10,0,0,0" Padding="8,2" />
                        </StackPanel>
                        <FlowDocumentScrollViewer DockPanel.Dock="Top" BorderThickness="1,1,1,1" x:Name="FlowDoc_ChatBox" ScrollViewer.CanContentScroll="True" DataContext="{Binding ChatData, Mode=OneWay}" Document="{Binding Mode=OneWay, NotifyOnSourceUpdated=True}" Foreground="#FFC5C3C3" />
                    </DockPanel>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
